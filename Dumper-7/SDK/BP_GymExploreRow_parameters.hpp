#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GymExploreRow

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_GymExploreRow.BP_GymExploreRow_C.AddElement
// 0x0028 (0x0028 - 0x0000)
struct BP_GymExploreRow_C_AddElement final
{
public:
	class UUserWidget*                            Element;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x000C(0x0008)(NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GymExploreRow_C_AddElement) == 0x000008, "Wrong alignment on BP_GymExploreRow_C_AddElement");
static_assert(sizeof(BP_GymExploreRow_C_AddElement) == 0x000028, "Wrong size on BP_GymExploreRow_C_AddElement");
static_assert(offsetof(BP_GymExploreRow_C_AddElement, Element) == 0x000000, "Member 'BP_GymExploreRow_C_AddElement::Element' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_AddElement, Temp_int_Variable) == 0x000008, "Member 'BP_GymExploreRow_C_AddElement::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_AddElement, K2Node_MakeStruct_SlateChildSize) == 0x00000C, "Member 'BP_GymExploreRow_C_AddElement::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_AddElement, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000018, "Member 'BP_GymExploreRow_C_AddElement::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_AddElement, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_GymExploreRow_C_AddElement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GymExploreRow.BP_GymExploreRow_C.ExecuteUbergraph_BP_GymExploreRow
// 0x0008 (0x0008 - 0x0000)
struct BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow) == 0x000004, "Wrong alignment on BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow");
static_assert(sizeof(BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow) == 0x000008, "Wrong size on BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow");
static_assert(offsetof(BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow, EntryPoint) == 0x000000, "Member 'BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow, CallFunc_TextIsEmpty_ReturnValue) == 0x000005, "Member 'BP_GymExploreRow_C_ExecuteUbergraph_BP_GymExploreRow::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function BP_GymExploreRow.BP_GymExploreRow_C.FillRow
// 0x0030 (0x0030 - 0x0000)
struct BP_GymExploreRow_C_FillRow final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x000C(0x0008)(NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USpacer*                                CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GymExploreRow_C_FillRow) == 0x000008, "Wrong alignment on BP_GymExploreRow_C_FillRow");
static_assert(sizeof(BP_GymExploreRow_C_FillRow) == 0x000030, "Wrong size on BP_GymExploreRow_C_FillRow");
static_assert(offsetof(BP_GymExploreRow_C_FillRow, Temp_int_Variable) == 0x000000, "Member 'BP_GymExploreRow_C_FillRow::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_FillRow, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_GymExploreRow_C_FillRow::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_FillRow, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GymExploreRow_C_FillRow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_FillRow, K2Node_MakeStruct_SlateChildSize) == 0x00000C, "Member 'BP_GymExploreRow_C_FillRow::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_FillRow, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'BP_GymExploreRow_C_FillRow::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_FillRow, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_GymExploreRow_C_FillRow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GymExploreRow_C_FillRow, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000028, "Member 'BP_GymExploreRow_C_FillRow::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function BP_GymExploreRow.BP_GymExploreRow_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_GymExploreRow_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GymExploreRow_C_PreConstruct) == 0x000001, "Wrong alignment on BP_GymExploreRow_C_PreConstruct");
static_assert(sizeof(BP_GymExploreRow_C_PreConstruct) == 0x000001, "Wrong size on BP_GymExploreRow_C_PreConstruct");
static_assert(offsetof(BP_GymExploreRow_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_GymExploreRow_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

