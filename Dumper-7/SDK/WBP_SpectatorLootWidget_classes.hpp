#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpectatorLootWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "GYMGAME_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SpectatorLootWidget.WBP_SpectatorLootWidget_C
// 0x0058 (0x0398 - 0x0340)
class UWBP_SpectatorLootWidget_C final : public UGymGuiSpectatorRuleWidgetLoot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowStatusPanel;                                   // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CheckpointBrushBG;                                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CounterText;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           LootCounter;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RuleStatusText;                                    // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TimerBrushBG;                                      // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RoyaleQualified_C*                 WBP_RoyaleQualified;                               // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGymLootReplicatedData*                 RuleData;                                          // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UGymParticipantRepDataLoot*             ParticipantData;                                   // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EGymRulesState                                LastRuleStatus;                                    // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_SpectatorLootWidget(int32 EntryPoint);
	class FText GetLootText();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TickLootTextAndVisibility();
	void TickParticipantAndRule();
	void TickUI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SpectatorLootWidget_C">();
	}
	static class UWBP_SpectatorLootWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SpectatorLootWidget_C>();
	}
};
static_assert(alignof(UWBP_SpectatorLootWidget_C) == 0x000008, "Wrong alignment on UWBP_SpectatorLootWidget_C");
static_assert(sizeof(UWBP_SpectatorLootWidget_C) == 0x000398, "Wrong size on UWBP_SpectatorLootWidget_C");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, UberGraphFrame) == 0x000340, "Member 'UWBP_SpectatorLootWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, ShowStatusPanel) == 0x000348, "Member 'UWBP_SpectatorLootWidget_C::ShowStatusPanel' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, CheckpointBrushBG) == 0x000350, "Member 'UWBP_SpectatorLootWidget_C::CheckpointBrushBG' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, CounterText) == 0x000358, "Member 'UWBP_SpectatorLootWidget_C::CounterText' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, LootCounter) == 0x000360, "Member 'UWBP_SpectatorLootWidget_C::LootCounter' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, RuleStatusText) == 0x000368, "Member 'UWBP_SpectatorLootWidget_C::RuleStatusText' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, TimerBrushBG) == 0x000370, "Member 'UWBP_SpectatorLootWidget_C::TimerBrushBG' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, WBP_RoyaleQualified) == 0x000378, "Member 'UWBP_SpectatorLootWidget_C::WBP_RoyaleQualified' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, RuleData) == 0x000380, "Member 'UWBP_SpectatorLootWidget_C::RuleData' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, ParticipantData) == 0x000388, "Member 'UWBP_SpectatorLootWidget_C::ParticipantData' has a wrong offset!");
static_assert(offsetof(UWBP_SpectatorLootWidget_C, LastRuleStatus) == 0x000390, "Member 'UWBP_SpectatorLootWidget_C::LastRuleStatus' has a wrong offset!");

}

