#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_VoteWidget

#include "Basic.hpp"

#include "WBP_VoteWidget_classes.hpp"
#include "WBP_VoteWidget_parameters.hpp"


namespace SDK
{

// Function WBP_VoteWidget.WBP_VoteWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_VoteWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.ExecuteUbergraph_WBP_VoteWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_VoteWidget_C::ExecuteUbergraph_WBP_VoteWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "ExecuteUbergraph_WBP_VoteWidget");

	Params::WBP_VoteWidget_C_ExecuteUbergraph_WBP_VoteWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.FormatTime
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Out                                                    (Parm, OutParm)

void UWBP_VoteWidget_C::FormatTime(double Time, class FText* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "FormatTime");

	Params::WBP_VoteWidget_C_FormatTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.OnVotedChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDidVote                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_VoteWidget_C::OnVotedChanged(bool bDidVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "OnVotedChanged");

	Params::WBP_VoteWidget_C_OnVotedChanged Parms{};

	Parms.bDidVote = bDidVote;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.OnVoteEnded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVoteState                              VoteResult                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDidVote                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_VoteWidget_C::OnVoteEnded(EVoteState VoteResult, bool bDidVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "OnVoteEnded");

	Params::WBP_VoteWidget_C_OnVoteEnded Parms{};

	Parms.VoteResult = VoteResult;
	Parms.bDidVote = bDidVote;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.OnVoteStarted
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::OnVoteStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "OnVoteStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.OnVoteStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVoteState                              VoteState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_VoteWidget_C::OnVoteStateChanged(EVoteState VoteState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "OnVoteStateChanged");

	Params::WBP_VoteWidget_C_OnVoteStateChanged Parms{};

	Parms.VoteState = VoteState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_VoteWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "Tick");

	Params::WBP_VoteWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.TickUI
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::TickUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "TickUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.TryInit
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::TryInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "TryInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.UpdateCancelVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::UpdateCancelVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "UpdateCancelVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.UpdateInfoText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::UpdateInfoText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "UpdateInfoText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.UpdateJoinMatchVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::UpdateJoinMatchVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "UpdateJoinMatchVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.UpdateJoinText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::UpdateJoinText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "UpdateJoinText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.UpdatePlayerCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::UpdatePlayerCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "UpdatePlayerCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.UpdateStartVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::UpdateStartVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "UpdateStartVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.UpdateTexts
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::UpdateTexts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "UpdateTexts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.UpdateTimerText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::UpdateTimerText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "UpdateTimerText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.UpdateVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "UpdateVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_VoteWidget.WBP_VoteWidget_C.UpdateVoteButtonVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_VoteWidget_C::UpdateVoteButtonVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_VoteWidget_C", "UpdateVoteButtonVisibility");

	UObject::ProcessEvent(Func, nullptr);
}

}

