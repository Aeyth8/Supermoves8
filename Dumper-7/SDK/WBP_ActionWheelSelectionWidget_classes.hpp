#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ActionWheelSelectionWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ActionWheelSelectionWidget.WBP_ActionWheelSelectionWidget_C
// 0x0048 (0x0388 - 0x0340)
class UWBP_ActionWheelSelectionWidget_C final : public UGymGuiRadialSelectionWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Background;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ContentText;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EmoteIcon;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UnderlineFlipbook;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymMetaAction*                         Action;                                            // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          LastTickCanPerform;                                // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanPerform;                                        // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHighlighted;                                     // 0x0382(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CannotPerformState();
	void CanPerformState();
	void Construct();
	void ExecuteUbergraph_WBP_ActionWheelSelectionWidget(int32 EntryPoint);
	void Highlight();
	void Invalidate();
	void Opened();
	void SetupWidget(class UGymMetaAction* Action_0);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UnHighlight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ActionWheelSelectionWidget_C">();
	}
	static class UWBP_ActionWheelSelectionWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ActionWheelSelectionWidget_C>();
	}
};
static_assert(alignof(UWBP_ActionWheelSelectionWidget_C) == 0x000008, "Wrong alignment on UWBP_ActionWheelSelectionWidget_C");
static_assert(sizeof(UWBP_ActionWheelSelectionWidget_C) == 0x000388, "Wrong size on UWBP_ActionWheelSelectionWidget_C");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, UberGraphFrame) == 0x000340, "Member 'UWBP_ActionWheelSelectionWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, HoverAnim) == 0x000348, "Member 'UWBP_ActionWheelSelectionWidget_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, Background) == 0x000350, "Member 'UWBP_ActionWheelSelectionWidget_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, ContentText) == 0x000358, "Member 'UWBP_ActionWheelSelectionWidget_C::ContentText' has a wrong offset!");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, EmoteIcon) == 0x000360, "Member 'UWBP_ActionWheelSelectionWidget_C::EmoteIcon' has a wrong offset!");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, UnderlineFlipbook) == 0x000368, "Member 'UWBP_ActionWheelSelectionWidget_C::UnderlineFlipbook' has a wrong offset!");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, IsValid) == 0x000370, "Member 'UWBP_ActionWheelSelectionWidget_C::IsValid' has a wrong offset!");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, Action) == 0x000378, "Member 'UWBP_ActionWheelSelectionWidget_C::Action' has a wrong offset!");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, LastTickCanPerform) == 0x000380, "Member 'UWBP_ActionWheelSelectionWidget_C::LastTickCanPerform' has a wrong offset!");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, CanPerform) == 0x000381, "Member 'UWBP_ActionWheelSelectionWidget_C::CanPerform' has a wrong offset!");
static_assert(offsetof(UWBP_ActionWheelSelectionWidget_C, IsHighlighted) == 0x000382, "Member 'UWBP_ActionWheelSelectionWidget_C::IsHighlighted' has a wrong offset!");

}

