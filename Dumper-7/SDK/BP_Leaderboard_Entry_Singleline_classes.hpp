#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Leaderboard_Entry_Singleline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_Leaderboard_Entry_Singleline.BP_Leaderboard_Entry_Singleline_C
// 0x0038 (0x02F8 - 0x02C0)
class UBP_Leaderboard_Entry_Singleline_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       Name_0;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Placement;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Time;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGymLeaderboardRow                     Data;                                              // 0x02E0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void Construct();
	void ExecuteUbergraph_BP_Leaderboard_Entry_Singleline(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Leaderboard_Entry_Singleline_C">();
	}
	static class UBP_Leaderboard_Entry_Singleline_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Leaderboard_Entry_Singleline_C>();
	}
};
static_assert(alignof(UBP_Leaderboard_Entry_Singleline_C) == 0x000008, "Wrong alignment on UBP_Leaderboard_Entry_Singleline_C");
static_assert(sizeof(UBP_Leaderboard_Entry_Singleline_C) == 0x0002F8, "Wrong size on UBP_Leaderboard_Entry_Singleline_C");
static_assert(offsetof(UBP_Leaderboard_Entry_Singleline_C, UberGraphFrame) == 0x0002C0, "Member 'UBP_Leaderboard_Entry_Singleline_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Leaderboard_Entry_Singleline_C, Name_0) == 0x0002C8, "Member 'UBP_Leaderboard_Entry_Singleline_C::Name_0' has a wrong offset!");
static_assert(offsetof(UBP_Leaderboard_Entry_Singleline_C, Placement) == 0x0002D0, "Member 'UBP_Leaderboard_Entry_Singleline_C::Placement' has a wrong offset!");
static_assert(offsetof(UBP_Leaderboard_Entry_Singleline_C, Time) == 0x0002D8, "Member 'UBP_Leaderboard_Entry_Singleline_C::Time' has a wrong offset!");
static_assert(offsetof(UBP_Leaderboard_Entry_Singleline_C, Data) == 0x0002E0, "Member 'UBP_Leaderboard_Entry_Singleline_C::Data' has a wrong offset!");

}

