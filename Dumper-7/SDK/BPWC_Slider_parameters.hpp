#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPWC_Slider

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BPWC_Slider.BPWC_Slider_C.BndEvt__BPWC_Slider_sld_value_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BPWC_Slider_C_BndEvt__BPWC_Slider_sld_value_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWC_Slider_C_BndEvt__BPWC_Slider_sld_value_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on BPWC_Slider_C_BndEvt__BPWC_Slider_sld_value_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(BPWC_Slider_C_BndEvt__BPWC_Slider_sld_value_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on BPWC_Slider_C_BndEvt__BPWC_Slider_sld_value_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(BPWC_Slider_C_BndEvt__BPWC_Slider_sld_value_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'BPWC_Slider_C_BndEvt__BPWC_Slider_sld_value_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function BPWC_Slider.BPWC_Slider_C.ExecuteUbergraph_BPWC_Slider
// 0x0048 (0x0048 - 0x0000)
struct BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0020(0x0018)()
	float                                         CallFunc_SetMinValue_InValue_ImplicitCast;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxValue_InValue_ImplicitCast;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider) == 0x000008, "Wrong alignment on BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider");
static_assert(sizeof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider) == 0x000048, "Wrong size on BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider");
static_assert(offsetof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider, EntryPoint) == 0x000000, "Member 'BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider, CallFunc_BreakVector2D_X) == 0x000008, "Member 'BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider, K2Node_Event_IsDesignTime) == 0x000018, "Member 'BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider, K2Node_ComponentBoundEvent_Value) == 0x00001C, "Member 'BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000020, "Member 'BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider, CallFunc_SetMinValue_InValue_ImplicitCast) == 0x000038, "Member 'BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider::CallFunc_SetMinValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider, CallFunc_SetMaxValue_InValue_ImplicitCast) == 0x00003C, "Member 'BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider::CallFunc_SetMaxValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000040, "Member 'BPWC_Slider_C_ExecuteUbergraph_BPWC_Slider::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function BPWC_Slider.BPWC_Slider_C.OnPreviewMouseButtonDown
// 0x0308 (0x0308 - 0x0000)
struct BPWC_Slider_C_OnPreviewMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0220(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0240(0x00B8)()
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWC_Slider_C_OnPreviewMouseButtonDown) == 0x000008, "Wrong alignment on BPWC_Slider_C_OnPreviewMouseButtonDown");
static_assert(sizeof(BPWC_Slider_C_OnPreviewMouseButtonDown) == 0x000308, "Wrong size on BPWC_Slider_C_OnPreviewMouseButtonDown");
static_assert(offsetof(BPWC_Slider_C_OnPreviewMouseButtonDown, MyGeometry) == 0x000000, "Member 'BPWC_Slider_C_OnPreviewMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_OnPreviewMouseButtonDown, MouseEvent) == 0x000038, "Member 'BPWC_Slider_C_OnPreviewMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_OnPreviewMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'BPWC_Slider_C_OnPreviewMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_OnPreviewMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'BPWC_Slider_C_OnPreviewMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_OnPreviewMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000220, "Member 'BPWC_Slider_C_OnPreviewMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_OnPreviewMouseButtonDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000238, "Member 'BPWC_Slider_C_OnPreviewMouseButtonDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_OnPreviewMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000240, "Member 'BPWC_Slider_C_OnPreviewMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_OnPreviewMouseButtonDown, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x0002F8, "Member 'BPWC_Slider_C_OnPreviewMouseButtonDown::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_OnPreviewMouseButtonDown, CallFunc_GetCurrentInputType_ReturnValue) == 0x000300, "Member 'BPWC_Slider_C_OnPreviewMouseButtonDown::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_OnPreviewMouseButtonDown, K2Node_SwitchEnum_CmpSuccess) == 0x000301, "Member 'BPWC_Slider_C_OnPreviewMouseButtonDown::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPWC_Slider.BPWC_Slider_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPWC_Slider_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWC_Slider_C_PreConstruct) == 0x000001, "Wrong alignment on BPWC_Slider_C_PreConstruct");
static_assert(sizeof(BPWC_Slider_C_PreConstruct) == 0x000001, "Wrong size on BPWC_Slider_C_PreConstruct");
static_assert(offsetof(BPWC_Slider_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPWC_Slider_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPWC_Slider.BPWC_Slider_C.SetDisabled
// 0x0001 (0x0001 - 0x0000)
struct BPWC_Slider_C_SetDisabled final
{
public:
	bool                                          IsDisabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWC_Slider_C_SetDisabled) == 0x000001, "Wrong alignment on BPWC_Slider_C_SetDisabled");
static_assert(sizeof(BPWC_Slider_C_SetDisabled) == 0x000001, "Wrong size on BPWC_Slider_C_SetDisabled");
static_assert(offsetof(BPWC_Slider_C_SetDisabled, IsDisabled) == 0x000000, "Member 'BPWC_Slider_C_SetDisabled::IsDisabled' has a wrong offset!");

// Function BPWC_Slider.BPWC_Slider_C.SetValue
// 0x0028 (0x0028 - 0x0000)
struct BPWC_Slider_C_SetValue final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0008(0x0018)()
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPWC_Slider_C_SetValue) == 0x000008, "Wrong alignment on BPWC_Slider_C_SetValue");
static_assert(sizeof(BPWC_Slider_C_SetValue) == 0x000028, "Wrong size on BPWC_Slider_C_SetValue");
static_assert(offsetof(BPWC_Slider_C_SetValue, NewValue) == 0x000000, "Member 'BPWC_Slider_C_SetValue::NewValue' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_SetValue, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000008, "Member 'BPWC_Slider_C_SetValue::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPWC_Slider_C_SetValue, CallFunc_SetValue_InValue_ImplicitCast) == 0x000020, "Member 'BPWC_Slider_C_SetValue::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

}

