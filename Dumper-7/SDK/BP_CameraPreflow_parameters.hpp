#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CameraPreflow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GYMGAME_structs.hpp"


namespace SDK::Params
{

// Function BP_CameraPreflow.BP_CameraPreflow_C.ExecuteUbergraph_BP_CameraPreflow
// 0x0048 (0x0048 - 0x0000)
struct BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGymPlayerControllerWithChat_C*         K2Node_DynamicCast_AsGym_Player_Controller_with_Chat; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymFadeWidget*                         CallFunc_GetFadeWidget_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TickCameraMovementFlythrough_DeltaTime_ImplicitCast; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TickCameramovementPreraceState_DeltaSeconds_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow) == 0x000008, "Wrong alignment on BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow");
static_assert(sizeof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow) == 0x000048, "Wrong size on BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, EntryPoint) == 0x000000, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, K2Node_DynamicCast_AsGym_Player_Controller_with_Chat) == 0x000010, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::K2Node_DynamicCast_AsGym_Player_Controller_with_Chat' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, CallFunc_IsDedicatedServer_ReturnValue) == 0x000019, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, CallFunc_GetFadeWidget_ReturnValue) == 0x000020, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::CallFunc_GetFadeWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, K2Node_Event_DeltaSeconds) == 0x00002C, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, CallFunc_GetPlayerController_ReturnValue_1) == 0x000030, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, CallFunc_TickCameraMovementFlythrough_DeltaTime_ImplicitCast) == 0x000038, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::CallFunc_TickCameraMovementFlythrough_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow, CallFunc_TickCameramovementPreraceState_DeltaSeconds_ImplicitCast) == 0x000040, "Member 'BP_CameraPreflow_C_ExecuteUbergraph_BP_CameraPreflow::CallFunc_TickCameramovementPreraceState_DeltaSeconds_ImplicitCast' has a wrong offset!");

// Function BP_CameraPreflow.BP_CameraPreflow_C.FindNextLocation
// 0x000C (0x000C - 0x0000)
struct BP_CameraPreflow_C_FindNextLocation final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraPreflow_C_FindNextLocation) == 0x000004, "Wrong alignment on BP_CameraPreflow_C_FindNextLocation");
static_assert(sizeof(BP_CameraPreflow_C_FindNextLocation) == 0x00000C, "Wrong size on BP_CameraPreflow_C_FindNextLocation");
static_assert(offsetof(BP_CameraPreflow_C_FindNextLocation, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_CameraPreflow_C_FindNextLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_FindNextLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_CameraPreflow_C_FindNextLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_FindNextLocation, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'BP_CameraPreflow_C_FindNextLocation::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CameraPreflow.BP_CameraPreflow_C.GenerateCameraLocations
// 0x06E0 (0x06E0 - 0x0000)
struct BP_CameraPreflow_C_GenerateCameraLocations final
{
public:
	int32                                         BestIndex;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTestIndex;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BestForwardDistance;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CurrentSpline;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentActor;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AGymLootActor*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x00B8(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x00C8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x02A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit_1;               // 0x0398(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue_1;          // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483[0x1];                                      // 0x0483(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0500(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x051C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55A[0x2];                                      // 0x055A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x05D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x05F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0638(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0650(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_695[0x3];                                      // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AGymCheckpointPiece*>            CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0698(0x0010)(ReferenceParm)
	TArray<class AGymStartPiece*>                 CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x06A8(0x0010)(ReferenceParm)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_BestForwardDistance_ImplicitCast; // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraPreflow_C_GenerateCameraLocations) == 0x000010, "Wrong alignment on BP_CameraPreflow_C_GenerateCameraLocations");
static_assert(sizeof(BP_CameraPreflow_C_GenerateCameraLocations) == 0x0006E0, "Wrong size on BP_CameraPreflow_C_GenerateCameraLocations");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, BestIndex) == 0x000000, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::BestIndex' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CurrentTestIndex) == 0x000004, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CurrentTestIndex' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, BestForwardDistance) == 0x000008, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::BestForwardDistance' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, Distance) == 0x000010, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::Distance' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, HitLocation) == 0x000018, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CurrentSpline) == 0x000030, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CurrentSpline' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CurrentActor) == 0x000038, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CurrentActor' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, Temp_bool_Variable) == 0x000040, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000088, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A4, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, Temp_bool_Variable_1) == 0x0000A5, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, Temp_int_Loop_Counter_Variable_1) == 0x0000A8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, Temp_int_Array_Index_Variable_1) == 0x0000B4, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000B8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_GetAllActorsWithInterface_OutActors) == 0x0000C8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000D8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000F0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000108, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakRotator_Roll) == 0x000110, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakRotator_Pitch) == 0x000114, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakRotator_Yaw) == 0x000118, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000120, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000138, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Array_Get_Item) == 0x000150, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Array_Length_ReturnValue) == 0x000154, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, Temp_int_Variable) == 0x000158, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Less_IntInt_ReturnValue) == 0x00015C, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Multiply_IntInt_ReturnValue) == 0x000160, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Add_IntInt_ReturnValue_2) == 0x000164, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000168, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BooleanAND_ReturnValue) == 0x000169, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000170, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000178, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000180, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_MapRangeClamped_ReturnValue) == 0x000188, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_MakeRotator_ReturnValue) == 0x000190, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_MakeTransform_ReturnValue) == 0x0001B0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Array_Add_ReturnValue) == 0x000210, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_GetActorForwardVector_ReturnValue) == 0x000218, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000230, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_RotateAngleAxis_ReturnValue) == 0x000248, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000260, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000278, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000290, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_SphereTraceSingle_OutHit) == 0x0002A8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_SphereTraceSingle_ReturnValue) == 0x000390, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_SphereTraceSingle_OutHit_1) == 0x000398, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_SphereTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_SphereTraceSingle_ReturnValue_1) == 0x000480, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_SphereTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_bBlockingHit) == 0x000481, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_bInitialOverlap) == 0x000482, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_Time) == 0x000484, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_Distance) == 0x000488, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_Location) == 0x000490, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_ImpactPoint) == 0x0004A8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_Normal) == 0x0004C0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_ImpactNormal) == 0x0004D8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_PhysMat) == 0x0004F0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_HitActor) == 0x0004F8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_HitComponent) == 0x000500, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_HitBoneName) == 0x000508, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_BoneName) == 0x000510, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_HitItem) == 0x000518, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_ElementIndex) == 0x00051C, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_FaceIndex) == 0x000520, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_TraceStart) == 0x000528, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_TraceEnd) == 0x000540, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000558, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000559, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_Time_1) == 0x00055C, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_Distance_1) == 0x000560, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_Location_1) == 0x000568, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000580, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_Normal_1) == 0x000598, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0005B0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_PhysMat_1) == 0x0005C8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_HitActor_1) == 0x0005D0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_HitComponent_1) == 0x0005D8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_HitBoneName_1) == 0x0005E0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_BoneName_1) == 0x0005E8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_HitItem_1) == 0x0005F0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_ElementIndex_1) == 0x0005F4, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_FaceIndex_1) == 0x0005F8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_TraceStart_1) == 0x000600, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_BreakHitResult_TraceEnd_1) == 0x000618, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000630, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000638, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, K2Node_Select_Default) == 0x000650, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000668, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Vector_Distance_ReturnValue) == 0x000680, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Array_Get_Item_1) == 0x000688, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Array_Length_ReturnValue_1) == 0x000690, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Less_IntInt_ReturnValue_1) == 0x000694, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000698, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x0006A8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0006B8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x0006C0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0006C4, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0006C8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, K2Node_VariableSet_BestForwardDistance_ImplicitCast) == 0x0006D0, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::K2Node_VariableSet_BestForwardDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GenerateCameraLocations, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0006D8, "Member 'BP_CameraPreflow_C_GenerateCameraLocations::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_CameraPreflow.BP_CameraPreflow_C.GetPreflowTime
// 0x0068 (0x0068 - 0x0000)
struct BP_CameraPreflow_C_GetPreflowTime final
{
public:
	double                                        PreflowTime;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GymMap_C*                           CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGymLevelKit                           CallFunc_GetLevelKit_ReturnValue;                  // 0x0010(0x0050)()
	double                                        K2Node_FunctionResult_PreflowTime_ImplicitCast;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraPreflow_C_GetPreflowTime) == 0x000008, "Wrong alignment on BP_CameraPreflow_C_GetPreflowTime");
static_assert(sizeof(BP_CameraPreflow_C_GetPreflowTime) == 0x000068, "Wrong size on BP_CameraPreflow_C_GetPreflowTime");
static_assert(offsetof(BP_CameraPreflow_C_GetPreflowTime, PreflowTime) == 0x000000, "Member 'BP_CameraPreflow_C_GetPreflowTime::PreflowTime' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GetPreflowTime, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'BP_CameraPreflow_C_GetPreflowTime::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GetPreflowTime, CallFunc_GetLevelKit_ReturnValue) == 0x000010, "Member 'BP_CameraPreflow_C_GetPreflowTime::CallFunc_GetLevelKit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_GetPreflowTime, K2Node_FunctionResult_PreflowTime_ImplicitCast) == 0x000060, "Member 'BP_CameraPreflow_C_GetPreflowTime::K2Node_FunctionResult_PreflowTime_ImplicitCast' has a wrong offset!");

// Function BP_CameraPreflow.BP_CameraPreflow_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CameraPreflow_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraPreflow_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CameraPreflow_C_ReceiveTick");
static_assert(sizeof(BP_CameraPreflow_C_ReceiveTick) == 0x000004, "Wrong size on BP_CameraPreflow_C_ReceiveTick");
static_assert(offsetof(BP_CameraPreflow_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CameraPreflow_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CameraPreflow.BP_CameraPreflow_C.TickCameraMovementFlythrough
// 0x02D0 (0x02D0 - 0x0000)
struct BP_CameraPreflow_C_TickCameraMovementFlythrough final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0090(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_223[0x1];                                      // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraPreflow_C_TickCameraMovementFlythrough) == 0x000010, "Wrong alignment on BP_CameraPreflow_C_TickCameraMovementFlythrough");
static_assert(sizeof(BP_CameraPreflow_C_TickCameraMovementFlythrough) == 0x0002D0, "Wrong size on BP_CameraPreflow_C_TickCameraMovementFlythrough");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, DeltaTime) == 0x000000, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000090, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakTransform_Location) == 0x000098, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakTransform_Rotation) == 0x0000B0, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakRotator_Roll) == 0x0000E0, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakRotator_Pitch) == 0x0000E4, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakRotator_Yaw) == 0x0000E8, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000F0, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001D8, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_MakeRotator_ReturnValue) == 0x0001F0, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_MakeRotator_ReturnValue_1) == 0x000208, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000220, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000221, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Not_PreBool_ReturnValue_1) == 0x000222, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakRotator_Roll_1) == 0x000224, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakRotator_Pitch_1) == 0x000228, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakRotator_Yaw_1) == 0x00022C, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BooleanAND_ReturnValue) == 0x000230, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakRotator_Roll_2) == 0x000234, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakRotator_Pitch_2) == 0x000238, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_BreakRotator_Yaw_2) == 0x00023C, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_GetFloatValue_ReturnValue) == 0x000240, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Lerp_ReturnValue) == 0x000248, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_MakeRotator_ReturnValue_2) == 0x000250, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000268, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000270, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000278, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_FClamp_ReturnValue) == 0x000280, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000288, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000290, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000298, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0002A0, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x0002A4, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Lerp_B_ImplicitCast) == 0x0002A8, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Lerp_A_ImplicitCast) == 0x0002B0, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0002B8, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameraMovementFlythrough, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x0002C0, "Member 'BP_CameraPreflow_C_TickCameraMovementFlythrough::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");

// Function BP_CameraPreflow.BP_CameraPreflow_C.TickCameramovementPreraceState
// 0x0890 (0x0890 - 0x0000)
struct BP_CameraPreflow_C_TickCameramovementPreraceState final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreraceStateTime;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Character;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_4;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_5;        // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_6;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerPerspective_ReturnValue;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetPreflowTime_PreflowTime;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPreflowTime_PreflowTime_1;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_7;        // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_8;        // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_9;        // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TraceDist_Out_Hit_Distance;               // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceDist_ReturnValue;                    // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_2;      // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_2;        // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_10;       // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_3;        // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TraceDist_Out_Hit_Distance_1;             // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceDist_ReturnValue_1;                  // 0x0434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435[0x3];                                      // 0x0435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_3;      // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_6;      // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_11;       // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_7;      // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_9;           // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGymPlayerController*                   K2Node_DynamicCast_AsGym_Player_Controller;        // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_502[0x6];                                      // 0x0502(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0520(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_10;          // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_4;        // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_4;      // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_8;      // 0x06D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_9;      // 0x06F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_5;        // 0x0708(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_11;          // 0x0720(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_10;     // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TraceDist_Out_Hit_Distance_2;             // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TraceDist_ReturnValue_2;                  // 0x0754(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_755[0x3];                                      // 0x0755(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_5;      // 0x0758(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_11;     // 0x0778(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_12;          // 0x0798(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_12;       // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_13;          // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_12;     // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_14;          // 0x07F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_15;          // 0x0810(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_16;          // 0x0828(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_17;          // 0x0848(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864[0x4];                                      // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_874[0x4];                                      // 0x0874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraPreflow_C_TickCameramovementPreraceState) == 0x000008, "Wrong alignment on BP_CameraPreflow_C_TickCameramovementPreraceState");
static_assert(sizeof(BP_CameraPreflow_C_TickCameramovementPreraceState) == 0x000890, "Wrong size on BP_CameraPreflow_C_TickCameramovementPreraceState");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, DeltaSeconds) == 0x000000, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, PreraceStateTime) == 0x000008, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::PreraceStateTime' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, EndLocation) == 0x000010, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::EndLocation' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, StartLocation) == 0x000028, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, Character) == 0x000040, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::Character' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000048, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000060, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000078, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x000090, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_4) == 0x0000A8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_5) == 0x0000C8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_6) == 0x0000E0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetPlayerPerspective_ReturnValue) == 0x0000F8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetPlayerPerspective_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetPreflowTime_PreflowTime) == 0x000100, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetPreflowTime_PreflowTime' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000108, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetPreflowTime_PreflowTime_1) == 0x000110, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetPreflowTime_PreflowTime_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_7) == 0x000120, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_8) == 0x000138, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000150, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_BreakRotator_Roll) == 0x000168, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_BreakRotator_Pitch) == 0x00016C, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_BreakRotator_Yaw) == 0x000170, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000178, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000190, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorRightVector_ReturnValue) == 0x000198, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_MakeRotator_ReturnValue) == 0x0001B0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorForwardVector_ReturnValue) == 0x0001C8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0001E0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001E8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000200, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue) == 0x000218, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorRightVector_ReturnValue_1) == 0x000230, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000248, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_9) == 0x000260, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000278, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000290, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002A8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0002C0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_TraceDist_Out_Hit_Distance) == 0x0002D8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_TraceDist_Out_Hit_Distance' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_TraceDist_ReturnValue) == 0x0002DC, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_TraceDist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorForwardVector_ReturnValue_2) == 0x0002E0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000300, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_SelectFloat_ReturnValue) == 0x000318, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000320, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000338, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorRightVector_ReturnValue_2) == 0x000340, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorRightVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_10) == 0x000358, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000370, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x000388, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorRightVector_ReturnValue_3) == 0x0003A0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorRightVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0003B8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x0003D0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_4) == 0x0003E8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000400, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000418, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_TraceDist_Out_Hit_Distance_1) == 0x000430, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_TraceDist_Out_Hit_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_TraceDist_ReturnValue_1) == 0x000434, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_TraceDist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000438, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorForwardVector_ReturnValue_3) == 0x000440, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_SelectFloat_ReturnValue_1) == 0x000458, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_6) == 0x000460, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_11) == 0x000478, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_7) == 0x000490, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_7) == 0x0004A8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_8) == 0x0004C0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_9) == 0x0004D8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetPlayerController_ReturnValue) == 0x0004F0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, K2Node_DynamicCast_AsGym_Player_Controller) == 0x0004F8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::K2Node_DynamicCast_AsGym_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, K2Node_DynamicCast_bSuccess) == 0x000500, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000501, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_VLerp_ReturnValue) == 0x000508, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000520, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000608, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000610, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000618, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000620, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_FClamp_ReturnValue) == 0x000638, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x000640, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000648, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x000660, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x000678, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_10) == 0x000690, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorRightVector_ReturnValue_4) == 0x0006A8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorRightVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorForwardVector_ReturnValue_4) == 0x0006C0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_8) == 0x0006D8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_9) == 0x0006F0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorRightVector_ReturnValue_5) == 0x000708, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorRightVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_11) == 0x000720, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_10) == 0x000738, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_TraceDist_Out_Hit_Distance_2) == 0x000750, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_TraceDist_Out_Hit_Distance_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_TraceDist_ReturnValue_2) == 0x000754, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_TraceDist_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetActorForwardVector_ReturnValue_5) == 0x000758, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetActorForwardVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_SelectFloat_ReturnValue_2) == 0x000770, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_11) == 0x000778, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000790, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_12) == 0x000798, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Conv_DoubleToVector_ReturnValue_12) == 0x0007B0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Conv_DoubleToVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_13) == 0x0007C8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Multiply_VectorVector_ReturnValue_12) == 0x0007E0, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Multiply_VectorVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_14) == 0x0007F8, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_15) == 0x000810, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_16) == 0x000828, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000840, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_VectorVector_ReturnValue_17) == 0x000848, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_VectorVector_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000860, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000868, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000870, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000878, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000880, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TickCameramovementPreraceState, CallFunc_SelectFloat_A_ImplicitCast) == 0x000888, "Member 'BP_CameraPreflow_C_TickCameramovementPreraceState::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");

// Function BP_CameraPreflow.BP_CameraPreflow_C.TraceDist
// 0x0208 (0x0208 - 0x0000)
struct BP_CameraPreflow_C_TraceDist final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Out_Hit_Distance;                                  // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x1];                                      // 0x0133(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CameraPreflow_C_TraceDist) == 0x000008, "Wrong alignment on BP_CameraPreflow_C_TraceDist");
static_assert(sizeof(BP_CameraPreflow_C_TraceDist) == 0x000208, "Wrong size on BP_CameraPreflow_C_TraceDist");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, Start) == 0x000000, "Member 'BP_CameraPreflow_C_TraceDist::Start' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, End) == 0x000018, "Member 'BP_CameraPreflow_C_TraceDist::End' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, Out_Hit_Distance) == 0x000030, "Member 'BP_CameraPreflow_C_TraceDist::Out_Hit_Distance' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, ReturnValue) == 0x000034, "Member 'BP_CameraPreflow_C_TraceDist::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, Temp_object_Variable) == 0x000038, "Member 'BP_CameraPreflow_C_TraceDist::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_LineTraceSingle_OutHit) == 0x000048, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_LineTraceSingle_ReturnValue) == 0x000130, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_bBlockingHit) == 0x000131, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_bInitialOverlap) == 0x000132, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_Time) == 0x000134, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_Distance) == 0x000138, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_Location) == 0x000140, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_ImpactPoint) == 0x000158, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_Normal) == 0x000170, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_ImpactNormal) == 0x000188, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_PhysMat) == 0x0001A0, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_HitActor) == 0x0001A8, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_HitComponent) == 0x0001B0, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_HitBoneName) == 0x0001B8, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_BoneName) == 0x0001C0, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_HitItem) == 0x0001C8, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_ElementIndex) == 0x0001CC, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_FaceIndex) == 0x0001D0, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_TraceStart) == 0x0001D8, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CameraPreflow_C_TraceDist, CallFunc_BreakHitResult_TraceEnd) == 0x0001F0, "Member 'BP_CameraPreflow_C_TraceDist::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

}

