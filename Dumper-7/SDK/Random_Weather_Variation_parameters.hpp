#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Random_Weather_Variation

#include "Basic.hpp"

#include "UDS_TemperatureType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "RandomWeatherVariation_State_structs.hpp"


namespace SDK::Params
{

// Function Random_Weather_Variation.Random_Weather_Variation_C.Apply State
// 0x0028 (0x0028 - 0x0000)
struct Random_Weather_Variation_C_Apply_State final
{
public:
	struct FRandomWeatherVariation_State          Random_Weather_State;                              // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Apply_State) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Apply_State");
static_assert(sizeof(Random_Weather_Variation_C_Apply_State) == 0x000028, "Wrong size on Random_Weather_Variation_C_Apply_State");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, Random_Weather_State) == 0x000000, "Member 'Random_Weather_Variation_C_Apply_State::Random_Weather_State' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, CallFunc_IsComponentTickEnabled_ReturnValue) == 0x000020, "Member 'Random_Weather_Variation_C_Apply_State::CallFunc_IsComponentTickEnabled_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Create Composite Probability Map
// 0x02B0 (0x02B0 - 0x0000)
struct Random_Weather_Variation_C_Create_Composite_Probability_Map final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Out;                                               // 0x0000(0x0050)(Parm, OutParm)
	TArray<double>                                Season_Probability_Totals;                         // 0x0050(0x0010)(Edit, BlueprintVisible)
	TMap<class UUDS_Weather_Settings_C*, double>  Composite_Map;                                     // 0x0060(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_2;                               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_Select_Default;                             // 0x0120(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_Select_Default_1;                           // 0x0170(0x0050)()
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x01C0(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_3;                         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_4;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_Select_Default_2;                           // 0x0200(0x0050)()
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0250(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_5;                         // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Create_Composite_Probability_Map) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Create_Composite_Probability_Map");
static_assert(sizeof(Random_Weather_Variation_C_Create_Composite_Probability_Map) == 0x0002B0, "Wrong size on Random_Weather_Variation_C_Create_Composite_Probability_Map");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Out) == 0x000000, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Out' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Season_Probability_Totals) == 0x000050, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Season_Probability_Totals' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Composite_Map) == 0x000060, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Composite_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Array_Index_Variable_1) == 0x0000BC, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Variable) == 0x0000C0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Variable_1) == 0x0000CC, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D4, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000D8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000DC, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, K2Node_MakeArray_Array) == 0x0000E8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Variable_2) == 0x0000F8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_2) == 0x000108, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000110, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_FFloor_ReturnValue) == 0x000114, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Variable_3) == 0x000118, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Variable_4) == 0x00011C, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, K2Node_Select_Default) == 0x000120, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, K2Node_Select_Default_1) == 0x000170, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Values_Values) == 0x0001C0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_3) == 0x0001D0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Length_ReturnValue) == 0x0001D8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_4) == 0x0001F0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, K2Node_Select_Default_2) == 0x000200, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Keys_Keys) == 0x000250, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Length_ReturnValue_1) == 0x000260, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_5) == 0x000268, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Less_IntInt_ReturnValue_1) == 0x000270, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_Value) == 0x000278, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_ReturnValue) == 0x000280, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_Value_1) == 0x000288, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_ReturnValue_1) == 0x000290, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000298, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_SafeDivide_ReturnValue) == 0x0002A0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002A8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.ExecuteUbergraph_Random_Weather_Variation
// 0x0020 (0x0020 - 0x0000)
struct Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Current_Timer_Length_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation");
static_assert(sizeof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation) == 0x000020, "Wrong size on Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, EntryPoint) == 0x000000, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::EntryPoint' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast) == 0x00000C, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast) == 0x000010, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_VariableSet_Current_Timer_Length_ImplicitCast) == 0x000018, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_VariableSet_Current_Timer_Length_ImplicitCast' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Get Climate Temperature Ranges
// 0x00D0 (0x00D0 - 0x0000)
struct Random_Weather_Variation_C_Get_Climate_Temperature_Ranges final
{
public:
	class UUDS_Climate_Preset_C*                  Climate_Object;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          Scale;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Summer_Range;                                      // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Autumn_Range;                                      // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Winter_Range;                                      // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Spring_Range;                                      // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_Low;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_High;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_Low_1;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_High_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_Low_2;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_High_2; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_Low_3;  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Return_Temperature_Range_in_Scale_High_3; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Get_Climate_Temperature_Ranges");
static_assert(sizeof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges) == 0x0000D0, "Wrong size on Random_Weather_Variation_C_Get_Climate_Temperature_Ranges");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Climate_Object) == 0x000000, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Climate_Object' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Scale) == 0x000008, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Scale' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Summer_Range) == 0x000010, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Summer_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Autumn_Range) == 0x000020, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Autumn_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Winter_Range) == 0x000030, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Winter_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, Spring_Range) == 0x000040, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::Spring_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_Low) == 0x000050, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_Low' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_High) == 0x000058, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_High' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_Low_1) == 0x000060, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_Low_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_High_1) == 0x000068, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_High_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_MakeVector2D_ReturnValue_1) == 0x000080, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_Low_2) == 0x000090, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_Low_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_High_2) == 0x000098, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_High_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_Low_3) == 0x0000A0, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_Low_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_Return_Temperature_Range_in_Scale_High_3) == 0x0000A8, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_Return_Temperature_Range_in_Scale_High_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000B0, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_Climate_Temperature_Ranges, CallFunc_MakeVector2D_ReturnValue_3) == 0x0000C0, "Member 'Random_Weather_Variation_C_Get_Climate_Temperature_Ranges::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Get State for Saving
// 0x0048 (0x0048 - 0x0000)
struct Random_Weather_Variation_C_Get_State_for_Saving final
{
public:
	struct FRandomWeatherVariation_State          State;                                             // 0x0000(0x0020)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             Volume_0;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRandomWeatherVariation_State          K2Node_MakeStruct_RandomWeatherVariation_State;    // 0x0028(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Get_State_for_Saving) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Get_State_for_Saving");
static_assert(sizeof(Random_Weather_Variation_C_Get_State_for_Saving) == 0x000048, "Wrong size on Random_Weather_Variation_C_Get_State_for_Saving");
static_assert(offsetof(Random_Weather_Variation_C_Get_State_for_Saving, State) == 0x000000, "Member 'Random_Weather_Variation_C_Get_State_for_Saving::State' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_State_for_Saving, Volume_0) == 0x000020, "Member 'Random_Weather_Variation_C_Get_State_for_Saving::Volume_0' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_State_for_Saving, K2Node_MakeStruct_RandomWeatherVariation_State) == 0x000028, "Member 'Random_Weather_Variation_C_Get_State_for_Saving::K2Node_MakeStruct_RandomWeatherVariation_State' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Increment Change Timer
// 0x0030 (0x0030 - 0x0000)
struct Random_Weather_Variation_C_Increment_Change_Timer final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Increment_Change_Timer) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Increment_Change_Timer");
static_assert(sizeof(Random_Weather_Variation_C_Increment_Change_Timer) == 0x000030, "Wrong size on Random_Weather_Variation_C_Increment_Change_Timer");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Increment Random Weather
// 0x0058 (0x0058 - 0x0000)
struct Random_Weather_Variation_C_Increment_Random_Weather final
{
public:
	double                                        Eased_Lerp_Alpha;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Increment_Random_Weather) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Increment_Random_Weather");
static_assert(sizeof(Random_Weather_Variation_C_Increment_Random_Weather) == 0x000058, "Wrong size on Random_Weather_Variation_C_Increment_Random_Weather");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, Eased_Lerp_Alpha) == 0x000000, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::Eased_Lerp_Alpha' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Ease_ReturnValue) == 0x000020, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Make Climate Probability Map
// 0x0488 (0x0488 - 0x0000)
struct Random_Weather_Variation_C_Make_Climate_Probability_Map final
{
public:
	class UUDS_Climate_Preset_C*                  Climate;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Season;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  Probability_Map;                                   // 0x0010(0x0050)(Parm, OutParm)
	double                                        Probability_Total;                                 // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Precipitation_Percentage;                  // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUDS_Weather_Settings_C*>        Precipitation_Types;                               // 0x0070(0x0010)(Edit, BlueprintVisible)
	TArray<class UUDS_Weather_Settings_C*>        Snowy_Types;                                       // 0x0080(0x0010)(Edit, BlueprintVisible)
	double                                        Remaining_Allocation_Percentage;                   // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Allocation_Fraction;                               // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUDS_Weather_Settings_C*>        Rainy_Types;                                       // 0x00A0(0x0010)(Edit, BlueprintVisible)
	double                                        Snowing_Percentage;                                // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Raining_Percentage;                                // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Current_Type;                                      // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  Weather_Probability_Map;                           // 0x00C8(0x0050)(Edit, BlueprintVisible)
	double                                        Current_Type_Probability;                          // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Precipitating_Percentage;                          // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sunny_Percentage;                                  // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloudy_Percentage;                                 // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snowfall__mm_;                                     // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rainfall__mm_;                                     // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Low_Temp__C_;                                      // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        High_Temp__C_;                                     // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUDS_Weather_Settings_C*>        K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	TArray<class UUDS_Weather_Settings_C*>        K2Node_MakeArray_Array_1;                          // 0x0168(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x01B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UUDS_Weather_Settings_C*          Temp_object_Variable;                              // 0x01D0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_1;                            // 0x01D8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x01E0(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_2;                            // 0x0218(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_3;                            // 0x0248(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_1;                         // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_2;                         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        K2Node_Select_Default_1;                           // 0x02E8(0x0010)(ReferenceParm)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_4;                            // 0x0350(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys_1;                          // 0x0368(0x0010)(ReferenceParm)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_3;                         // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0385(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386[0x2];                                      // 0x0386(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_5;                            // 0x03B0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUDS_Weather_Settings_C*          Temp_object_Variable_6;                            // 0x0408(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_2;                          // 0x0410(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_4;                         // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_3;                          // 0x0428(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_5;                         // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_4;                          // 0x0440(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_6;                         // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_5;                          // 0x0458(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_7;                         // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array_6;                          // 0x0470(0x0010)(ReferenceParm)
	double                                        CallFunc_Array_Get_Item_8;                         // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Make_Climate_Probability_Map) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Make_Climate_Probability_Map");
static_assert(sizeof(Random_Weather_Variation_C_Make_Climate_Probability_Map) == 0x000488, "Wrong size on Random_Weather_Variation_C_Make_Climate_Probability_Map");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Climate) == 0x000000, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Climate' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Season) == 0x000008, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Season' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Probability_Map) == 0x000010, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Probability_Total) == 0x000060, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Probability_Total' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Current_Precipitation_Percentage) == 0x000068, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Current_Precipitation_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Precipitation_Types) == 0x000070, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Precipitation_Types' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Snowy_Types) == 0x000080, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Snowy_Types' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Remaining_Allocation_Percentage) == 0x000090, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Remaining_Allocation_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Allocation_Fraction) == 0x000098, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Allocation_Fraction' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Rainy_Types) == 0x0000A0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Rainy_Types' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Snowing_Percentage) == 0x0000B0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Snowing_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Raining_Percentage) == 0x0000B8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Raining_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Current_Type) == 0x0000C0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Current_Type' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Weather_Probability_Map) == 0x0000C8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Weather_Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Current_Type_Probability) == 0x000118, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Current_Type_Probability' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Precipitating_Percentage) == 0x000120, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Precipitating_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Sunny_Percentage) == 0x000128, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Sunny_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Cloudy_Percentage) == 0x000130, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Cloudy_Percentage' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Snowfall__mm_) == 0x000138, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Snowfall__mm_' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Rainfall__mm_) == 0x000140, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Rainfall__mm_' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Low_Temp__C_) == 0x000148, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Low_Temp__C_' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, High_Temp__C_) == 0x000150, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::High_Temp__C_' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array) == 0x000158, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_1) == 0x000168, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Loop_Counter_Variable) == 0x000178, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Variable) == 0x00017C, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000184, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_IntInt_ReturnValue_1) == 0x000188, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Loop_Counter_Variable_1) == 0x00018C, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_IntInt_ReturnValue_2) == 0x000190, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Array_Index_Variable) == 0x000194, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Array_Index_Variable_1) == 0x000198, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Loop_Counter_Variable_2) == 0x00019C, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001A0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Array_Index_Variable_2) == 0x0001A4, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Loop_Counter_Variable_3) == 0x0001A8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Keys_Keys) == 0x0001B0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001C0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Length_ReturnValue) == 0x0001C4, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable) == 0x0001D0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_1) == 0x0001D8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Values_Values) == 0x0001E0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item) == 0x0001F0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Length_ReturnValue_1) == 0x0001F8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000200, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Less_IntInt_ReturnValue_1) == 0x000208, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000210, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_2) == 0x000218, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MapRangeClamped_ReturnValue) == 0x000220, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000228, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000230, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000240, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_3) == 0x000248, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000250, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000258, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000260, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Variable_1) == 0x000264, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000268, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_Select_Default) == 0x000270, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000278, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_FMax_ReturnValue) == 0x000280, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000288, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_FMin_ReturnValue) == 0x000290, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000298, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Array_Index_Variable_3) == 0x0002A0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_1) == 0x0002A8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Find_Value) == 0x0002B0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Find_ReturnValue) == 0x0002B8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002C0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0002C8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_2) == 0x0002D0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Length_ReturnValue_2) == 0x0002D8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002DC, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Variable_2) == 0x0002E0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_Select_Default_1) == 0x0002E8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0002F8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_real_Variable) == 0x000300, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_FMax_ReturnValue_1) == 0x000308, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000310, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000318, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000320, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000328, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_real_Variable_1) == 0x000330, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000338, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_int_Variable_3) == 0x000340, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_Select_Default_2) == 0x000348, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_4) == 0x000350, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000358, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Lerp_ReturnValue) == 0x000360, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Keys_Keys_1) == 0x000368, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_3) == 0x000378, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Length_ReturnValue_3) == 0x000380, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Remove_ReturnValue) == 0x000384, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Less_IntInt_ReturnValue_3) == 0x000385, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Find_Value_1) == 0x000388, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Map_Find_ReturnValue_1) == 0x000390, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000391, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000398, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0003A0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0003A8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_5) == 0x0003B0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0003B8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_FMax_ReturnValue_2) == 0x0003C0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0003C8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0003D0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0003D8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0003E0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x0003E8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x0003F0, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_FMax_ReturnValue_3) == 0x0003F8, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Lerp_ReturnValue_1) == 0x000400, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, Temp_object_Variable_6) == 0x000408, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_2) == 0x000410, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_4) == 0x000420, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_3) == 0x000428, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_5) == 0x000438, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_4) == 0x000440, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_6) == 0x000450, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_5) == 0x000458, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_7) == 0x000468, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, K2Node_MakeArray_Array_6) == 0x000470, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Make_Climate_Probability_Map, CallFunc_Array_Get_Item_8) == 0x000480, "Member 'Random_Weather_Variation_C_Make_Climate_Probability_Map::CallFunc_Array_Get_Item_8' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Random_Weather_Variation_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_ReceiveTick) == 0x000004, "Wrong alignment on Random_Weather_Variation_C_ReceiveTick");
static_assert(sizeof(Random_Weather_Variation_C_ReceiveTick) == 0x000004, "Wrong size on Random_Weather_Variation_C_ReceiveTick");
static_assert(offsetof(Random_Weather_Variation_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Random_Weather_Variation_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Select New Random Weather Type
// 0x01B0 (0x01B0 - 0x0000)
struct Random_Weather_Variation_C_Select_New_Random_Weather_Type final
{
public:
	bool                                          Filter_Probability_List;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Threshold;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Float;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Max_Range;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  Current_Probabilities;                             // 0x0020(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Create_Composite_Probability_Map_Out;     // 0x0088(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Filter_Probability_Map_Filtered_Probability_Map; // 0x00D8(0x0050)()
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0128(0x0010)(ReferenceParm)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x0140(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Random_Float_ImplicitCast;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Select_New_Random_Weather_Type) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Select_New_Random_Weather_Type");
static_assert(sizeof(Random_Weather_Variation_C_Select_New_Random_Weather_Type) == 0x0001B0, "Wrong size on Random_Weather_Variation_C_Select_New_Random_Weather_Type");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Filter_Probability_List) == 0x000000, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Filter_Probability_List' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Threshold) == 0x000008, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Threshold' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Random_Float) == 0x000010, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Random_Float' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Random_Max_Range) == 0x000018, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Random_Max_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Current_Probabilities) == 0x000020, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Current_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_bool_True_if_break_was_hit_Variable) == 0x000078, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Create_Composite_Probability_Map_Out) == 0x000088, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Create_Composite_Probability_Map_Out' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Filter_Probability_Map_Filtered_Probability_Map) == 0x0000D8, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Filter_Probability_Map_Filtered_Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Keys_Keys) == 0x000128, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Get_Item) == 0x000138, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Values_Values) == 0x000140, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Find_Value) == 0x000158, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Length_ReturnValue_1) == 0x000164, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x00016C, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_BooleanAND_ReturnValue) == 0x000170, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Loop_Counter_Variable_1) == 0x000174, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Array_Index_Variable_1) == 0x000178, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Less_IntInt_ReturnValue_1) == 0x00017C, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000188, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_IntInt_ReturnValue_1) == 0x000190, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000194, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000198, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast) == 0x0001A0, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, K2Node_VariableSet_Random_Float_ImplicitCast) == 0x0001A8, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::K2Node_VariableSet_Random_Float_ImplicitCast' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Start Up Random Weather Variation
// 0x0170 (0x0170 - 0x0000)
struct Random_Weather_Variation_C_Start_Up_Random_Weather_Variation final
{
public:
	class AUltra_Dynamic_Weather_C*               UDW_0;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  Summer_Probabilities;                              // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class UUDS_Weather_Settings_C*, double>  Autumn_Probabilities;                              // 0x0058(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class UUDS_Weather_Settings_C*, double>  Winter_Probabilities;                              // 0x00A8(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class UUDS_Weather_Settings_C*, double>  Spring_Probabilities;                              // 0x00F8(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Start_with_a_Random_Type;                          // 0x0148(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                Starting_Weather_Settings;                         // 0x0150(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Random_Start_Type;                                 // 0x0158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_SpawnObject_ReturnValue;                  // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Start_Up_Random_Weather_Variation");
static_assert(sizeof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation) == 0x000170, "Wrong size on Random_Weather_Variation_C_Start_Up_Random_Weather_Variation");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, UDW_0) == 0x000000, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::UDW_0' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, Summer_Probabilities) == 0x000008, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::Summer_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, Autumn_Probabilities) == 0x000058, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::Autumn_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, Winter_Probabilities) == 0x0000A8, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::Winter_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, Spring_Probabilities) == 0x0000F8, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::Spring_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, Start_with_a_Random_Type) == 0x000148, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::Start_with_a_Random_Type' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, Starting_Weather_Settings) == 0x000150, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::Starting_Weather_Settings' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, Random_Start_Type) == 0x000158, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::Random_Start_Type' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, CallFunc_IsValid_ReturnValue) == 0x000159, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, CallFunc_Not_PreBool_ReturnValue) == 0x00015A, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, CallFunc_BooleanOR_ReturnValue) == 0x00015B, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, CallFunc_SpawnObject_ReturnValue) == 0x000160, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Start_Up_Random_Weather_Variation, CallFunc_IsServer_ReturnValue) == 0x000168, "Member 'Random_Weather_Variation_C_Start_Up_Random_Weather_Variation::CallFunc_IsServer_ReturnValue' has a wrong offset!");

}

