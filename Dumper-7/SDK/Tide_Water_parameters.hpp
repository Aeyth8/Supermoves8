#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tide_Water

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Tide_Water.Tide_Water_C.ExecuteUbergraph_Tide_Water
// 0x0058 (0x0058 - 0x0000)
struct Tide_Water_C_ExecuteUbergraph_Tide_Water final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Water_C>          K2Node_DynamicCast_AsBPI_Water;                    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Tide_Water_C_ExecuteUbergraph_Tide_Water) == 0x000008, "Wrong alignment on Tide_Water_C_ExecuteUbergraph_Tide_Water");
static_assert(sizeof(Tide_Water_C_ExecuteUbergraph_Tide_Water) == 0x000058, "Wrong size on Tide_Water_C_ExecuteUbergraph_Tide_Water");
static_assert(offsetof(Tide_Water_C_ExecuteUbergraph_Tide_Water, EntryPoint) == 0x000000, "Member 'Tide_Water_C_ExecuteUbergraph_Tide_Water::EntryPoint' has a wrong offset!");
static_assert(offsetof(Tide_Water_C_ExecuteUbergraph_Tide_Water, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Tide_Water_C_ExecuteUbergraph_Tide_Water::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tide_Water_C_ExecuteUbergraph_Tide_Water, CallFunc_BreakVector_X) == 0x000020, "Member 'Tide_Water_C_ExecuteUbergraph_Tide_Water::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Tide_Water_C_ExecuteUbergraph_Tide_Water, CallFunc_BreakVector_Y) == 0x000028, "Member 'Tide_Water_C_ExecuteUbergraph_Tide_Water::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Tide_Water_C_ExecuteUbergraph_Tide_Water, CallFunc_BreakVector_Z) == 0x000030, "Member 'Tide_Water_C_ExecuteUbergraph_Tide_Water::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Tide_Water_C_ExecuteUbergraph_Tide_Water, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'Tide_Water_C_ExecuteUbergraph_Tide_Water::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Tide_Water_C_ExecuteUbergraph_Tide_Water, K2Node_DynamicCast_AsBPI_Water) == 0x000040, "Member 'Tide_Water_C_ExecuteUbergraph_Tide_Water::K2Node_DynamicCast_AsBPI_Water' has a wrong offset!");
static_assert(offsetof(Tide_Water_C_ExecuteUbergraph_Tide_Water, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Tide_Water_C_ExecuteUbergraph_Tide_Water::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

