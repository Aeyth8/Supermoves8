#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GymRuleStateWidgetPlaylist

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GYMGAME_structs.hpp"


namespace SDK::Params
{

// Function WBP_GymRuleStateWidgetPlaylist.WBP_GymRuleStateWidgetPlaylist_C.ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGymPlayerController*                   K2Node_DynamicCast_AsGym_Player_Controller;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGymRuleParticipantState                      CallFunc_GetCurrentRuleState_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatTime_ReturnValue;                   // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	float                                         CallFunc_FormatTime_Time_ImplicitCast;             // 0x00A8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist");
static_assert(sizeof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist) == 0x0000B0, "Wrong size on WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, EntryPoint) == 0x000000, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, K2Node_DynamicCast_AsGym_Player_Controller) == 0x000010, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::K2Node_DynamicCast_AsGym_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, K2Node_Event_MyGeometry) == 0x00001C, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, K2Node_Event_InDeltaTime) == 0x000054, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, CallFunc_GetCurrentRuleState_ReturnValue) == 0x000058, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::CallFunc_GetCurrentRuleState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, CallFunc_GetTimeSeconds_ReturnValue) == 0x000060, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000069, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x000070, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, CallFunc_FormatTime_ReturnValue) == 0x000080, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::CallFunc_FormatTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist, CallFunc_FormatTime_Time_ImplicitCast) == 0x0000A8, "Member 'WBP_GymRuleStateWidgetPlaylist_C_ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist::CallFunc_FormatTime_Time_ImplicitCast' has a wrong offset!");

// Function WBP_GymRuleStateWidgetPlaylist.WBP_GymRuleStateWidgetPlaylist_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_GymRuleStateWidgetPlaylist_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetPlaylist_C_Tick) == 0x000004, "Wrong alignment on WBP_GymRuleStateWidgetPlaylist_C_Tick");
static_assert(sizeof(WBP_GymRuleStateWidgetPlaylist_C_Tick) == 0x00003C, "Wrong size on WBP_GymRuleStateWidgetPlaylist_C_Tick");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_GymRuleStateWidgetPlaylist_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetPlaylist_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_GymRuleStateWidgetPlaylist_C_Tick::InDeltaTime' has a wrong offset!");

}

