#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPW_NGX

#include "Basic.hpp"

#include "StreamlineBlueprint_structs.hpp"
#include "UMG_structs.hpp"
#include "E_BuiltInAAModes_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DLSSBlueprint_structs.hpp"


namespace SDK::Params
{

// Function BPW_NGX.BPW_NGX_C.CustomEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BPW_NGX_C_CustomEvent_1 final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_CustomEvent_1) == 0x000008, "Wrong alignment on BPW_NGX_C_CustomEvent_1");
static_assert(sizeof(BPW_NGX_C_CustomEvent_1) == 0x000018, "Wrong size on BPW_NGX_C_CustomEvent_1");
static_assert(offsetof(BPW_NGX_C_CustomEvent_1, SelectedItem) == 0x000000, "Member 'BPW_NGX_C_CustomEvent_1::SelectedItem' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_CustomEvent_1, SelectionType) == 0x000010, "Member 'BPW_NGX_C_CustomEvent_1::SelectionType' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.DLSS-FG Event
// 0x0018 (0x0018 - 0x0000)
struct BPW_NGX_C_DLSSMinusFG_Event final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_DLSSMinusFG_Event) == 0x000008, "Wrong alignment on BPW_NGX_C_DLSSMinusFG_Event");
static_assert(sizeof(BPW_NGX_C_DLSSMinusFG_Event) == 0x000018, "Wrong size on BPW_NGX_C_DLSSMinusFG_Event");
static_assert(offsetof(BPW_NGX_C_DLSSMinusFG_Event, SelectedItem) == 0x000000, "Member 'BPW_NGX_C_DLSSMinusFG_Event::SelectedItem' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_DLSSMinusFG_Event, SelectionType) == 0x000010, "Member 'BPW_NGX_C_DLSSMinusFG_Event::SelectionType' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.DLSS-RR_Event
// 0x0001 (0x0001 - 0x0000)
struct BPW_NGX_C_DLSSMinusRR_Event final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_DLSSMinusRR_Event) == 0x000001, "Wrong alignment on BPW_NGX_C_DLSSMinusRR_Event");
static_assert(sizeof(BPW_NGX_C_DLSSMinusRR_Event) == 0x000001, "Wrong size on BPW_NGX_C_DLSSMinusRR_Event");
static_assert(offsetof(BPW_NGX_C_DLSSMinusRR_Event, bIsChecked) == 0x000000, "Member 'BPW_NGX_C_DLSSMinusRR_Event::bIsChecked' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.ExecuteUbergraph_BPW_NGX
// 0x15B0 (0x15B0 - 0x0000)
struct BPW_NGX_C_ExecuteUbergraph_BPW_NGX final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& SelectedItem, ESelectInfo SelectionType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& SelectedItem, ESelectInfo SelectionType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& SelectedItem, ESelectInfo SelectionType)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_3;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Value)>                  K2Node_CreateDelegate_OutputDelegate_3;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& SelectedItem, ESelectInfo SelectionType)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x00D0(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_2;                            // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_3;                            // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_4;                            // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_5;                            // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0180(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0198(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x01B0(0x0018)()
	TDelegate<void(bool bIsChecked)>              K2Node_CreateDelegate_OutputDelegate_5;            // 0x01C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_4;             // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_5;             // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ReflexModeToStr_ReturnValue;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue_2; // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        Temp_byte_Variable;                                // 0x020C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        Temp_byte_Variable_1;                              // 0x020D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        Temp_byte_Variable_2;                              // 0x020E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20F[0x1];                                      // 0x020F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& SelectedItem, ESelectInfo SelectionType)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0210(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         Temp_byte_Variable_3;                              // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         Temp_byte_Variable_4;                              // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         Temp_byte_Variable_5;                              // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         Temp_byte_Variable_6;                              // 0x0227(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         Temp_byte_Variable_7;                              // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22F[0x1];                                      // 0x022F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_5;                              // 0x0230(0x0018)()
	int32                                         Temp_int_Variable_8;                               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_6;             // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_3;              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_7;             // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue_3; // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_8;             // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_4;              // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_9;             // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue_4; // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BA[0x2];                                      // 0x02BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              Temp_byte_Variable_8;                              // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              Temp_byte_Variable_9;                              // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              Temp_byte_Variable_10;                             // 0x02C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              Temp_byte_Variable_11;                             // 0x02C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              Temp_byte_Variable_12;                             // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         Temp_byte_Variable_13;                             // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        Temp_byte_Variable_14;                             // 0x02CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x02D0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x02D1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x02D2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported;      // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage; // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness;  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EE[0x2];                                      // 0x02EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported_1;    // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1; // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1; // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage_1; // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1; // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness_1; // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0363(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_366[0x2];                                      // 0x0366(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_6;                              // 0x03A0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x03B8(0x0018)()
	bool                                          Temp_bool_Variable_23;                             // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x03D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStreamlineFeatureRequirements         CallFunc_GetStreamlineFeatureInformation_ReturnValue; // 0x03D4(0x0034)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B[0x5];                                      // 0x040B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0418(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0470(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x04C0(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x04D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x04F0(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0548(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_4;            // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x05A0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x05B0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0600(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_5;            // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_6;            // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0628(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0678(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x06C8(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_7;            // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x06E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x06F8(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_8;            // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_9;            // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0758(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x07A8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported; // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported; // 0x07F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported; // 0x07FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired; // 0x07FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired; // 0x07FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FD[0x3];                                      // 0x07FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0800(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0810(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0828(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0840(0x0018)()
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported_2;    // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_859[0x3];                                      // 0x0859(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_2; // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_2; // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_861[0x3];                                      // 0x0861(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage_2; // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage_2; // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness_2; // 0x086C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x0880(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0898(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x08BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_2;             // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x08C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C5[0x3];                                      // 0x08C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_1;            // 0x08C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported_3;    // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D9[0x3];                                      // 0x08D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_3; // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_3; // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E1[0x3];                                      // 0x08E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage_3; // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage_3; // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness_3; // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x08F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x08F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x08F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x08F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x08F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F6[0x2];                                      // 0x08F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_3;        // 0x0908(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0918(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x092C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDLSSSupport                                 CallFunc_QueryDLSSSupport_ReturnValue;             // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0969(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDLSSSupported_ReturnValue;              // 0x096A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96B[0x5];                                      // 0x096B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0970(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0988(0x0018)()
	int32                                         CallFunc_GetDLSSMinimumDriverVersion_MinDriverVersionMajor; // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDLSSMinimumDriverVersion_MinDriverVersionMinor; // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_10;           // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x09B0(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_11;           // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x0A08(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0A58(0x0010)(ReferenceParm)
	float                                         CallFunc_GetDLSSScreenPercentageRange_MinScreenPercentage; // 0x0A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSScreenPercentageRange_MaxScreenPercentage; // 0x0A6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0A70(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x0A88(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_13;           // 0x0AD8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0B28(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0B38(0x0018)()
	class FString                                 K2Node_CustomEvent_SelectedItem_5;                 // 0x0B50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_CustomEvent_SelectionType_5;                // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B61[0x3];                                      // 0x0B61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_10;            // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B69[0x7];                                      // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDLSSMode>                            CallFunc_GetSupportedDLSSModes_ReturnValue;        // 0x0B70(0x0010)(ReferenceParm)
	uint8                                         CallFunc_GetValidValue_ReturnValue_5;              // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDLSSMode                                    CallFunc_Array_Get_Item;                           // 0x0B81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B82[0x6];                                      // 0x0B82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4; // 0x0B88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B99[0x3];                                      // 0x0B99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0B9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0BA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0BA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0BA3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0BA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported_4;    // 0x0BA5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA6[0x2];                                      // 0x0BA6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_4; // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_4; // 0x0BAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAD[0x3];                                      // 0x0BAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage_4; // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage_4; // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness_4; // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BBD[0x3];                                      // 0x0BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC9[0x7];                                      // 0x0BC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_4;        // 0x0BD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0BE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF4[0x4];                                      // 0x0BF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SelectedItem_4;                 // 0x0BF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_CustomEvent_SelectionType_4;                // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C09[0x3];                                      // 0x0C09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0C0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              K2Node_Select_Default_2;                           // 0x0C14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C15[0x3];                                      // 0x0C15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SelectedItem_3;                 // 0x0C18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_CustomEvent_SelectionType_3;                // 0x0C28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C29[0x3];                                      // 0x0C29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_2;                 // 0x0C2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_11;            // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C31[0x3];                                      // 0x0C31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0C34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_6;              // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0C39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0C3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3B[0x1];                                      // 0x0C3B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamlineFeatureRequirements         CallFunc_GetStreamlineFeatureInformation_ReturnValue_1; // 0x0C3C(0x0034)(NoDestructor)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_12;           // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_13;           // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_14;           // 0x0C80(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_15;           // 0x0CD0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0D20(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x0D30(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_14;           // 0x0D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_15;           // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_16;           // 0x0D58(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_17;           // 0x0DA8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_7;                          // 0x0DF8(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_16;           // 0x0E08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x0E10(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_18;           // 0x0E28(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_17;           // 0x0E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_18;           // 0x0E80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_19;           // 0x0E88(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_20;           // 0x0ED8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_8;                          // 0x0F28(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_19;           // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_8;                     // 0x0F40(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_21;           // 0x0F58(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_20;           // 0x0FA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_21;           // 0x0FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_22;           // 0x0FB8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_23;           // 0x1008(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported_1; // 0x1058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported_1; // 0x1059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported_1; // 0x105A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired_1; // 0x105B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired_1; // 0x105C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105D[0x3];                                     // 0x105D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_9;                          // 0x1060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_2;            // 0x1070(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_9;                     // 0x1088(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_3;            // 0x10A0(0x0018)()
	float                                         K2Node_CustomEvent_Value;                          // 0x10B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10BC[0x4];                                     // 0x10BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x10C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_5;        // 0x10D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x10E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x10F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x10F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDLSSSupported_ReturnValue_1;            // 0x10F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F9[0x3];                                     // 0x10F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSGFrameTiming_FrameRateInHertz;     // 0x10FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDLSSGFrameTiming_FramesPresented;      // 0x1100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveOption_ReturnValue;                 // 0x1104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1105[0x3];                                     // 0x1105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x1108(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x1120(0x0018)()
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_3;             // 0x1138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x113C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveOption_ReturnValue_1;               // 0x113D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113E[0x2];                                     // 0x113E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x1140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x1144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineFeatureSupport                    CallFunc_QueryReflexSupport_ReturnValue;           // 0x1148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1149[0x7];                                     // 0x1149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5; // 0x1150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x1160(0x0018)()
	class FString                                 K2Node_CustomEvent_SelectedItem_2;                 // 0x1178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_CustomEvent_SelectionType_2;                // 0x1188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1189[0x3];                                     // 0x1189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_3;                 // 0x118C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameLatencyInMs_ReturnValue;           // 0x1190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        K2Node_Select_Default_3;                           // 0x1194(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1195[0x3];                                     // 0x1195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x1198(0x0018)()
	bool                                          K2Node_Select_Default_4;                           // 0x11B0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B1[0x3];                                     // 0x11B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderLatencyInMs_ReturnValue;         // 0x11B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x11B8(0x0018)()
	float                                         CallFunc_GetGameToRenderLatencyInMs_ReturnValue;   // 0x11D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D4[0x4];                                     // 0x11D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x11D8(0x0018)()
	bool                                          CallFunc_IsStreamlineFeatureSupported_ReturnValue; // 0x11F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11F1[0x7];                                     // 0x11F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_5;                           // 0x11F8(0x0018)()
	struct FStreamlineFeatureRequirements         CallFunc_GetStreamlineFeatureInformation_ReturnValue_2; // 0x1210(0x0034)(NoDestructor)
	uint8                                         Pad_1244[0x4];                                     // 0x1244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x1248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_2;          // 0x1258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported_2; // 0x1268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported_2; // 0x1269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported_2; // 0x126A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired_2; // 0x126B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired_2; // 0x126C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126D[0x3];                                     // 0x126D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_3;          // 0x1270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_6;                           // 0x1280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_7;                           // 0x1290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_8;                           // 0x12A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array_10;                         // 0x12B0(0x0010)(ConstParm, ReferenceParm)
	struct FStreamlineFeatureRequirements         CallFunc_GetStreamlineFeatureInformation_ReturnValue_3; // 0x12C0(0x0034)(NoDestructor)
	uint8                                         Pad_12F4[0x4];                                     // 0x12F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x12F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x1308(0x0018)()
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported_3; // 0x1320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported_3; // 0x1321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported_3; // 0x1322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired_3; // 0x1323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired_3; // 0x1324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1325[0x3];                                     // 0x1325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_4;          // 0x1328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_5;          // 0x1338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_9;                           // 0x1348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_10;                          // 0x1358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_6;          // 0x1368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_11;                          // 0x1378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array_11;                         // 0x1388(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_JoinStringArray_ReturnValue_1;            // 0x1398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStreamlineFeatureSupported_ReturnValue_1; // 0x13A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A9[0x7];                                     // 0x13A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x13B0(0x0018)()
	class FText                                   K2Node_Select_Default_12;                          // 0x13C8(0x0018)()
	bool                                          CallFunc_IsDLSSEnabled_ReturnValue;                // 0x13E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsChecked;                     // 0x13E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDLSSRRSupported_ReturnValue;            // 0x13E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReflexSupported_ReturnValue;            // 0x13E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x13E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E5[0x3];                                     // 0x13E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x13E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EC[0x4];                                     // 0x13EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUStreamlineReflexMode>                K2Node_MakeArray_Array_12;                         // 0x13F0(0x0010)(ReferenceParm)
	EUStreamlineReflexMode                        CallFunc_Array_Get_Item_1;                         // 0x1400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1401[0x3];                                     // 0x1401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x1404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ReflexModeToStr_ReturnValue_1;            // 0x1408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x1418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x141C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineFeatureSupport                    CallFunc_QueryDLSSGSupport_ReturnValue;            // 0x141D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141E[0x2];                                     // 0x141E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6; // 0x1420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x1430(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x1448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         CallFunc_GetDefaultDLSSGMode_ReturnValue;          // 0x1449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144A[0x6];                                     // 0x144A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7; // 0x1450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SelectedItem_1;                 // 0x1460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_CustomEvent_SelectionType_1;                // 0x1470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         CallFunc_GetDLSSGMode_ReturnValue;                 // 0x1471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1472[0x2];                                     // 0x1472(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_4;                 // 0x1474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_13;                          // 0x1478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         K2Node_Select_Default_14;                          // 0x1479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_15;                          // 0x147A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x147B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_4;             // 0x147C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EUStreamlineDLSSGMode>                 CallFunc_GetSupportedDLSSGModes_ReturnValue;       // 0x1480(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x1490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         CallFunc_Array_Get_Item_2;                         // 0x1491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1492[0x6];                                     // 0x1492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8; // 0x1498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x14A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x14AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14AD[0x3];                                     // 0x14AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SelectedItem;                   // 0x14B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_CustomEvent_SelectionType;                  // 0x14C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C1[0x3];                                     // 0x14C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x14C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_5;                 // 0x14C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_12;            // 0x14CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_7;              // 0x14CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14CE[0x2];                                     // 0x14CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x14D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x14D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D5[0x3];                                     // 0x14D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x14D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_6;        // 0x14E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x14F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9; // 0x1500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        CallFunc_GetDefaultReflexMode_ReturnValue;         // 0x1510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        K2Node_Select_Default_16;                          // 0x1511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1512[0x6];                                     // 0x1512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ReflexModeToStr_ReturnValue_2;            // 0x1518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         CallFunc_GetDefaultDLSSGMode_ReturnValue_1;        // 0x1528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         K2Node_Select_Default_17;                          // 0x1529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152A[0x6];                                     // 0x152A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10; // 0x1530(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         CallFunc_GetDLSSGMode_ReturnValue_1;               // 0x1540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_18;                          // 0x1541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1542[0x6];                                     // 0x1542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x1548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_1;             // 0x1550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x1558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_2;             // 0x1560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_3;             // 0x1568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x1570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_4;             // 0x1578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast; // 0x1580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetScreenPercent_ResScale_ImplicitCast;   // 0x1588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x1590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_1;   // 0x1598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_2;   // 0x15A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast_3;   // 0x15A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX) == 0x000008, "Wrong alignment on BPW_NGX_C_ExecuteUbergraph_BPW_NGX");
static_assert(sizeof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX) == 0x0015B0, "Wrong size on BPW_NGX_C_ExecuteUbergraph_BPW_NGX");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, EntryPoint) == 0x000000, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable) == 0x000024, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_1) == 0x000028, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue) == 0x00002C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetValidValue_ReturnValue) == 0x000034, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000035, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000048, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00004C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_2) == 0x000060, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_3) == 0x000064, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x000068, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetValidValue_ReturnValue_1) == 0x000070, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_3) == 0x000071, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000078, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1) == 0x000088, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00008C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CreateDelegate_OutputDelegate_3) == 0x000090, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000A0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable) == 0x0000B0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_text_Variable) == 0x0000B8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_text_Variable_1) == 0x0000D0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_1) == 0x0000E8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_string_Variable) == 0x0000F0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_2) == 0x000100, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_string_Variable_1) == 0x000108, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_3) == 0x000118, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_string_Variable_2) == 0x000120, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_4) == 0x000130, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_string_Variable_3) == 0x000138, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_5) == 0x000148, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_string_Variable_4) == 0x000150, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_6) == 0x000160, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_string_Variable_5) == 0x000168, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_7) == 0x000178, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_text_Variable_2) == 0x000180, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_text_Variable_3) == 0x000198, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_text_Variable_4) == 0x0001B0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001C8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_4) == 0x0001D8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_5) == 0x0001DC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_4) == 0x0001E0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001E4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetValidValue_ReturnValue_2) == 0x0001E8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_5) == 0x0001E9, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_ReflexModeToStr_ReturnValue) == 0x0001F0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_ReflexModeToStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorValueFromIndex_ReturnValue_2) == 0x000200, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorValueFromIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000204, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_6) == 0x000208, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable) == 0x00020C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_1) == 0x00020D, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_2) == 0x00020E, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CreateDelegate_OutputDelegate_6) == 0x000210, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_7) == 0x000220, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_3) == 0x000224, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_4) == 0x000225, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_5) == 0x000226, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_6) == 0x000227, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_8) == 0x000228, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_9) == 0x000229, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_10) == 0x00022A, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_7) == 0x00022B, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_11) == 0x00022C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_12) == 0x00022D, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_13) == 0x00022E, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_text_Variable_5) == 0x000230, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_8) == 0x000248, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_9) == 0x00024C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_6) == 0x000250, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Add_IntInt_ReturnValue_3) == 0x000254, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetValidValue_ReturnValue_3) == 0x000258, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetValidValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_7) == 0x000259, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000260, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorValueFromIndex_ReturnValue_3) == 0x000270, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorValueFromIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000274, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralByte_ReturnValue) == 0x000278, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_14) == 0x000279, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_ByteToString_ReturnValue) == 0x000280, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_10) == 0x000290, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_11) == 0x000294, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_8) == 0x000298, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Add_IntInt_ReturnValue_4) == 0x00029C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetValidValue_ReturnValue_4) == 0x0002A0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetValidValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_9) == 0x0002A1, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x0002A8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorValueFromIndex_ReturnValue_4) == 0x0002B8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorValueFromIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0002B9, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x0002BC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Variable_12) == 0x0002C0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_8) == 0x0002C4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_9) == 0x0002C5, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_10) == 0x0002C6, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_11) == 0x0002C7, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_12) == 0x0002C8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_15) == 0x0002C9, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_16) == 0x0002CA, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_13) == 0x0002CB, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_17) == 0x0002CC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_18) == 0x0002CD, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_19) == 0x0002CE, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_byte_Variable_14) == 0x0002CF, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_20) == 0x0002D0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_21) == 0x0002D1, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_22) == 0x0002D2, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D3, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_bIsSupported) == 0x0002D4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_bIsSupported' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage) == 0x0002D8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage) == 0x0002DC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_MinScreenPercentage) == 0x0002E0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_MinScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_MaxScreenPercentage) == 0x0002E4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_MaxScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_OptimalSharpness) == 0x0002E8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_OptimalSharpness' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue) == 0x0002EC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Not_PreBool_ReturnValue) == 0x0002ED, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SelectFloat_ReturnValue) == 0x0002F0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_1) == 0x0002F8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000300, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_2) == 0x000310, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Concat_StrStr_ReturnValue) == 0x000318, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Loop_Counter_Variable) == 0x000328, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Add_IntInt_ReturnValue_5) == 0x00032C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Array_Index_Variable) == 0x000330, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetViewportSize_ReturnValue) == 0x000338, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_bIsSupported_1) == 0x000348, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_bIsSupported_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1) == 0x00034C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1) == 0x000350, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_MinScreenPercentage_1) == 0x000354, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_MinScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1) == 0x000358, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_OptimalSharpness_1) == 0x00035C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_OptimalSharpness_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000360, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanAND_ReturnValue) == 0x000361, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Not_PreBool_ReturnValue_1) == 0x000362, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_3) == 0x000363, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_4) == 0x000364, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_5) == 0x000365, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SelectFloat_ReturnValue_1) == 0x000368, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000370, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000380, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000390, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralInt_ReturnValue) == 0x000394, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Less_IntInt_ReturnValue) == 0x000398, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_text_Variable_6) == 0x0003A0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_text_Variable_7) == 0x0003B8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_bool_Variable_23) == 0x0003D0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0003D1, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0003D2, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_6) == 0x0003D3, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetStreamlineFeatureInformation_ReturnValue) == 0x0003D4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetStreamlineFeatureInformation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Not_PreBool_ReturnValue_2) == 0x000408, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_7) == 0x000409, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_8) == 0x00040A, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000410, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData) == 0x000418, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000468, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_1) == 0x000470, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array) == 0x0004C0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0004D0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Format_ReturnValue) == 0x0004D8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_2) == 0x0004F0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000540, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_3) == 0x000548, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_4) == 0x000598, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_1) == 0x0005A0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_4) == 0x0005B0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Format_ReturnValue_1) == 0x000600, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_5) == 0x000618, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_6) == 0x000620, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_5) == 0x000628, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_6) == 0x000678, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_2) == 0x0006C8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_7) == 0x0006D8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Format_ReturnValue_2) == 0x0006E0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_7) == 0x0006F8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_8) == 0x000748, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_9) == 0x000750, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_8) == 0x000758, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_9) == 0x0007A8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported) == 0x0007F8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported) == 0x0007F9, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported) == 0x0007FA, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired) == 0x0007FB, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired) == 0x0007FC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_3) == 0x000800, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_BoolToText_ReturnValue) == 0x000810, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Format_ReturnValue_3) == 0x000828, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000840, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_bIsSupported_2) == 0x000858, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_bIsSupported_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_2) == 0x00085C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_2) == 0x000860, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_MinScreenPercentage_2) == 0x000864, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_MinScreenPercentage_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_MaxScreenPercentage_2) == 0x000868, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_MaxScreenPercentage_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_OptimalSharpness_2) == 0x00086C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_OptimalSharpness_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SelectFloat_ReturnValue_2) == 0x000870, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000878, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x000880, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Less_IntInt_ReturnValue_1) == 0x000890, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000898, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Loop_Counter_Variable_1) == 0x0008A8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Add_IntInt_ReturnValue_6) == 0x0008AC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Array_Index_Variable_1) == 0x0008B0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Loop_Counter_Variable_2) == 0x0008B4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Add_IntInt_ReturnValue_7) == 0x0008B8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, Temp_int_Array_Index_Variable_2) == 0x0008BC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralInt_ReturnValue_2) == 0x0008C0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Less_IntInt_ReturnValue_2) == 0x0008C4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetViewportSize_ReturnValue_1) == 0x0008C8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetViewportSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_bIsSupported_3) == 0x0008D8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_bIsSupported_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_3) == 0x0008DC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_3) == 0x0008E0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_MinScreenPercentage_3) == 0x0008E4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_MinScreenPercentage_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_MaxScreenPercentage_3) == 0x0008E8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_MaxScreenPercentage_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_OptimalSharpness_3) == 0x0008EC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_OptimalSharpness_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0008F0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanAND_ReturnValue_1) == 0x0008F1, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0008F2, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Not_PreBool_ReturnValue_3) == 0x0008F3, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_9) == 0x0008F4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_10) == 0x0008F5, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SelectFloat_ReturnValue_3) == 0x0008F8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_11) == 0x000900, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToString_ReturnValue_3) == 0x000908, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000918, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Event_IsDesignTime) == 0x000928, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Event_MyGeometry) == 0x00092C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Event_InDeltaTime) == 0x000964, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_QueryDLSSSupport_ReturnValue) == 0x000968, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_QueryDLSSSupport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000969, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_IsDLSSSupported_ReturnValue) == 0x00096A, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_IsDLSSSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default) == 0x000970, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_1) == 0x000988, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSMinimumDriverVersion_MinDriverVersionMajor) == 0x0009A0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSMinimumDriverVersion_MinDriverVersionMajor' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSMinimumDriverVersion_MinDriverVersionMinor) == 0x0009A4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSMinimumDriverVersion_MinDriverVersionMinor' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_10) == 0x0009A8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_10) == 0x0009B0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_11) == 0x000A00, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_11) == 0x000A08, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_4) == 0x000A58, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSScreenPercentageRange_MinScreenPercentage) == 0x000A68, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSScreenPercentageRange_MinScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSScreenPercentageRange_MaxScreenPercentage) == 0x000A6C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSScreenPercentageRange_MaxScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Format_ReturnValue_4) == 0x000A70, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_12) == 0x000A88, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_13) == 0x000AD8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_5) == 0x000B28, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Format_ReturnValue_5) == 0x000B38, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectedItem_5) == 0x000B50, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectedItem_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectionType_5) == 0x000B60, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectionType_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Find_ReturnValue) == 0x000B64, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_10) == 0x000B68, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetSupportedDLSSModes_ReturnValue) == 0x000B70, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetSupportedDLSSModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetValidValue_ReturnValue_5) == 0x000B80, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetValidValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Get_Item) == 0x000B81, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4) == 0x000B88, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000B98, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Length_ReturnValue) == 0x000B9C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Less_IntInt_ReturnValue_3) == 0x000BA0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000BA1, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000BA2, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_12) == 0x000BA3, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Not_PreBool_ReturnValue_4) == 0x000BA4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_bIsSupported_4) == 0x000BA5, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_bIsSupported_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_4) == 0x000BA8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_4) == 0x000BAC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_MinScreenPercentage_4) == 0x000BB0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_MinScreenPercentage_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_MaxScreenPercentage_4) == 0x000BB4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_MaxScreenPercentage_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSModeInformation_OptimalSharpness_4) == 0x000BB8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSModeInformation_OptimalSharpness_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_13) == 0x000BBC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SelectFloat_ReturnValue_4) == 0x000BC0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_14) == 0x000BC8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToString_ReturnValue_4) == 0x000BD0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000BE0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Add_ReturnValue) == 0x000BF0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectedItem_4) == 0x000BF8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectedItem_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectionType_4) == 0x000C08, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectionType_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Find_ReturnValue_1) == 0x000C0C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Add_ReturnValue_1) == 0x000C10, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_2) == 0x000C14, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectedItem_3) == 0x000C18, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectedItem_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectionType_3) == 0x000C28, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectionType_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Find_ReturnValue_2) == 0x000C2C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_11) == 0x000C30, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Add_ReturnValue_2) == 0x000C34, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetValidValue_ReturnValue_6) == 0x000C38, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetValidValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000C39, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_SwitchEnum_CmpSuccess) == 0x000C3A, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetStreamlineFeatureInformation_ReturnValue_1) == 0x000C3C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetStreamlineFeatureInformation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_12) == 0x000C70, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_13) == 0x000C78, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_14) == 0x000C80, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_15) == 0x000CD0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_15' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_6) == 0x000D20, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Format_ReturnValue_6) == 0x000D30, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_14) == 0x000D48, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_15) == 0x000D50, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_16) == 0x000D58, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_16' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_17) == 0x000DA8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_17' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_7) == 0x000DF8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_16) == 0x000E08, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Format_ReturnValue_7) == 0x000E10, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_18) == 0x000E28, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_18' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_17) == 0x000E78, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_18) == 0x000E80, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_19) == 0x000E88, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_19' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_20) == 0x000ED8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_20' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_8) == 0x000F28, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_19) == 0x000F38, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Format_ReturnValue_8) == 0x000F40, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Format_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_21) == 0x000F58, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_21' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_20) == 0x000FA8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToInt64_ReturnValue_21) == 0x000FB0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToInt64_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_22) == 0x000FB8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_22' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeStruct_FormatArgumentData_23) == 0x001008, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeStruct_FormatArgumentData_23' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported_1) == 0x001058, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported_1) == 0x001059, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported_1) == 0x00105A, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired_1) == 0x00105B, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired_1) == 0x00105C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_9) == 0x001060, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_BoolToText_ReturnValue_2) == 0x001070, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_BoolToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Format_ReturnValue_9) == 0x001088, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Format_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_BoolToText_ReturnValue_3) == 0x0010A0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_BoolToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_Value) == 0x0010B8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralString_ReturnValue) == 0x0010C0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToString_ReturnValue_5) == 0x0010D0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0010E0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Add_ReturnValue_3) == 0x0010F0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Add_ReturnValue_4) == 0x0010F4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_IsDLSSSupported_ReturnValue_1) == 0x0010F8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_IsDLSSSupported_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSGFrameTiming_FrameRateInHertz) == 0x0010FC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSGFrameTiming_FrameRateInHertz' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSGFrameTiming_FramesPresented) == 0x001100, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSGFrameTiming_FramesPresented' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_RemoveOption_ReturnValue) == 0x001104, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_RemoveOption_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToText_ReturnValue) == 0x001108, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToText_ReturnValue) == 0x001120, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralInt_ReturnValue_3) == 0x001138, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Less_IntInt_ReturnValue_4) == 0x00113C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_RemoveOption_ReturnValue_1) == 0x00113D, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_RemoveOption_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Add_ReturnValue_5) == 0x001140, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Add_ReturnValue_6) == 0x001144, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_QueryReflexSupport_ReturnValue) == 0x001148, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_QueryReflexSupport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5) == 0x001150, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_StringToText_ReturnValue) == 0x001160, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectedItem_2) == 0x001178, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectedItem_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectionType_2) == 0x001188, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectionType_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Find_ReturnValue_3) == 0x00118C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetGameLatencyInMs_ReturnValue) == 0x001190, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetGameLatencyInMs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_3) == 0x001194, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x001198, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_4) == 0x0011B0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetRenderLatencyInMs_ReturnValue) == 0x0011B4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetRenderLatencyInMs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x0011B8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetGameToRenderLatencyInMs_ReturnValue) == 0x0011D0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetGameToRenderLatencyInMs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x0011D8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_IsStreamlineFeatureSupported_ReturnValue) == 0x0011F0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_IsStreamlineFeatureSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_5) == 0x0011F8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetStreamlineFeatureInformation_ReturnValue_2) == 0x001210, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetStreamlineFeatureInformation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralString_ReturnValue_1) == 0x001248, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralString_ReturnValue_2) == 0x001258, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported_2) == 0x001268, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported_2) == 0x001269, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported_2) == 0x00126A, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired_2) == 0x00126B, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired_2) == 0x00126C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralString_ReturnValue_3) == 0x001270, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_6) == 0x001280, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_7) == 0x001290, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_8) == 0x0012A0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_10) == 0x0012B0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_10' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetStreamlineFeatureInformation_ReturnValue_3) == 0x0012C0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetStreamlineFeatureInformation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_JoinStringArray_ReturnValue) == 0x0012F8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_StringToText_ReturnValue_1) == 0x001308, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported_3) == 0x001320, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_D3D11Supported_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported_3) == 0x001321, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_D3D12Supported_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported_3) == 0x001322, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_VulkanSupported_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired_3) == 0x001323, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_VSyncOffRequired_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired_3) == 0x001324, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BreakStreamlineFeatureRequirements_HardwareSchedulingRequired_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralString_ReturnValue_4) == 0x001328, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralString_ReturnValue_5) == 0x001338, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_9) == 0x001348, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_10) == 0x001358, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralString_ReturnValue_6) == 0x001368, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_11) == 0x001378, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_11) == 0x001388, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_11' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_JoinStringArray_ReturnValue_1) == 0x001398, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_JoinStringArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_IsStreamlineFeatureSupported_ReturnValue_1) == 0x0013A8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_IsStreamlineFeatureSupported_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0013B0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_12) == 0x0013C8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_IsDLSSEnabled_ReturnValue) == 0x0013E0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_IsDLSSEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_bIsChecked) == 0x0013E1, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_IsDLSSRRSupported_ReturnValue) == 0x0013E2, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_IsDLSSRRSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_IsReflexSupported_ReturnValue) == 0x0013E3, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_IsReflexSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanAND_ReturnValue_2) == 0x0013E4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Add_ReturnValue_7) == 0x0013E8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_MakeArray_Array_12) == 0x0013F0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_MakeArray_Array_12' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Get_Item_1) == 0x001400, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Add_ReturnValue_8) == 0x001404, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_ReflexModeToStr_ReturnValue_1) == 0x001408, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_ReflexModeToStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Length_ReturnValue_1) == 0x001418, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Less_IntInt_ReturnValue_5) == 0x00141C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_QueryDLSSGSupport_ReturnValue) == 0x00141D, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_QueryDLSSGSupport_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6) == 0x001420, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_StringToText_ReturnValue_3) == 0x001430, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x001448, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDefaultDLSSGMode_ReturnValue) == 0x001449, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDefaultDLSSGMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7) == 0x001450, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectedItem_1) == 0x001460, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectedItem_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectionType_1) == 0x001470, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectionType_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSGMode_ReturnValue) == 0x001471, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSGMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Find_ReturnValue_4) == 0x001474, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_13) == 0x001478, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_14) == 0x001479, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_15) == 0x00147A, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_BooleanOR_ReturnValue_15) == 0x00147B, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralInt_ReturnValue_4) == 0x00147C, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetSupportedDLSSGModes_ReturnValue) == 0x001480, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetSupportedDLSSGModes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Less_IntInt_ReturnValue_6) == 0x001490, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Get_Item_2) == 0x001491, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8) == 0x001498, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Length_ReturnValue_2) == 0x0014A8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Less_IntInt_ReturnValue_7) == 0x0014AC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectedItem) == 0x0014B0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_CustomEvent_SelectionType) == 0x0014C0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_CustomEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Add_ReturnValue_9) == 0x0014C4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Array_Find_ReturnValue_5) == 0x0014C8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Array_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_IntToByte_ReturnValue_12) == 0x0014CC, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_IntToByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetValidValue_ReturnValue_7) == 0x0014CD, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetValidValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x0014D0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0014D4, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_MakeLiteralDouble_ReturnValue) == 0x0014D8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToString_ReturnValue_6) == 0x0014E0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0014F0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9) == 0x001500, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDefaultReflexMode_ReturnValue) == 0x001510, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDefaultReflexMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_16) == 0x001511, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_ReflexModeToStr_ReturnValue_2) == 0x001518, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_ReflexModeToStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDefaultDLSSGMode_ReturnValue_1) == 0x001528, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDefaultDLSSGMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_17) == 0x001529, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10) == 0x001530, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_GetDLSSGMode_ReturnValue_1) == 0x001540, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_GetDLSSGMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, K2Node_Select_Default_18) == 0x001541, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SelectFloat_B_ImplicitCast) == 0x001548, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SelectFloat_B_ImplicitCast_1) == 0x001550, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SelectFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x001558, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SelectFloat_B_ImplicitCast_2) == 0x001560, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SelectFloat_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SelectFloat_B_ImplicitCast_3) == 0x001568, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SelectFloat_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x001570, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SelectFloat_B_ImplicitCast_4) == 0x001578, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SelectFloat_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast) == 0x001580, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_SetScreenPercent_ResScale_ImplicitCast) == 0x001588, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_SetScreenPercent_ResScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x001590, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToText_Value_ImplicitCast_1) == 0x001598, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToText_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToText_Value_ImplicitCast_2) == 0x0015A0, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToText_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ExecuteUbergraph_BPW_NGX, CallFunc_Conv_DoubleToText_Value_ImplicitCast_3) == 0x0015A8, "Member 'BPW_NGX_C_ExecuteUbergraph_BPW_NGX::CallFunc_Conv_DoubleToText_Value_ImplicitCast_3' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.FSRupscaler
// 0x0080 (0x0080 - 0x0000)
struct BPW_NGX_C_FSRupscaler final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIntCVar_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              K2Node_Select_Default;                             // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_FSRupscaler) == 0x000008, "Wrong alignment on BPW_NGX_C_FSRupscaler");
static_assert(sizeof(BPW_NGX_C_FSRupscaler) == 0x000080, "Wrong size on BPW_NGX_C_FSRupscaler");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, Temp_bool_Variable) == 0x000000, "Member 'BPW_NGX_C_FSRupscaler::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, Temp_byte_Variable) == 0x000001, "Member 'BPW_NGX_C_FSRupscaler::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, Temp_byte_Variable_1) == 0x000002, "Member 'BPW_NGX_C_FSRupscaler::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, Temp_string_Variable) == 0x000008, "Member 'BPW_NGX_C_FSRupscaler::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, Temp_string_Variable_1) == 0x000018, "Member 'BPW_NGX_C_FSRupscaler::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, Temp_string_Variable_2) == 0x000028, "Member 'BPW_NGX_C_FSRupscaler::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, Temp_string_Variable_3) == 0x000038, "Member 'BPW_NGX_C_FSRupscaler::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, Temp_string_Variable_4) == 0x000048, "Member 'BPW_NGX_C_FSRupscaler::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, CallFunc_GetIntCVar_ReturnValue) == 0x000058, "Member 'BPW_NGX_C_FSRupscaler::CallFunc_GetIntCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BPW_NGX_C_FSRupscaler::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, CallFunc_Conv_IntToByte_ReturnValue) == 0x00005D, "Member 'BPW_NGX_C_FSRupscaler::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, CallFunc_GetValidValue_ReturnValue) == 0x00005E, "Member 'BPW_NGX_C_FSRupscaler::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, K2Node_Select_Default) == 0x00005F, "Member 'BPW_NGX_C_FSRupscaler::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, K2Node_Select_Default_1) == 0x000060, "Member 'BPW_NGX_C_FSRupscaler::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_FSRupscaler, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BPW_NGX_C_FSRupscaler::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.IsDLSS-FG-Enabled
// 0x000C (0x000C - 0x0000)
struct BPW_NGX_C_IsDLSSMinusFGMinusEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         CallFunc_GetDefaultDLSSGMode_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled) == 0x000001, "Wrong alignment on BPW_NGX_C_IsDLSSMinusFGMinusEnabled");
static_assert(sizeof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled) == 0x00000C, "Wrong size on BPW_NGX_C_IsDLSSMinusFGMinusEnabled");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, Enabled) == 0x000000, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::Enabled' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, Temp_byte_Variable) == 0x000001, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, Temp_bool_Variable) == 0x000002, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, Temp_bool_Variable_1) == 0x000003, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, Temp_bool_Variable_2) == 0x000004, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, Temp_byte_Variable_1) == 0x000005, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, Temp_bool_Variable_3) == 0x000006, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, Temp_bool_Variable_4) == 0x000007, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, Temp_bool_Variable_5) == 0x000008, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, CallFunc_GetDefaultDLSSGMode_ReturnValue) == 0x000009, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::CallFunc_GetDefaultDLSSGMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, K2Node_Select_Default) == 0x00000A, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_IsDLSSMinusFGMinusEnabled, K2Node_Select_Default_1) == 0x00000B, "Member 'BPW_NGX_C_IsDLSSMinusFGMinusEnabled::K2Node_Select_Default_1' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.LoadSave
// 0x0070 (0x0070 - 0x0000)
struct BPW_NGX_C_LoadSave final
{
public:
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUpscalerSettingSave_C*                 CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeleteGameInSlot_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUpscalerSettingSave_C*                 K2Node_DynamicCast_AsUpscaler_Setting_Save;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUpscalerSettingSave_C*                 K2Node_DynamicCast_AsUpscaler_Setting_Save_1;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue_1;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_LoadSave) == 0x000008, "Wrong alignment on BPW_NGX_C_LoadSave");
static_assert(sizeof(BPW_NGX_C_LoadSave) == 0x000070, "Wrong size on BPW_NGX_C_LoadSave");
static_assert(offsetof(BPW_NGX_C_LoadSave, CallFunc_MakeLiteralString_ReturnValue) == 0x000000, "Member 'BPW_NGX_C_LoadSave::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000010, "Member 'BPW_NGX_C_LoadSave::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, CallFunc_DeleteGameInSlot_ReturnValue) == 0x000018, "Member 'BPW_NGX_C_LoadSave::CallFunc_DeleteGameInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000020, "Member 'BPW_NGX_C_LoadSave::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000028, "Member 'BPW_NGX_C_LoadSave::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, K2Node_DynamicCast_AsUpscaler_Setting_Save) == 0x000030, "Member 'BPW_NGX_C_LoadSave::K2Node_DynamicCast_AsUpscaler_Setting_Save' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPW_NGX_C_LoadSave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000040, "Member 'BPW_NGX_C_LoadSave::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, CallFunc_LoadGameFromSlot_ReturnValue_1) == 0x000050, "Member 'BPW_NGX_C_LoadSave::CallFunc_LoadGameFromSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, CallFunc_SaveGameToSlot_ReturnValue) == 0x000058, "Member 'BPW_NGX_C_LoadSave::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, K2Node_DynamicCast_AsUpscaler_Setting_Save_1) == 0x000060, "Member 'BPW_NGX_C_LoadSave::K2Node_DynamicCast_AsUpscaler_Setting_Save_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BPW_NGX_C_LoadSave::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_LoadSave, CallFunc_DoesSaveGameExist_ReturnValue_1) == 0x000069, "Member 'BPW_NGX_C_LoadSave::CallFunc_DoesSaveGameExist_ReturnValue_1' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.OnDLSS-FGEnabled__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BPW_NGX_C_OnDLSSMinusFGEnabled__DelegateSignature final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_OnDLSSMinusFGEnabled__DelegateSignature) == 0x000001, "Wrong alignment on BPW_NGX_C_OnDLSSMinusFGEnabled__DelegateSignature");
static_assert(sizeof(BPW_NGX_C_OnDLSSMinusFGEnabled__DelegateSignature) == 0x000001, "Wrong size on BPW_NGX_C_OnDLSSMinusFGEnabled__DelegateSignature");
static_assert(offsetof(BPW_NGX_C_OnDLSSMinusFGEnabled__DelegateSignature, Enabled) == 0x000000, "Member 'BPW_NGX_C_OnDLSSMinusFGEnabled__DelegateSignature::Enabled' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.OnReflexSet
// 0x0018 (0x0018 - 0x0000)
struct BPW_NGX_C_OnReflexSet final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_OnReflexSet) == 0x000008, "Wrong alignment on BPW_NGX_C_OnReflexSet");
static_assert(sizeof(BPW_NGX_C_OnReflexSet) == 0x000018, "Wrong size on BPW_NGX_C_OnReflexSet");
static_assert(offsetof(BPW_NGX_C_OnReflexSet, SelectedItem) == 0x000000, "Member 'BPW_NGX_C_OnReflexSet::SelectedItem' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_OnReflexSet, SelectionType) == 0x000010, "Member 'BPW_NGX_C_OnReflexSet::SelectionType' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.OnSelectionChanged_Event_0
// 0x0018 (0x0018 - 0x0000)
struct BPW_NGX_C_OnSelectionChanged_Event_0 final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_OnSelectionChanged_Event_0) == 0x000008, "Wrong alignment on BPW_NGX_C_OnSelectionChanged_Event_0");
static_assert(sizeof(BPW_NGX_C_OnSelectionChanged_Event_0) == 0x000018, "Wrong size on BPW_NGX_C_OnSelectionChanged_Event_0");
static_assert(offsetof(BPW_NGX_C_OnSelectionChanged_Event_0, SelectedItem) == 0x000000, "Member 'BPW_NGX_C_OnSelectionChanged_Event_0::SelectedItem' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_OnSelectionChanged_Event_0, SelectionType) == 0x000010, "Member 'BPW_NGX_C_OnSelectionChanged_Event_0::SelectionType' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.OnSelectionChanged_Event_1
// 0x0018 (0x0018 - 0x0000)
struct BPW_NGX_C_OnSelectionChanged_Event_1 final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_OnSelectionChanged_Event_1) == 0x000008, "Wrong alignment on BPW_NGX_C_OnSelectionChanged_Event_1");
static_assert(sizeof(BPW_NGX_C_OnSelectionChanged_Event_1) == 0x000018, "Wrong size on BPW_NGX_C_OnSelectionChanged_Event_1");
static_assert(offsetof(BPW_NGX_C_OnSelectionChanged_Event_1, SelectedItem) == 0x000000, "Member 'BPW_NGX_C_OnSelectionChanged_Event_1::SelectedItem' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_OnSelectionChanged_Event_1, SelectionType) == 0x000010, "Member 'BPW_NGX_C_OnSelectionChanged_Event_1::SelectionType' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.OnSelectionChanged_Event_3
// 0x0018 (0x0018 - 0x0000)
struct BPW_NGX_C_OnSelectionChanged_Event_3 final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_OnSelectionChanged_Event_3) == 0x000008, "Wrong alignment on BPW_NGX_C_OnSelectionChanged_Event_3");
static_assert(sizeof(BPW_NGX_C_OnSelectionChanged_Event_3) == 0x000018, "Wrong size on BPW_NGX_C_OnSelectionChanged_Event_3");
static_assert(offsetof(BPW_NGX_C_OnSelectionChanged_Event_3, SelectedItem) == 0x000000, "Member 'BPW_NGX_C_OnSelectionChanged_Event_3::SelectedItem' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_OnSelectionChanged_Event_3, SelectionType) == 0x000010, "Member 'BPW_NGX_C_OnSelectionChanged_Event_3::SelectionType' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.OnValueChanged_Event_3
// 0x0004 (0x0004 - 0x0000)
struct BPW_NGX_C_OnValueChanged_Event_3 final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_OnValueChanged_Event_3) == 0x000004, "Wrong alignment on BPW_NGX_C_OnValueChanged_Event_3");
static_assert(sizeof(BPW_NGX_C_OnValueChanged_Event_3) == 0x000004, "Wrong size on BPW_NGX_C_OnValueChanged_Event_3");
static_assert(offsetof(BPW_NGX_C_OnValueChanged_Event_3, Value) == 0x000000, "Member 'BPW_NGX_C_OnValueChanged_Event_3::Value' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPW_NGX_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_PreConstruct) == 0x000001, "Wrong alignment on BPW_NGX_C_PreConstruct");
static_assert(sizeof(BPW_NGX_C_PreConstruct) == 0x000001, "Wrong size on BPW_NGX_C_PreConstruct");
static_assert(offsetof(BPW_NGX_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPW_NGX_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.ReflexModeToStr
// 0x0060 (0x0060 - 0x0000)
struct BPW_NGX_C_ReflexModeToStr final
{
public:
	EUStreamlineReflexMode                        Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	EUStreamlineReflexMode                        Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_2;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0050(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_ReflexModeToStr) == 0x000008, "Wrong alignment on BPW_NGX_C_ReflexModeToStr");
static_assert(sizeof(BPW_NGX_C_ReflexModeToStr) == 0x000060, "Wrong size on BPW_NGX_C_ReflexModeToStr");
static_assert(offsetof(BPW_NGX_C_ReflexModeToStr, Index_0) == 0x000000, "Member 'BPW_NGX_C_ReflexModeToStr::Index_0' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReflexModeToStr, ReturnValue) == 0x000008, "Member 'BPW_NGX_C_ReflexModeToStr::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReflexModeToStr, Temp_byte_Variable) == 0x000018, "Member 'BPW_NGX_C_ReflexModeToStr::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReflexModeToStr, CallFunc_MakeLiteralString_ReturnValue) == 0x000020, "Member 'BPW_NGX_C_ReflexModeToStr::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReflexModeToStr, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000030, "Member 'BPW_NGX_C_ReflexModeToStr::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReflexModeToStr, CallFunc_MakeLiteralString_ReturnValue_2) == 0x000040, "Member 'BPW_NGX_C_ReflexModeToStr::CallFunc_MakeLiteralString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReflexModeToStr, K2Node_Select_Default) == 0x000050, "Member 'BPW_NGX_C_ReflexModeToStr::K2Node_Select_Default' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.ReloadFGSettings
// 0x0018 (0x0018 - 0x0000)
struct BPW_NGX_C_ReloadFGSettings final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         CallFunc_GetDefaultDLSSGMode_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDLSSGSupported_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_ReloadFGSettings) == 0x000008, "Wrong alignment on BPW_NGX_C_ReloadFGSettings");
static_assert(sizeof(BPW_NGX_C_ReloadFGSettings) == 0x000018, "Wrong size on BPW_NGX_C_ReloadFGSettings");
static_assert(offsetof(BPW_NGX_C_ReloadFGSettings, Temp_bool_Variable) == 0x000000, "Member 'BPW_NGX_C_ReloadFGSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReloadFGSettings, CallFunc_GetDefaultDLSSGMode_ReturnValue) == 0x000001, "Member 'BPW_NGX_C_ReloadFGSettings::CallFunc_GetDefaultDLSSGMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReloadFGSettings, CallFunc_IsDLSSGSupported_ReturnValue) == 0x000002, "Member 'BPW_NGX_C_ReloadFGSettings::CallFunc_IsDLSSGSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReloadFGSettings, K2Node_Select_Default) == 0x000003, "Member 'BPW_NGX_C_ReloadFGSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReloadFGSettings, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BPW_NGX_C_ReloadFGSettings::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.ReloadReflexSettings
// 0x0018 (0x0018 - 0x0000)
struct BPW_NGX_C_ReloadReflexSettings final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        CallFunc_GetDefaultReflexMode_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        K2Node_Select_Default;                             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStreamlineFeatureSupported_ReturnValue; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_ByteToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_ReloadReflexSettings) == 0x000008, "Wrong alignment on BPW_NGX_C_ReloadReflexSettings");
static_assert(sizeof(BPW_NGX_C_ReloadReflexSettings) == 0x000018, "Wrong size on BPW_NGX_C_ReloadReflexSettings");
static_assert(offsetof(BPW_NGX_C_ReloadReflexSettings, Temp_bool_Variable) == 0x000000, "Member 'BPW_NGX_C_ReloadReflexSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReloadReflexSettings, CallFunc_GetDefaultReflexMode_ReturnValue) == 0x000001, "Member 'BPW_NGX_C_ReloadReflexSettings::CallFunc_GetDefaultReflexMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReloadReflexSettings, K2Node_Select_Default) == 0x000002, "Member 'BPW_NGX_C_ReloadReflexSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReloadReflexSettings, CallFunc_IsStreamlineFeatureSupported_ReturnValue) == 0x000003, "Member 'BPW_NGX_C_ReloadReflexSettings::CallFunc_IsStreamlineFeatureSupported_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_ReloadReflexSettings, CallFunc_Conv_ByteToString_ReturnValue) == 0x000008, "Member 'BPW_NGX_C_ReloadReflexSettings::CallFunc_Conv_ByteToString_ReturnValue' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.SetAntiAliasingCVar
// 0x0078 (0x0078 - 0x0000)
struct BPW_NGX_C_SetAntiAliasingCVar final
{
public:
	E_BuiltInAAModes                              AAMode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_SetAntiAliasingCVar) == 0x000008, "Wrong alignment on BPW_NGX_C_SetAntiAliasingCVar");
static_assert(sizeof(BPW_NGX_C_SetAntiAliasingCVar) == 0x000078, "Wrong size on BPW_NGX_C_SetAntiAliasingCVar");
static_assert(offsetof(BPW_NGX_C_SetAntiAliasingCVar, AAMode) == 0x000000, "Member 'BPW_NGX_C_SetAntiAliasingCVar::AAMode' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetAntiAliasingCVar, Temp_byte_Variable) == 0x000001, "Member 'BPW_NGX_C_SetAntiAliasingCVar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetAntiAliasingCVar, Temp_string_Variable) == 0x000008, "Member 'BPW_NGX_C_SetAntiAliasingCVar::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetAntiAliasingCVar, Temp_string_Variable_1) == 0x000018, "Member 'BPW_NGX_C_SetAntiAliasingCVar::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetAntiAliasingCVar, Temp_string_Variable_2) == 0x000028, "Member 'BPW_NGX_C_SetAntiAliasingCVar::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetAntiAliasingCVar, Temp_string_Variable_3) == 0x000038, "Member 'BPW_NGX_C_SetAntiAliasingCVar::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetAntiAliasingCVar, Temp_string_Variable_4) == 0x000048, "Member 'BPW_NGX_C_SetAntiAliasingCVar::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetAntiAliasingCVar, K2Node_Select_Default) == 0x000058, "Member 'BPW_NGX_C_SetAntiAliasingCVar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetAntiAliasingCVar, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BPW_NGX_C_SetAntiAliasingCVar::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.SetTSR
// 0x0020 (0x0020 - 0x0000)
struct BPW_NGX_C_SetTSR final
{
public:
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_SetTSR) == 0x000008, "Wrong alignment on BPW_NGX_C_SetTSR");
static_assert(sizeof(BPW_NGX_C_SetTSR) == 0x000020, "Wrong size on BPW_NGX_C_SetTSR");
static_assert(offsetof(BPW_NGX_C_SetTSR, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000000, "Member 'BPW_NGX_C_SetTSR::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetTSR, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BPW_NGX_C_SetTSR::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.SetUpscaleBuiltIn
// 0x00F8 (0x00F8 - 0x0000)
struct BPW_NGX_C_SetUpscaleBuiltIn final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported_1;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage_1; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness_1; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_1;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_SetUpscaleBuiltIn) == 0x000008, "Wrong alignment on BPW_NGX_C_SetUpscaleBuiltIn");
static_assert(sizeof(BPW_NGX_C_SetUpscaleBuiltIn) == 0x0000F8, "Wrong size on BPW_NGX_C_SetUpscaleBuiltIn");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_bIsSupported) == 0x000005, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_bIsSupported' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage) == 0x000008, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage) == 0x00000C, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_MinScreenPercentage) == 0x000010, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_MinScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_MaxScreenPercentage) == 0x000014, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_MaxScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_OptimalSharpness) == 0x000018, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_OptimalSharpness' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_BooleanOR_ReturnValue_1) == 0x00001C, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_BooleanOR_ReturnValue_2) == 0x000028, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000030, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetViewportSize_ReturnValue) == 0x000050, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_bIsSupported_1) == 0x000060, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_bIsSupported_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1) == 0x000064, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1) == 0x000068, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_MinScreenPercentage_1) == 0x00006C, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_MinScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1) == 0x000070, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetDLSSModeInformation_OptimalSharpness_1) == 0x000074, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetDLSSModeInformation_OptimalSharpness_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000078, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_BooleanAND_ReturnValue) == 0x000079, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00007A, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007B, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_BooleanOR_ReturnValue_3) == 0x00007C, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_BooleanOR_ReturnValue_4) == 0x00007D, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_SelectFloat_ReturnValue_1) == 0x000080, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_BooleanOR_ReturnValue_5) == 0x000088, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000090, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x0000B0, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C0, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000D0, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_SelectFloat_B_ImplicitCast) == 0x0000E0, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_SelectFloat_B_ImplicitCast_1) == 0x0000E8, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_SelectFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleBuiltIn, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000F0, "Member 'BPW_NGX_C_SetUpscaleBuiltIn::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.SetUpscaleDLSS
// 0x0188 (0x0188 - 0x0000)
struct BPW_NGX_C_SetUpscaleDLSS final
{
public:
	E_BuiltInAAModes                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              Temp_byte_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported;      // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness;  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported_1;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage_1; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness_1; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIntCVar_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              K2Node_Select_Default;                             // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EUDLSSMode                                    CallFunc_GetDefaultDLSSMode_ReturnValue;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EUDLSSMode                                    K2Node_Select_Default_2;                           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_1;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetNISSharpness_Sharpness_ImplicitCast;   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_SetUpscaleDLSS) == 0x000008, "Wrong alignment on BPW_NGX_C_SetUpscaleDLSS");
static_assert(sizeof(BPW_NGX_C_SetUpscaleDLSS) == 0x000188, "Wrong size on BPW_NGX_C_SetUpscaleDLSS");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, Temp_byte_Variable) == 0x000000, "Member 'BPW_NGX_C_SetUpscaleDLSS::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, Temp_string_Variable) == 0x000008, "Member 'BPW_NGX_C_SetUpscaleDLSS::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, Temp_string_Variable_1) == 0x000018, "Member 'BPW_NGX_C_SetUpscaleDLSS::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, Temp_string_Variable_2) == 0x000028, "Member 'BPW_NGX_C_SetUpscaleDLSS::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, Temp_string_Variable_3) == 0x000038, "Member 'BPW_NGX_C_SetUpscaleDLSS::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, Temp_string_Variable_4) == 0x000048, "Member 'BPW_NGX_C_SetUpscaleDLSS::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, Temp_bool_Variable) == 0x000058, "Member 'BPW_NGX_C_SetUpscaleDLSS::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, Temp_byte_Variable_1) == 0x000059, "Member 'BPW_NGX_C_SetUpscaleDLSS::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_bIsSupported) == 0x00005B, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_bIsSupported' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage) == 0x00005C, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage) == 0x000060, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_MinScreenPercentage) == 0x000064, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_MinScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_MaxScreenPercentage) == 0x000068, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_MaxScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_OptimalSharpness) == 0x00006C, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_OptimalSharpness' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_BooleanOR_ReturnValue) == 0x000070, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_BooleanOR_ReturnValue_1) == 0x000080, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000088, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_BooleanOR_ReturnValue_2) == 0x000098, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, Temp_bool_Variable_1) == 0x0000B0, "Member 'BPW_NGX_C_SetUpscaleDLSS::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetViewportSize_ReturnValue) == 0x0000B8, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_bIsSupported_1) == 0x0000C8, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_bIsSupported_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1) == 0x0000CC, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1) == 0x0000D0, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_MinScreenPercentage_1) == 0x0000D4, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_MinScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1) == 0x0000D8, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_MaxScreenPercentage_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDLSSModeInformation_OptimalSharpness_1) == 0x0000DC, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDLSSModeInformation_OptimalSharpness_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_BooleanAND_ReturnValue) == 0x0000E1, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E2, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E3, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_BooleanOR_ReturnValue_3) == 0x0000E4, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_BooleanOR_ReturnValue_4) == 0x0000E5, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_SelectFloat_ReturnValue_1) == 0x0000E8, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_BooleanOR_ReturnValue_5) == 0x0000F0, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x0000F8, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000108, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetIntCVar_ReturnValue) == 0x000118, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetIntCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00011C, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_Conv_IntToByte_ReturnValue) == 0x00011D, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetValidValue_ReturnValue) == 0x00011E, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, K2Node_Select_Default) == 0x00011F, "Member 'BPW_NGX_C_SetUpscaleDLSS::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, K2Node_Select_Default_1) == 0x000120, "Member 'BPW_NGX_C_SetUpscaleDLSS::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetDefaultDLSSMode_ReturnValue) == 0x000130, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetDefaultDLSSMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000138, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, K2Node_Select_Default_2) == 0x000148, "Member 'BPW_NGX_C_SetUpscaleDLSS::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000149, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000150, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000160, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_SelectFloat_B_ImplicitCast) == 0x000168, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_SelectFloat_B_ImplicitCast_1) == 0x000170, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_SelectFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000178, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SetUpscaleDLSS, CallFunc_SetNISSharpness_Sharpness_ImplicitCast) == 0x000180, "Member 'BPW_NGX_C_SetUpscaleDLSS::CallFunc_SetNISSharpness_Sharpness_ImplicitCast' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.SwapUpscaler
// 0x0020 (0x0020 - 0x0000)
struct BPW_NGX_C_SwapUpscaler final
{
public:
	int32                                         DLSS;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FSR3;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_SwapUpscaler) == 0x000004, "Wrong alignment on BPW_NGX_C_SwapUpscaler");
static_assert(sizeof(BPW_NGX_C_SwapUpscaler) == 0x000020, "Wrong size on BPW_NGX_C_SwapUpscaler");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, DLSS) == 0x000000, "Member 'BPW_NGX_C_SwapUpscaler::DLSS' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, FSR3) == 0x000004, "Member 'BPW_NGX_C_SwapUpscaler::FSR3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, Temp_byte_Variable) == 0x000008, "Member 'BPW_NGX_C_SwapUpscaler::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, Temp_byte_Variable_1) == 0x000009, "Member 'BPW_NGX_C_SwapUpscaler::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, Temp_int_Variable) == 0x00000C, "Member 'BPW_NGX_C_SwapUpscaler::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, Temp_byte_Variable_2) == 0x000010, "Member 'BPW_NGX_C_SwapUpscaler::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, Temp_byte_Variable_3) == 0x000011, "Member 'BPW_NGX_C_SwapUpscaler::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, K2Node_Select_Default) == 0x000012, "Member 'BPW_NGX_C_SwapUpscaler::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, Temp_int_Variable_1) == 0x000014, "Member 'BPW_NGX_C_SwapUpscaler::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BPW_NGX_C_SwapUpscaler::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, K2Node_Select_Default_1) == 0x000019, "Member 'BPW_NGX_C_SwapUpscaler::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00001A, "Member 'BPW_NGX_C_SwapUpscaler::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BPW_NGX_C_SwapUpscaler::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_SwapUpscaler, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'BPW_NGX_C_SwapUpscaler::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.Tick
// 0x003C (0x003C - 0x0000)
struct BPW_NGX_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_Tick) == 0x000004, "Wrong alignment on BPW_NGX_C_Tick");
static_assert(sizeof(BPW_NGX_C_Tick) == 0x00003C, "Wrong size on BPW_NGX_C_Tick");
static_assert(offsetof(BPW_NGX_C_Tick, MyGeometry) == 0x000000, "Member 'BPW_NGX_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_Tick, InDeltaTime) == 0x000038, "Member 'BPW_NGX_C_Tick::InDeltaTime' has a wrong offset!");

// Function BPW_NGX.BPW_NGX_C.UpdateDLSSDevStats
// 0x01E0 (0x01E0 - 0x0000)
struct BPW_NGX_C_UpdateDLSSDevStats final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          CallFunc_IsDLSSEnabled_ReturnValue;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsSupported;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_OptimalScreenPercentage; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDLSSModeInformation_MinScreenPercentage; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_MaxScreenPercentage; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDLSSModeInformation_OptimalSharpness;  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x00B8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0148(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0198(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default;                             // 0x01A8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01C0(0x0018)()
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPW_NGX_C_UpdateDLSSDevStats) == 0x000008, "Wrong alignment on BPW_NGX_C_UpdateDLSSDevStats");
static_assert(sizeof(BPW_NGX_C_UpdateDLSSDevStats) == 0x0001E0, "Wrong size on BPW_NGX_C_UpdateDLSSDevStats");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, Temp_bool_Variable) == 0x000000, "Member 'BPW_NGX_C_UpdateDLSSDevStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, Temp_text_Variable) == 0x000008, "Member 'BPW_NGX_C_UpdateDLSSDevStats::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, Temp_text_Variable_1) == 0x000020, "Member 'BPW_NGX_C_UpdateDLSSDevStats::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_IsDLSSEnabled_ReturnValue) == 0x000038, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_IsDLSSEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_GetViewportSize_ReturnValue) == 0x000040, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_GetDLSSModeInformation_bIsSupported) == 0x000050, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_GetDLSSModeInformation_bIsSupported' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_GetDLSSModeInformation_OptimalScreenPercentage) == 0x000054, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_GetDLSSModeInformation_OptimalScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage) == 0x000058, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_GetDLSSModeInformation_bIsFixedScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_GetDLSSModeInformation_MinScreenPercentage) == 0x00005C, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_GetDLSSModeInformation_MinScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_GetDLSSModeInformation_MaxScreenPercentage) == 0x000060, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_GetDLSSModeInformation_MaxScreenPercentage' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_GetDLSSModeInformation_OptimalSharpness) == 0x000064, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_GetDLSSModeInformation_OptimalSharpness' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'BPW_NGX_C_UpdateDLSSDevStats::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0000B8, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BPW_NGX_C_UpdateDLSSDevStats::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F8, "Member 'BPW_NGX_C_UpdateDLSSDevStats::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, K2Node_MakeStruct_FormatArgumentData_2) == 0x000148, "Member 'BPW_NGX_C_UpdateDLSSDevStats::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, K2Node_MakeArray_Array_1) == 0x000198, "Member 'BPW_NGX_C_UpdateDLSSDevStats::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, K2Node_Select_Default) == 0x0001A8, "Member 'BPW_NGX_C_UpdateDLSSDevStats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_Format_ReturnValue_1) == 0x0001C0, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPW_NGX_C_UpdateDLSSDevStats, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x0001D8, "Member 'BPW_NGX_C_UpdateDLSSDevStats::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

}

