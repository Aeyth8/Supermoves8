#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UDS_Calendar

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass UDS_Calendar.UDS_Calendar_C
// 0x0078 (0x00A8 - 0x0030)
class UUDS_Calendar_C final : public UPrimaryDataAsset
{
public:
	TMap<class FString, int32>                    Months;                                            // 0x0030(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Uses_Leap_Year;                                    // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Leap_Year_Month;                                   // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Winter_Solstice_Offset;                            // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Days_of_the_Week;                                  // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Day_of_the_Week_Offset;                            // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UDS_Calendar_C">();
	}
	static class UUDS_Calendar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUDS_Calendar_C>();
	}
};
static_assert(alignof(UUDS_Calendar_C) == 0x000008, "Wrong alignment on UUDS_Calendar_C");
static_assert(sizeof(UUDS_Calendar_C) == 0x0000A8, "Wrong size on UUDS_Calendar_C");
static_assert(offsetof(UUDS_Calendar_C, Months) == 0x000030, "Member 'UUDS_Calendar_C::Months' has a wrong offset!");
static_assert(offsetof(UUDS_Calendar_C, Uses_Leap_Year) == 0x000080, "Member 'UUDS_Calendar_C::Uses_Leap_Year' has a wrong offset!");
static_assert(offsetof(UUDS_Calendar_C, Leap_Year_Month) == 0x000084, "Member 'UUDS_Calendar_C::Leap_Year_Month' has a wrong offset!");
static_assert(offsetof(UUDS_Calendar_C, Winter_Solstice_Offset) == 0x000088, "Member 'UUDS_Calendar_C::Winter_Solstice_Offset' has a wrong offset!");
static_assert(offsetof(UUDS_Calendar_C, Days_of_the_Week) == 0x000090, "Member 'UUDS_Calendar_C::Days_of_the_Week' has a wrong offset!");
static_assert(offsetof(UUDS_Calendar_C, Day_of_the_Week_Offset) == 0x0000A0, "Member 'UUDS_Calendar_C::Day_of_the_Week_Offset' has a wrong offset!");

}

