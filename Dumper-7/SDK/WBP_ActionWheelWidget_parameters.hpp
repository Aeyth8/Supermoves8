#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ActionWheelWidget

#include "Basic.hpp"

#include "GYMGAME_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_ActionWheelWidget.WBP_ActionWheelWidget_C.AddAction
// 0x0020 (0x0020 - 0x0000)
struct WBP_ActionWheelWidget_C_AddAction final
{
public:
	class UGymMetaAction*                         Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxActions;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_ActionWheelSelectionWidget_C*      CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionWheelWidget_C_AddAction) == 0x000008, "Wrong alignment on WBP_ActionWheelWidget_C_AddAction");
static_assert(sizeof(WBP_ActionWheelWidget_C_AddAction) == 0x000020, "Wrong size on WBP_ActionWheelWidget_C_AddAction");
static_assert(offsetof(WBP_ActionWheelWidget_C_AddAction, Action) == 0x000000, "Member 'WBP_ActionWheelWidget_C_AddAction::Action' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_AddAction, Index_0) == 0x000008, "Member 'WBP_ActionWheelWidget_C_AddAction::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_AddAction, MaxActions) == 0x00000C, "Member 'WBP_ActionWheelWidget_C_AddAction::MaxActions' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_AddAction, CallFunc_Create_ReturnValue) == 0x000010, "Member 'WBP_ActionWheelWidget_C_AddAction::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_AddAction, CallFunc_AddChildToCanvas_ReturnValue) == 0x000018, "Member 'WBP_ActionWheelWidget_C_AddAction::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function WBP_ActionWheelWidget.WBP_ActionWheelWidget_C.BP_OpenPage
// 0x0004 (0x0004 - 0x0000)
struct WBP_ActionWheelWidget_C_BP_OpenPage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionWheelWidget_C_BP_OpenPage) == 0x000004, "Wrong alignment on WBP_ActionWheelWidget_C_BP_OpenPage");
static_assert(sizeof(WBP_ActionWheelWidget_C_BP_OpenPage) == 0x000004, "Wrong size on WBP_ActionWheelWidget_C_BP_OpenPage");
static_assert(offsetof(WBP_ActionWheelWidget_C_BP_OpenPage, Page) == 0x000000, "Member 'WBP_ActionWheelWidget_C_BP_OpenPage::Page' has a wrong offset!");

// Function WBP_ActionWheelWidget.WBP_ActionWheelWidget_C.ExecuteUbergraph_WBP_ActionWheelWidget
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0024(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Page;                                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGymPlayerController*                   K2Node_DynamicCast_AsGym_Player_Controller;        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGymActionContainer                    CallFunc_GetPageData_OutActionData;                // 0x00A0(0x0030)(ContainsInstancedReference)
	bool                                          CallFunc_GetPageData_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymMetaAction*                         CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget) == 0x000008, "Wrong alignment on WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget");
static_assert(sizeof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget) == 0x0000F0, "Wrong size on WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, EntryPoint) == 0x000000, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000008, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, Temp_int_Variable) == 0x000018, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, K2Node_Event_MyGeometry) == 0x000024, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, K2Node_Event_InDeltaTime) == 0x00005C, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000060, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000070, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, K2Node_Event_Page) == 0x000078, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::K2Node_Event_Page' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000080, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, K2Node_DynamicCast_AsGym_Player_Controller) == 0x000090, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::K2Node_DynamicCast_AsGym_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_GetPageData_OutActionData) == 0x0000A0, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_GetPageData_OutActionData' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_GetPageData_ReturnValue) == 0x0000D0, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_GetPageData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'WBP_ActionWheelWidget_C_ExecuteUbergraph_WBP_ActionWheelWidget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function WBP_ActionWheelWidget.WBP_ActionWheelWidget_C.GetAlignment
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_ActionWheelWidget_C_GetAlignment final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxActions;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionWheelWidget_C_GetAlignment) == 0x000008, "Wrong alignment on WBP_ActionWheelWidget_C_GetAlignment");
static_assert(sizeof(WBP_ActionWheelWidget_C_GetAlignment) == 0x0000B0, "Wrong size on WBP_ActionWheelWidget_C_GetAlignment");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, Index_0) == 0x000000, "Member 'WBP_ActionWheelWidget_C_GetAlignment::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, MaxActions) == 0x000004, "Member 'WBP_ActionWheelWidget_C_GetAlignment::MaxActions' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, ReturnValue) == 0x000008, "Member 'WBP_ActionWheelWidget_C_GetAlignment::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, Temp_int_Variable) == 0x000018, "Member 'WBP_ActionWheelWidget_C_GetAlignment::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, Temp_struct_Variable) == 0x000020, "Member 'WBP_ActionWheelWidget_C_GetAlignment::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, Temp_struct_Variable_1) == 0x000030, "Member 'WBP_ActionWheelWidget_C_GetAlignment::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, Temp_struct_Variable_2) == 0x000040, "Member 'WBP_ActionWheelWidget_C_GetAlignment::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, Temp_struct_Variable_3) == 0x000050, "Member 'WBP_ActionWheelWidget_C_GetAlignment::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, Temp_struct_Variable_4) == 0x000060, "Member 'WBP_ActionWheelWidget_C_GetAlignment::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, Temp_struct_Variable_5) == 0x000070, "Member 'WBP_ActionWheelWidget_C_GetAlignment::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, Temp_struct_Variable_6) == 0x000080, "Member 'WBP_ActionWheelWidget_C_GetAlignment::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, Temp_struct_Variable_7) == 0x000090, "Member 'WBP_ActionWheelWidget_C_GetAlignment::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetAlignment, K2Node_Select_Default) == 0x0000A0, "Member 'WBP_ActionWheelWidget_C_GetAlignment::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ActionWheelWidget.WBP_ActionWheelWidget_C.GetPosition
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_ActionWheelWidget_C_GetPosition final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_6;                            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_7;                            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_8;                            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionWheelWidget_C_GetPosition) == 0x000008, "Wrong alignment on WBP_ActionWheelWidget_C_GetPosition");
static_assert(sizeof(WBP_ActionWheelWidget_C_GetPosition) == 0x0000C0, "Wrong size on WBP_ActionWheelWidget_C_GetPosition");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Index_0) == 0x000000, "Member 'WBP_ActionWheelWidget_C_GetPosition::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Max) == 0x000004, "Member 'WBP_ActionWheelWidget_C_GetPosition::Max' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, ReturnValue) == 0x000008, "Member 'WBP_ActionWheelWidget_C_GetPosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Temp_int_Variable) == 0x000018, "Member 'WBP_ActionWheelWidget_C_GetPosition::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Temp_struct_Variable) == 0x000020, "Member 'WBP_ActionWheelWidget_C_GetPosition::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Temp_struct_Variable_1) == 0x000030, "Member 'WBP_ActionWheelWidget_C_GetPosition::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Temp_struct_Variable_2) == 0x000040, "Member 'WBP_ActionWheelWidget_C_GetPosition::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Temp_struct_Variable_3) == 0x000050, "Member 'WBP_ActionWheelWidget_C_GetPosition::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Temp_struct_Variable_4) == 0x000060, "Member 'WBP_ActionWheelWidget_C_GetPosition::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Temp_struct_Variable_5) == 0x000070, "Member 'WBP_ActionWheelWidget_C_GetPosition::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Temp_struct_Variable_6) == 0x000080, "Member 'WBP_ActionWheelWidget_C_GetPosition::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Temp_struct_Variable_7) == 0x000090, "Member 'WBP_ActionWheelWidget_C_GetPosition::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, Temp_struct_Variable_8) == 0x0000A0, "Member 'WBP_ActionWheelWidget_C_GetPosition::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetPosition, K2Node_Select_Default) == 0x0000B0, "Member 'WBP_ActionWheelWidget_C_GetPosition::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ActionWheelWidget.WBP_ActionWheelWidget_C.GetRenderAngle
// 0x0060 (0x0060 - 0x0000)
struct WBP_ActionWheelWidget_C_GetRenderAngle final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxActions;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Return_Value;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionWheelWidget_C_GetRenderAngle) == 0x000008, "Wrong alignment on WBP_ActionWheelWidget_C_GetRenderAngle");
static_assert(sizeof(WBP_ActionWheelWidget_C_GetRenderAngle) == 0x000060, "Wrong size on WBP_ActionWheelWidget_C_GetRenderAngle");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Index_0) == 0x000000, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, MaxActions) == 0x000004, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::MaxActions' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Return_Value) == 0x000008, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Return_Value' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Temp_int_Variable) == 0x000010, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Temp_real_Variable) == 0x000018, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Temp_real_Variable_1) == 0x000020, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Temp_real_Variable_2) == 0x000028, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Temp_real_Variable_3) == 0x000030, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Temp_real_Variable_4) == 0x000038, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Temp_real_Variable_5) == 0x000040, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Temp_real_Variable_6) == 0x000048, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, Temp_real_Variable_7) == 0x000050, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetRenderAngle, K2Node_Select_Default) == 0x000058, "Member 'WBP_ActionWheelWidget_C_GetRenderAngle::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ActionWheelWidget.WBP_ActionWheelWidget_C.GetSelectionWidgets
// 0x0028 (0x0028 - 0x0000)
struct WBP_ActionWheelWidget_C_GetSelectionWidgets final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGymGuiRadialSelectionWidget*>   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UGymGuiRadialSelectionWidget*>   K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_ActionWheelWidget_C_GetSelectionWidgets) == 0x000008, "Wrong alignment on WBP_ActionWheelWidget_C_GetSelectionWidgets");
static_assert(sizeof(WBP_ActionWheelWidget_C_GetSelectionWidgets) == 0x000028, "Wrong size on WBP_ActionWheelWidget_C_GetSelectionWidgets");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetSelectionWidgets, Page) == 0x000000, "Member 'WBP_ActionWheelWidget_C_GetSelectionWidgets::Page' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetSelectionWidgets, ReturnValue) == 0x000008, "Member 'WBP_ActionWheelWidget_C_GetSelectionWidgets::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_GetSelectionWidgets, K2Node_MakeArray_Array) == 0x000018, "Member 'WBP_ActionWheelWidget_C_GetSelectionWidgets::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_ActionWheelWidget.WBP_ActionWheelWidget_C.SetupTexts
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_ActionWheelWidget_C_SetupTexts final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGymPlayerController*                   K2Node_DynamicCast_AsGym_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGymActionContainer                    CallFunc_GetPageData_OutActionData;                // 0x0028(0x0030)(ContainsInstancedReference)
	bool                                          CallFunc_GetPageData_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGymActionContainer                    CallFunc_GetPageData_OutActionData_1;              // 0x0060(0x0030)(ContainsInstancedReference)
	bool                                          CallFunc_GetPageData_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPageNum_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGymActionContainer                    CallFunc_GetPageData_OutActionData_2;              // 0x0098(0x0030)(ContainsInstancedReference)
	bool                                          CallFunc_GetPageData_ReturnValue_2;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionWheelWidget_C_SetupTexts) == 0x000008, "Wrong alignment on WBP_ActionWheelWidget_C_SetupTexts");
static_assert(sizeof(WBP_ActionWheelWidget_C_SetupTexts) == 0x0000D0, "Wrong size on WBP_ActionWheelWidget_C_SetupTexts");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, Page) == 0x000000, "Member 'WBP_ActionWheelWidget_C_SetupTexts::Page' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, K2Node_DynamicCast_AsGym_Player_Controller) == 0x000018, "Member 'WBP_ActionWheelWidget_C_SetupTexts::K2Node_DynamicCast_AsGym_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_ActionWheelWidget_C_SetupTexts::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_GetPageData_OutActionData) == 0x000028, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_GetPageData_OutActionData' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_GetPageData_ReturnValue) == 0x000058, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_GetPageData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_GetPageData_OutActionData_1) == 0x000060, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_GetPageData_OutActionData_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_GetPageData_ReturnValue_1) == 0x000090, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_GetPageData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_GetPageNum_ReturnValue) == 0x000094, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_GetPageNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_GetPageData_OutActionData_2) == 0x000098, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_GetPageData_OutActionData_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_GetPageData_ReturnValue_2) == 0x0000C8, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_GetPageData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupTexts, CallFunc_Greater_IntInt_ReturnValue) == 0x0000C9, "Member 'WBP_ActionWheelWidget_C_SetupTexts::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_ActionWheelWidget.WBP_ActionWheelWidget_C.SetupWidgetTransform
// 0x0048 (0x0048 - 0x0000)
struct WBP_ActionWheelWidget_C_SetupWidgetTransform final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       PanelSlot;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxActions;                                        // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRenderAngle_Return_Value;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAlignment_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionWheelWidget_C_SetupWidgetTransform) == 0x000008, "Wrong alignment on WBP_ActionWheelWidget_C_SetupWidgetTransform");
static_assert(sizeof(WBP_ActionWheelWidget_C_SetupWidgetTransform) == 0x000048, "Wrong size on WBP_ActionWheelWidget_C_SetupWidgetTransform");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupWidgetTransform, Widget) == 0x000000, "Member 'WBP_ActionWheelWidget_C_SetupWidgetTransform::Widget' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupWidgetTransform, PanelSlot) == 0x000008, "Member 'WBP_ActionWheelWidget_C_SetupWidgetTransform::PanelSlot' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupWidgetTransform, Index_0) == 0x000010, "Member 'WBP_ActionWheelWidget_C_SetupWidgetTransform::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupWidgetTransform, MaxActions) == 0x000014, "Member 'WBP_ActionWheelWidget_C_SetupWidgetTransform::MaxActions' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupWidgetTransform, CallFunc_GetRenderAngle_Return_Value) == 0x000018, "Member 'WBP_ActionWheelWidget_C_SetupWidgetTransform::CallFunc_GetRenderAngle_Return_Value' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupWidgetTransform, CallFunc_GetAlignment_ReturnValue) == 0x000020, "Member 'WBP_ActionWheelWidget_C_SetupWidgetTransform::CallFunc_GetAlignment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupWidgetTransform, CallFunc_GetPosition_ReturnValue) == 0x000030, "Member 'WBP_ActionWheelWidget_C_SetupWidgetTransform::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_SetupWidgetTransform, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000040, "Member 'WBP_ActionWheelWidget_C_SetupWidgetTransform::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

// Function WBP_ActionWheelWidget.WBP_ActionWheelWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_ActionWheelWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActionWheelWidget_C_Tick) == 0x000004, "Wrong alignment on WBP_ActionWheelWidget_C_Tick");
static_assert(sizeof(WBP_ActionWheelWidget_C_Tick) == 0x00003C, "Wrong size on WBP_ActionWheelWidget_C_Tick");
static_assert(offsetof(WBP_ActionWheelWidget_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_ActionWheelWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ActionWheelWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_ActionWheelWidget_C_Tick::InDeltaTime' has a wrong offset!");

}

