#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GymPlayerState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "GYMGAME_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GymPlayerState.BP_GymPlayerState_C
// 0x0020 (0x0428 - 0x0408)
class ABP_GymPlayerState_C final : public AGymPlayerState
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AGymGameState*                          GameState;                                         // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EVoteState                                    CurrentVoteState;                                  // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVoteState                                    LastTickVoteState;                                 // 0x0421(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastTickHasVoted;                                  // 0x0422(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GymPlayerState(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GymPlayerState_C">();
	}
	static class ABP_GymPlayerState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GymPlayerState_C>();
	}
};
static_assert(alignof(ABP_GymPlayerState_C) == 0x000008, "Wrong alignment on ABP_GymPlayerState_C");
static_assert(sizeof(ABP_GymPlayerState_C) == 0x000428, "Wrong size on ABP_GymPlayerState_C");
static_assert(offsetof(ABP_GymPlayerState_C, UberGraphFrame) == 0x000408, "Member 'ABP_GymPlayerState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GymPlayerState_C, DefaultSceneRoot) == 0x000410, "Member 'ABP_GymPlayerState_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GymPlayerState_C, GameState) == 0x000418, "Member 'ABP_GymPlayerState_C::GameState' has a wrong offset!");
static_assert(offsetof(ABP_GymPlayerState_C, CurrentVoteState) == 0x000420, "Member 'ABP_GymPlayerState_C::CurrentVoteState' has a wrong offset!");
static_assert(offsetof(ABP_GymPlayerState_C, LastTickVoteState) == 0x000421, "Member 'ABP_GymPlayerState_C::LastTickVoteState' has a wrong offset!");
static_assert(offsetof(ABP_GymPlayerState_C, LastTickHasVoted) == 0x000422, "Member 'ABP_GymPlayerState_C::LastTickHasVoted' has a wrong offset!");

}

