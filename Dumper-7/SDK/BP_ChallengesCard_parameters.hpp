#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChallengesCard

#include "Basic.hpp"

#include "GYMGAME_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ChallengesCard.BP_ChallengesCard_C.CalculateMultiProgress
// 0x0068 (0x0068 - 0x0000)
struct BP_ChallengesCard_C_CalculateMultiProgress final
{
public:
	TArray<struct FGymChallengeTrackable>         Trackables;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Progress;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Goal;                                              // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Complete;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGymChallengeTrackable                 CallFunc_Array_Get_Item;                           // 0x0040(0x0020)()
	bool                                          CallFunc_TrackableCompleted_Complete;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesCard_C_CalculateMultiProgress) == 0x000008, "Wrong alignment on BP_ChallengesCard_C_CalculateMultiProgress");
static_assert(sizeof(BP_ChallengesCard_C_CalculateMultiProgress) == 0x000068, "Wrong size on BP_ChallengesCard_C_CalculateMultiProgress");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, Trackables) == 0x000000, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::Trackables' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, Progress) == 0x000010, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::Progress' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, Goal) == 0x000014, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::Goal' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, Complete) == 0x000018, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::Complete' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, Count) == 0x00001C, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::Count' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, Temp_int_Variable) == 0x000038, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, CallFunc_TrackableCompleted_Complete) == 0x000060, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::CallFunc_TrackableCompleted_Complete' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000061, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_CalculateMultiProgress, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_ChallengesCard_C_CalculateMultiProgress::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ChallengesCard.BP_ChallengesCard_C.ExecuteUbergraph_BP_ChallengesCard
// 0x02F8 (0x02F8 - 0x0000)
struct BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGymChallengeReward                    CallFunc_Array_Get_Item;                           // 0x0020(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	int32                                         CallFunc_CalculateMultiProgress_Progress;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalculateMultiProgress_Goal;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalculateMultiProgress_Complete;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TrackableCompleted_Complete;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0178(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01D8(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0230(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0240(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetChallengeDisplayName_DisplayName;      // 0x0260(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0288(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x02A0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x02B8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x02D0(0x0018)()
	float                                         CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast; // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast_1; // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast_1;      // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard) == 0x000008, "Wrong alignment on BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard");
static_assert(sizeof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard) == 0x0002F8, "Wrong size on BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, EntryPoint) == 0x000000, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, Temp_bool_Variable) == 0x000004, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, Temp_bool_True_if_break_was_hit_Variable) == 0x000005, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, Temp_bool_Variable_1) == 0x000018, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Greater_IntInt_ReturnValue) == 0x00003D, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_BooleanAND_ReturnValue) == 0x00003E, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_CalculateMultiProgress_Progress) == 0x000058, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_CalculateMultiProgress_Progress' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_CalculateMultiProgress_Goal) == 0x00005C, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_CalculateMultiProgress_Goal' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_CalculateMultiProgress_Complete) == 0x000060, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_CalculateMultiProgress_Complete' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_TrackableCompleted_Complete) == 0x000061, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_TrackableCompleted_Complete' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000070, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000078, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000120, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000138, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Format_ReturnValue) == 0x000140, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_SelectFloat_ReturnValue) == 0x000158, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_SelectFloat_ReturnValue_1) == 0x000160, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000168, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000170, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, K2Node_MakeStruct_FormatArgumentData_2) == 0x000178, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x0001C8, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0001D0, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001D8, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000228, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, K2Node_MakeArray_Array_1) == 0x000230, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Format_ReturnValue_1) == 0x000240, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Array_Length_ReturnValue_1) == 0x000258, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_GetChallengeDisplayName_DisplayName) == 0x000260, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_GetChallengeDisplayName_DisplayName' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000278, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000279, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_SelectFloat_ReturnValue_2) == 0x000280, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_MakeLiteralText_ReturnValue) == 0x000288, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, K2Node_Select_Default) == 0x0002A0, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0002B8, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, K2Node_Select_Default_1) == 0x0002D0, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast) == 0x0002E8, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast_1) == 0x0002EC, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_SetAnimationCurrentTime_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0002F0, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard, CallFunc_SetPercent_InPercent_ImplicitCast_1) == 0x0002F4, "Member 'BP_ChallengesCard_C_ExecuteUbergraph_BP_ChallengesCard::CallFunc_SetPercent_InPercent_ImplicitCast_1' has a wrong offset!");

// Function BP_ChallengesCard.BP_ChallengesCard_C.GetChallengeDisplayName
// 0x0068 (0x0068 - 0x0000)
struct BP_ChallengesCard_C_GetChallengeDisplayName final
{
public:
	class FString                                 InternalName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   DisplayName;                                       // 0x0010(0x0018)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGymChallengeLocalization              CallFunc_Array_Get_Item;                           // 0x0038(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesCard_C_GetChallengeDisplayName) == 0x000008, "Wrong alignment on BP_ChallengesCard_C_GetChallengeDisplayName");
static_assert(sizeof(BP_ChallengesCard_C_GetChallengeDisplayName) == 0x000068, "Wrong size on BP_ChallengesCard_C_GetChallengeDisplayName");
static_assert(offsetof(BP_ChallengesCard_C_GetChallengeDisplayName, InternalName) == 0x000000, "Member 'BP_ChallengesCard_C_GetChallengeDisplayName::InternalName' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_GetChallengeDisplayName, DisplayName) == 0x000010, "Member 'BP_ChallengesCard_C_GetChallengeDisplayName::DisplayName' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_GetChallengeDisplayName, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ChallengesCard_C_GetChallengeDisplayName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_GetChallengeDisplayName, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_ChallengesCard_C_GetChallengeDisplayName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_GetChallengeDisplayName, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_ChallengesCard_C_GetChallengeDisplayName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_GetChallengeDisplayName, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_ChallengesCard_C_GetChallengeDisplayName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_GetChallengeDisplayName, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_ChallengesCard_C_GetChallengeDisplayName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_GetChallengeDisplayName, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_ChallengesCard_C_GetChallengeDisplayName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_GetChallengeDisplayName, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000061, "Member 'BP_ChallengesCard_C_GetChallengeDisplayName::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");

// Function BP_ChallengesCard.BP_ChallengesCard_C.TrackableCompleted
// 0x0028 (0x0028 - 0x0000)
struct BP_ChallengesCard_C_TrackableCompleted final
{
public:
	struct FGymChallengeTrackable                 Trackable;                                         // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Complete;                                          // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesCard_C_TrackableCompleted) == 0x000008, "Wrong alignment on BP_ChallengesCard_C_TrackableCompleted");
static_assert(sizeof(BP_ChallengesCard_C_TrackableCompleted) == 0x000028, "Wrong size on BP_ChallengesCard_C_TrackableCompleted");
static_assert(offsetof(BP_ChallengesCard_C_TrackableCompleted, Trackable) == 0x000000, "Member 'BP_ChallengesCard_C_TrackableCompleted::Trackable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_TrackableCompleted, Complete) == 0x000020, "Member 'BP_ChallengesCard_C_TrackableCompleted::Complete' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_TrackableCompleted, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000021, "Member 'BP_ChallengesCard_C_TrackableCompleted::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesCard_C_TrackableCompleted, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'BP_ChallengesCard_C_TrackableCompleted::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

