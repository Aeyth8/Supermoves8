#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GymTournamentEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "RowData_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_GymTournamentEntry.BP_GymTournamentEntry_C
// 0x0080 (0x0340 - 0x02C0)
class UBP_GymTournamentEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeInAnim;                                        // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Avatar;                                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             Row;                                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGymPlaylistScoreboardEntry            Data;                                              // 0x02E8(0x0038)(Edit, BlueprintVisible, ExposeOnSpawn)
	EGymPlaylistType                              PlayListType;                                      // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsLastLevel;                                       // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRowData>                       RowData;                                           // 0x0328(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UBP_GymGUIPlaylistScoreboardWidget_C*   TournamentWidget;                                  // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_BP_GymTournamentEntry(int32 EntryPoint);
	void GetThisLevelScore(int32* Score);
	void GetTotalScore(int32* Total_Score);
	void Hide();
	void PlayAnim();
	void PreConstruct(bool IsDesignTime);
	void SetTextInSlot(const class FText& Text, int32 Slot_0);
	void SetupRow();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GymTournamentEntry_C">();
	}
	static class UBP_GymTournamentEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GymTournamentEntry_C>();
	}
};
static_assert(alignof(UBP_GymTournamentEntry_C) == 0x000008, "Wrong alignment on UBP_GymTournamentEntry_C");
static_assert(sizeof(UBP_GymTournamentEntry_C) == 0x000340, "Wrong size on UBP_GymTournamentEntry_C");
static_assert(offsetof(UBP_GymTournamentEntry_C, UberGraphFrame) == 0x0002C0, "Member 'UBP_GymTournamentEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_GymTournamentEntry_C, FadeInAnim) == 0x0002C8, "Member 'UBP_GymTournamentEntry_C::FadeInAnim' has a wrong offset!");
static_assert(offsetof(UBP_GymTournamentEntry_C, Avatar) == 0x0002D0, "Member 'UBP_GymTournamentEntry_C::Avatar' has a wrong offset!");
static_assert(offsetof(UBP_GymTournamentEntry_C, Overlay_0) == 0x0002D8, "Member 'UBP_GymTournamentEntry_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UBP_GymTournamentEntry_C, Row) == 0x0002E0, "Member 'UBP_GymTournamentEntry_C::Row' has a wrong offset!");
static_assert(offsetof(UBP_GymTournamentEntry_C, Data) == 0x0002E8, "Member 'UBP_GymTournamentEntry_C::Data' has a wrong offset!");
static_assert(offsetof(UBP_GymTournamentEntry_C, PlayListType) == 0x000320, "Member 'UBP_GymTournamentEntry_C::PlayListType' has a wrong offset!");
static_assert(offsetof(UBP_GymTournamentEntry_C, IsLastLevel) == 0x000321, "Member 'UBP_GymTournamentEntry_C::IsLastLevel' has a wrong offset!");
static_assert(offsetof(UBP_GymTournamentEntry_C, RowData) == 0x000328, "Member 'UBP_GymTournamentEntry_C::RowData' has a wrong offset!");
static_assert(offsetof(UBP_GymTournamentEntry_C, TournamentWidget) == 0x000338, "Member 'UBP_GymTournamentEntry_C::TournamentWidget' has a wrong offset!");

}

