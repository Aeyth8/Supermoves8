#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GymEditorWidget

#include "Basic.hpp"

#include "BP_GymEditorWidget_classes.hpp"
#include "BP_GymEditorWidget_parameters.hpp"


namespace SDK
{

// Function BP_GymEditorWidget.BP_GymEditorWidget_C.AvailableToolsCheck
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GymEditorWidget_C::AvailableToolsCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "AvailableToolsCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.BPClose
// (Event, Protected, BlueprintEvent)

void UBP_GymEditorWidget_C::BPClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "BPClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.BPOpen
// (Event, Protected, BlueprintEvent)

void UBP_GymEditorWidget_C::BPOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "BPOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_GymEditorWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.ContextualConfirm
// (Event, Public, BlueprintEvent)

void UBP_GymEditorWidget_C::ContextualConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "ContextualConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.ContextualDecline
// (Event, Public, BlueprintEvent)

void UBP_GymEditorWidget_C::ContextualDecline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "ContextualDecline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.ContextualDown
// (Event, Public, BlueprintEvent)

void UBP_GymEditorWidget_C::ContextualDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "ContextualDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.ContextualLeft
// (Event, Public, BlueprintEvent)

void UBP_GymEditorWidget_C::ContextualLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "ContextualLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.ContextualRight
// (Event, Public, BlueprintEvent)

void UBP_GymEditorWidget_C::ContextualRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "ContextualRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.ContextualUp
// (Event, Public, BlueprintEvent)

void UBP_GymEditorWidget_C::ContextualUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "ContextualUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.CreateCategoryPanel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GymEditorWidget_C::CreateCategoryPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "CreateCategoryPanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.EditAssetProperty
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGymStaticLevelAsset*             Asset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             AssetName                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_GymEditorWidget_C::EditAssetProperty(class AGymStaticLevelAsset* Asset, const class FText& AssetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "EditAssetProperty");

	Params::BP_GymEditorWidget_C_EditAssetProperty Parms{};

	Parms.Asset = Asset;
	Parms.AssetName = std::move(AssetName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.ExecuteUbergraph_BP_GymEditorWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GymEditorWidget_C::ExecuteUbergraph_BP_GymEditorWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "ExecuteUbergraph_BP_GymEditorWidget");

	Params::BP_GymEditorWidget_C_ExecuteUbergraph_BP_GymEditorWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.GetBrush_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSlateBrush UBP_GymEditorWidget_C::GetBrush_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "GetBrush_0");

	Params::BP_GymEditorWidget_C_GetBrush_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.GetLevelKitName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_GymEditorWidget_C::GetLevelKitName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "GetLevelKitName");

	Params::BP_GymEditorWidget_C_GetLevelKitName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.GetLevelKitText
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_GymEditorWidget_C::GetLevelKitText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "GetLevelKitText");

	Params::BP_GymEditorWidget_C_GetLevelKitText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.GetToolFromBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGymToolSetting*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UGymToolSetting* UBP_GymEditorWidget_C::GetToolFromBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "GetToolFromBP");

	Params::BP_GymEditorWidget_C_GetToolFromBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.LevelKitChanged
// (Event, Public, BlueprintEvent)

void UBP_GymEditorWidget_C::LevelKitChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "LevelKitChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.OnEditAssetPropertyVariantChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AGymStaticLevelAsset*             Asset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             AssetName                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_GymEditorWidget_C::OnEditAssetPropertyVariantChanged(class AGymStaticLevelAsset* Asset, const class FText& AssetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "OnEditAssetPropertyVariantChanged");

	Params::BP_GymEditorWidget_C_OnEditAssetPropertyVariantChanged Parms{};

	Parms.Asset = Asset;
	Parms.AssetName = std::move(AssetName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.OnMovingAssetChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsMovingAsset                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GymEditorWidget_C::OnMovingAssetChanged(bool bIsMovingAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "OnMovingAssetChanged");

	Params::BP_GymEditorWidget_C_OnMovingAssetChanged Parms{};

	Parms.bIsMovingAsset = bIsMovingAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.OnPropertiesChangedForAsset
// (Event, Public, BlueprintEvent)
// Parameters:
// class AGymStaticLevelAsset*             Asset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GymEditorWidget_C::OnPropertiesChangedForAsset(class AGymStaticLevelAsset* Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "OnPropertiesChangedForAsset");

	Params::BP_GymEditorWidget_C_OnPropertiesChangedForAsset Parms{};

	Parms.Asset = Asset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.OnVisibilityChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GymEditorWidget_C::OnVisibilityChanged_Event(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "OnVisibilityChanged_Event");

	Params::BP_GymEditorWidget_C_OnVisibilityChanged_Event Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.OpenCategoryAndVariant
// (Event, Public, BlueprintEvent)
// Parameters:
// EGymEditorCategory                      Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGymAssetVariantId               VariantId                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_GymEditorWidget_C::OpenCategoryAndVariant(EGymEditorCategory Category, const struct FGymAssetVariantId& VariantId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "OpenCategoryAndVariant");

	Params::BP_GymEditorWidget_C_OpenCategoryAndVariant Parms{};

	Parms.Category = Category;
	Parms.VariantId = std::move(VariantId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.SelectCategory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGymEditorCategory                      Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GymEditorWidget_C::SelectCategory(EGymEditorCategory Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "SelectCategory");

	Params::BP_GymEditorWidget_C_SelectCategory Parms{};

	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.SetCurrentMainPanel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_EditorPiece_C*                NewMainPanel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_GymEditorWidget_C::SetCurrentMainPanel(class UBP_EditorPiece_C* NewMainPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "SetCurrentMainPanel");

	Params::BP_GymEditorWidget_C_SetCurrentMainPanel Parms{};

	Parms.NewMainPanel = NewMainPanel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.StartEditingAssetProperty
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AGymStaticLevelAsset*             Asset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             AssetName                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_GymEditorWidget_C::StartEditingAssetProperty(class AGymStaticLevelAsset* Asset, const class FText& AssetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "StartEditingAssetProperty");

	Params::BP_GymEditorWidget_C_StartEditingAssetProperty Parms{};

	Parms.Asset = Asset;
	Parms.AssetName = std::move(AssetName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GymEditorWidget.BP_GymEditorWidget_C.StopEditingAssetProperty
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_GymEditorWidget_C::StopEditingAssetProperty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GymEditorWidget_C", "StopEditingAssetProperty");

	UObject::ProcessEvent(Func, nullptr);
}

}

