#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RoyaleQualified

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_RoyaleQualified.WBP_RoyaleQualified_C
// 0x0028 (0x02E8 - 0x02C0)
class UWBP_RoyaleQualified_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       QualifiedNumText;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGymGameState*                          GameState;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AGymPlayerController*                   PlayerController;                                  // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EGymPlaylistType                              LastTickType;                                      // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_RoyaleQualified(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TickGameStateAndController();
	void TickUIContent();
	void TickUIVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_RoyaleQualified_C">();
	}
	static class UWBP_RoyaleQualified_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_RoyaleQualified_C>();
	}
};
static_assert(alignof(UWBP_RoyaleQualified_C) == 0x000008, "Wrong alignment on UWBP_RoyaleQualified_C");
static_assert(sizeof(UWBP_RoyaleQualified_C) == 0x0002E8, "Wrong size on UWBP_RoyaleQualified_C");
static_assert(offsetof(UWBP_RoyaleQualified_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_RoyaleQualified_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_RoyaleQualified_C, QualifiedNumText) == 0x0002C8, "Member 'UWBP_RoyaleQualified_C::QualifiedNumText' has a wrong offset!");
static_assert(offsetof(UWBP_RoyaleQualified_C, GameState) == 0x0002D0, "Member 'UWBP_RoyaleQualified_C::GameState' has a wrong offset!");
static_assert(offsetof(UWBP_RoyaleQualified_C, PlayerController) == 0x0002D8, "Member 'UWBP_RoyaleQualified_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UWBP_RoyaleQualified_C, LastTickType) == 0x0002E0, "Member 'UWBP_RoyaleQualified_C::LastTickType' has a wrong offset!");

}

