#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CareerTournamentButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "GYMGAME_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CareerTournamentButton.BP_CareerTournamentButton_C
// 0x0148 (0x0430 - 0x02E8)
class UBP_CareerTournamentButton_C final : public UGymGuiGenericButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoverPush;                                         // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoveredAnim;                                       // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                CompletedContainer;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              GameModeContainer;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        GameModeHoverSwitcher;                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        GoalsContainer;                                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           GoalsListContainer;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GradientFadeGreen;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Hover_GameModeContainer;                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_GameMode;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_GameModeHover;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              LockedContainer;                                   // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedIcon;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedImage;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         PlacementBox;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlacementText;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlaylistImage;                                     // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SelectedGamemode_Textbox;                          // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TapeImage;                                         // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHeader_Style1_H2_C*                    TitleTextBlock;                                    // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TitleText;                                         // 0x0390(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTexture2D*                             BackgroundImage;                                   // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymSaveGameTutorial*                   SaveFile;                                          // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 TournamentName;                                    // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsDevEnabled;                                      // 0x03D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Playlist_Maps;                                     // 0x03D8(0x0010)(Edit, BlueprintVisible)
	bool                                          IsMarkedCompleted;                                 // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGymAISelectionData>            NPCSelectionData;                                  // 0x03F0(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGymCareerPlaylistMapInfo>      PlaylistMaps;                                      // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShowGameMode;                                      // 0x0410(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inner_Enabled;                                     // 0x0411(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDemo;                                            // 0x0412(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowTape;                                          // 0x0413(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LocationID;                                        // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsTopThree;                                        // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyTopOneTask;                                    // 0x0429(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CareerLevelButton_ButtonObject_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__BP_CareerLevelButton_ButtonObject_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void CustomEvent();
	void ExecuteUbergraph_BP_CareerTournamentButton(int32 EntryPoint);
	void GetRequiredTasks(int32* Required_Points);
	void Init();
	void InitGameMode();
	void InitPlaylist();
	void InitTape();
	void OnDisabledButtonClick();
	void Open();
	void SetPlacement(int32 Placement);
	void StartRace();
	void Unlock(bool Unlocked);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CareerTournamentButton_C">();
	}
	static class UBP_CareerTournamentButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CareerTournamentButton_C>();
	}
};
static_assert(alignof(UBP_CareerTournamentButton_C) == 0x000008, "Wrong alignment on UBP_CareerTournamentButton_C");
static_assert(sizeof(UBP_CareerTournamentButton_C) == 0x000430, "Wrong size on UBP_CareerTournamentButton_C");
static_assert(offsetof(UBP_CareerTournamentButton_C, UberGraphFrame) == 0x0002E8, "Member 'UBP_CareerTournamentButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, HoverPush) == 0x0002F0, "Member 'UBP_CareerTournamentButton_C::HoverPush' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, HoveredAnim) == 0x0002F8, "Member 'UBP_CareerTournamentButton_C::HoveredAnim' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, CompletedContainer) == 0x000300, "Member 'UBP_CareerTournamentButton_C::CompletedContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, GameModeContainer) == 0x000308, "Member 'UBP_CareerTournamentButton_C::GameModeContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, GameModeHoverSwitcher) == 0x000310, "Member 'UBP_CareerTournamentButton_C::GameModeHoverSwitcher' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, GoalsContainer) == 0x000318, "Member 'UBP_CareerTournamentButton_C::GoalsContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, GoalsListContainer) == 0x000320, "Member 'UBP_CareerTournamentButton_C::GoalsListContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, GradientFadeGreen) == 0x000328, "Member 'UBP_CareerTournamentButton_C::GradientFadeGreen' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, Hover_GameModeContainer) == 0x000330, "Member 'UBP_CareerTournamentButton_C::Hover_GameModeContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, Icon_GameMode) == 0x000338, "Member 'UBP_CareerTournamentButton_C::Icon_GameMode' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, Icon_GameModeHover) == 0x000340, "Member 'UBP_CareerTournamentButton_C::Icon_GameModeHover' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, LockedContainer) == 0x000348, "Member 'UBP_CareerTournamentButton_C::LockedContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, LockedIcon) == 0x000350, "Member 'UBP_CareerTournamentButton_C::LockedIcon' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, LockedImage) == 0x000358, "Member 'UBP_CareerTournamentButton_C::LockedImage' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, PlacementBox) == 0x000360, "Member 'UBP_CareerTournamentButton_C::PlacementBox' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, PlacementText) == 0x000368, "Member 'UBP_CareerTournamentButton_C::PlacementText' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, PlaylistImage) == 0x000370, "Member 'UBP_CareerTournamentButton_C::PlaylistImage' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, SelectedGamemode_Textbox) == 0x000378, "Member 'UBP_CareerTournamentButton_C::SelectedGamemode_Textbox' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, TapeImage) == 0x000380, "Member 'UBP_CareerTournamentButton_C::TapeImage' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, TitleTextBlock) == 0x000388, "Member 'UBP_CareerTournamentButton_C::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, TitleText) == 0x000390, "Member 'UBP_CareerTournamentButton_C::TitleText' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, BackgroundImage) == 0x0003A8, "Member 'UBP_CareerTournamentButton_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, Enabled) == 0x0003B0, "Member 'UBP_CareerTournamentButton_C::Enabled' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, SaveFile) == 0x0003B8, "Member 'UBP_CareerTournamentButton_C::SaveFile' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, TournamentName) == 0x0003C0, "Member 'UBP_CareerTournamentButton_C::TournamentName' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, IsDevEnabled) == 0x0003D0, "Member 'UBP_CareerTournamentButton_C::IsDevEnabled' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, Playlist_Maps) == 0x0003D8, "Member 'UBP_CareerTournamentButton_C::Playlist_Maps' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, IsMarkedCompleted) == 0x0003E8, "Member 'UBP_CareerTournamentButton_C::IsMarkedCompleted' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, NPCSelectionData) == 0x0003F0, "Member 'UBP_CareerTournamentButton_C::NPCSelectionData' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, PlaylistMaps) == 0x000400, "Member 'UBP_CareerTournamentButton_C::PlaylistMaps' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, ShowGameMode) == 0x000410, "Member 'UBP_CareerTournamentButton_C::ShowGameMode' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, Inner_Enabled) == 0x000411, "Member 'UBP_CareerTournamentButton_C::Inner_Enabled' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, IsDemo) == 0x000412, "Member 'UBP_CareerTournamentButton_C::IsDemo' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, ShowTape) == 0x000413, "Member 'UBP_CareerTournamentButton_C::ShowTape' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, LocationID) == 0x000418, "Member 'UBP_CareerTournamentButton_C::LocationID' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, IsTopThree) == 0x000428, "Member 'UBP_CareerTournamentButton_C::IsTopThree' has a wrong offset!");
static_assert(offsetof(UBP_CareerTournamentButton_C, OnlyTopOneTask) == 0x000429, "Member 'UBP_CareerTournamentButton_C::OnlyTopOneTask' has a wrong offset!");

}

