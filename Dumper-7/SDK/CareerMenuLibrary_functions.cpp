#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CareerMenuLibrary

#include "Basic.hpp"

#include "CareerMenuLibrary_classes.hpp"
#include "CareerMenuLibrary_parameters.hpp"


namespace SDK
{

// Function CareerMenuLibrary.CareerMenuLibrary_C.CalculateTotalProgression
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Progression                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCareerMenuLibrary_C::CalculateTotalProgression(class UObject* __WorldContext, double* Progression)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CareerMenuLibrary_C", "CalculateTotalProgression");

	Params::CareerMenuLibrary_C_CalculateTotalProgression Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Progression != nullptr)
		*Progression = Parms.Progression;
}


// Function CareerMenuLibrary.CareerMenuLibrary_C.GetCompletedTasksForLocation
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           LocationID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Tasks                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCareerMenuLibrary_C::GetCompletedTasksForLocation(const class FString& LocationID, class UObject* __WorldContext, double* Tasks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CareerMenuLibrary_C", "GetCompletedTasksForLocation");

	Params::CareerMenuLibrary_C_GetCompletedTasksForLocation Parms{};

	Parms.LocationID = std::move(LocationID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Tasks != nullptr)
		*Tasks = Parms.Tasks;
}


// Function CareerMenuLibrary.CareerMenuLibrary_C.GetRequirementForLocation
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           LocationID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Points                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCareerMenuLibrary_C::GetRequirementForLocation(const class FString& LocationID, class UObject* __WorldContext, int32* Points)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CareerMenuLibrary_C", "GetRequirementForLocation");

	Params::CareerMenuLibrary_C_GetRequirementForLocation Parms{};

	Parms.LocationID = std::move(LocationID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Points != nullptr)
		*Points = Parms.Points;
}


// Function CareerMenuLibrary.CareerMenuLibrary_C.GetTotalTasksForLocation
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           LocationID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Tasks                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCareerMenuLibrary_C::GetTotalTasksForLocation(const class FString& LocationID, class UObject* __WorldContext, double* Tasks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CareerMenuLibrary_C", "GetTotalTasksForLocation");

	Params::CareerMenuLibrary_C_GetTotalTasksForLocation Parms{};

	Parms.LocationID = std::move(LocationID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Tasks != nullptr)
		*Tasks = Parms.Tasks;
}


// Function CareerMenuLibrary.CareerMenuLibrary_C.IsLocationUnlocked
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           LocationID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UCareerMenuLibrary_C::IsLocationUnlocked(const class FString& LocationID, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CareerMenuLibrary_C", "IsLocationUnlocked");

	Params::CareerMenuLibrary_C_IsLocationUnlocked Parms{};

	Parms.LocationID = std::move(LocationID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

