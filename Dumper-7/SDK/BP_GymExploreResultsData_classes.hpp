#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GymExploreResultsData

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_GymExploreResultsData.BP_GymExploreResultsData_C
// 0x0028 (0x02E8 - 0x02C0)
class UBP_GymExploreResultsData_C final : public UUserWidget
{
public:
	class USizeBox*                               TitleRow;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TitleText;                                         // 0x02C8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	class UTexture2D*                             TitleIcon;                                         // 0x02E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void AddElement(class UBP_GymExploreMapElement_C* Element);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GymExploreResultsData_C">();
	}
	static class UBP_GymExploreResultsData_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GymExploreResultsData_C>();
	}
};
static_assert(alignof(UBP_GymExploreResultsData_C) == 0x000008, "Wrong alignment on UBP_GymExploreResultsData_C");
static_assert(sizeof(UBP_GymExploreResultsData_C) == 0x0002E8, "Wrong size on UBP_GymExploreResultsData_C");
static_assert(offsetof(UBP_GymExploreResultsData_C, TitleRow) == 0x0002C0, "Member 'UBP_GymExploreResultsData_C::TitleRow' has a wrong offset!");
static_assert(offsetof(UBP_GymExploreResultsData_C, TitleText) == 0x0002C8, "Member 'UBP_GymExploreResultsData_C::TitleText' has a wrong offset!");
static_assert(offsetof(UBP_GymExploreResultsData_C, TitleIcon) == 0x0002E0, "Member 'UBP_GymExploreResultsData_C::TitleIcon' has a wrong offset!");

}

