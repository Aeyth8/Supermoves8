#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChallengesMenuWidget

#include "Basic.hpp"

#include "GYMGAME_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.ExecuteUbergraph_BP_ChallengesMenuWidget
// 0x0238 (0x0238 - 0x0000)
struct BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0040(0x0018)(HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0060(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0078(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ChallengesCard_C*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x00B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x00C8(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGymCHallengeResponse                  K2Node_CustomEvent_Challenges;                     // 0x00E8(0x0020)(ConstParm)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGymChallenge                          CallFunc_Array_Get_Item;                           // 0x0110(0x0058)()
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGymChallenge                          CallFunc_Array_Get_Item_1;                         // 0x0170(0x0058)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x01D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue;            // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Success, struct FGymCHallengeResponse& Challenges)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x01EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpenVisibleAndHasPriority_ReturnValue;  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpenVisibleAndHasPriority_ReturnValue_1; // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207[0x1];                                      // 0x0207(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ChallengesCard_C*                   CallFunc_SpawnObject_ReturnValue_1;                // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue_1;          // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpenVisibleAndHasPriority_ReturnValue_2; // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpenVisibleAndHasPriority_ReturnValue_3; // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymCloudApi*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget");
static_assert(sizeof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget) == 0x000238, "Wrong size on BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, EntryPoint) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_InputActionEvent_Key_3) == 0x000008, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_GetChildAt_ReturnValue) == 0x000020, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_GetChildrenCount_ReturnValue) == 0x000028, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_GetChildrenCount_ReturnValue_1) == 0x00002C, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Max_ReturnValue) == 0x000038, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_InputActionEvent_Key_2) == 0x000040, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_GetChildAt_ReturnValue_1) == 0x000058, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_InputActionEvent_Key_1) == 0x000060, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_InputActionEvent_Key) == 0x000078, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_SpawnObject_ReturnValue) == 0x000098, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_InputActionEvent_Key_4) == 0x0000B0, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_InputActionEvent_Key_5) == 0x0000C8, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_CustomEvent_Success) == 0x0000E0, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_CustomEvent_Challenges) == 0x0000E8, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_CustomEvent_Challenges' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_CustomEvent_Index) == 0x000108, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Array_Get_Item) == 0x000110, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_SwitchInteger_CmpSuccess) == 0x000168, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Array_Length_ReturnValue) == 0x00016C, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Array_Length_ReturnValue_1) == 0x0001CC, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_CreateDelegate_OutputDelegate) == 0x0001D0, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_AddChildToWrapBox_ReturnValue) == 0x0001E0, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_AddChildToWrapBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, Temp_int_Loop_Counter_Variable_1) == 0x0001E8, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001EC, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001FC, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000200, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_IsOpenVisibleAndHasPriority_ReturnValue) == 0x000204, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_IsOpenVisibleAndHasPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_IsOpenVisibleAndHasPriority_ReturnValue_1) == 0x000205, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_IsOpenVisibleAndHasPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000206, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_SpawnObject_ReturnValue_1) == 0x000208, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_BooleanAND_ReturnValue) == 0x000210, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_AddChildToWrapBox_ReturnValue_1) == 0x000218, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_AddChildToWrapBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000220, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_IsOpenVisibleAndHasPriority_ReturnValue_2) == 0x000221, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_IsOpenVisibleAndHasPriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_BooleanAND_ReturnValue_1) == 0x000222, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_BooleanAND_ReturnValue_2) == 0x000223, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_IsOpenVisibleAndHasPriority_ReturnValue_3) == 0x000224, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_IsOpenVisibleAndHasPriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000228, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget, CallFunc_BooleanAND_ReturnValue_3) == 0x000230, "Member 'BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.Get_ResetTimer_Text
// 0x02D0 (0x02D0 - 0x0000)
struct BP_ChallengesMenuWidget_C_Get_ResetTimer_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0028(0x0018)()
	TArray<struct FGymChallenge>                  K2Node_Select_Default;                             // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinutes_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDays_ReturnValue;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0068(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_GetHours_ReturnValue;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHours_ReturnValue_1;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0138(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0150(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetDays_ReturnValue_1;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSeconds_ReturnValue;                   // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0228(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0240(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0290(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02A0(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x02B8(0x0018)()
};
static_assert(alignof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_Get_ResetTimer_Text");
static_assert(sizeof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text) == 0x0002D0, "Wrong size on BP_ChallengesMenuWidget_C_Get_ResetTimer_Text");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, ReturnValue) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, Temp_bool_Variable) == 0x000018, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, Temp_int_Variable) == 0x00001C, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_UtcNow_ReturnValue) == 0x000020, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_MakeLiteralText_ReturnValue) == 0x000028, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, K2Node_Select_Default) == 0x000040, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000058, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_GetMinutes_ReturnValue) == 0x000060, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_GetMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_GetDays_ReturnValue) == 0x000064, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_GetDays_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Conv_IntToText_ReturnValue) == 0x000068, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000080, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_GetHours_ReturnValue) == 0x000128, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_GetHours_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_GetHours_ReturnValue_1) == 0x00012C, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_GetHours_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000130, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000138, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, K2Node_MakeStruct_FormatArgumentData_2) == 0x000150, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A0, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, K2Node_MakeArray_Array) == 0x0001F0, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_GetDays_ReturnValue_1) == 0x000200, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_GetDays_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Format_ReturnValue) == 0x000208, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000220, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_GetSeconds_ReturnValue) == 0x000224, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_GetSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000228, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, K2Node_MakeStruct_FormatArgumentData_4) == 0x000240, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, K2Node_MakeArray_Array_1) == 0x000290, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, CallFunc_Format_ReturnValue_1) == 0x0002A0, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_Get_ResetTimer_Text, K2Node_Select_Default_1) == 0x0002B8, "Member 'BP_ChallengesMenuWidget_C_Get_ResetTimer_Text::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5");
static_assert(sizeof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5");
static_assert(offsetof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.OnChallengesReceived
// 0x0028 (0x0028 - 0x0000)
struct BP_ChallengesMenuWidget_C_OnChallengesReceived final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGymCHallengeResponse                  Challenges_0;                                      // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_OnChallengesReceived) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_OnChallengesReceived");
static_assert(sizeof(BP_ChallengesMenuWidget_C_OnChallengesReceived) == 0x000028, "Wrong size on BP_ChallengesMenuWidget_C_OnChallengesReceived");
static_assert(offsetof(BP_ChallengesMenuWidget_C_OnChallengesReceived, Success) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_OnChallengesReceived::Success' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_OnChallengesReceived, Challenges_0) == 0x000008, "Member 'BP_ChallengesMenuWidget_C_OnChallengesReceived::Challenges_0' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.OnTabButtonSelected_Event
// 0x0004 (0x0004 - 0x0000)
struct BP_ChallengesMenuWidget_C_OnTabButtonSelected_Event final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_OnTabButtonSelected_Event) == 0x000004, "Wrong alignment on BP_ChallengesMenuWidget_C_OnTabButtonSelected_Event");
static_assert(sizeof(BP_ChallengesMenuWidget_C_OnTabButtonSelected_Event) == 0x000004, "Wrong size on BP_ChallengesMenuWidget_C_OnTabButtonSelected_Event");
static_assert(offsetof(BP_ChallengesMenuWidget_C_OnTabButtonSelected_Event, Index_0) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_OnTabButtonSelected_Event::Index_0' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.SimulateTabButtonClick
// 0x0018 (0x0018 - 0x0000)
struct BP_ChallengesMenuWidget_C_SimulateTabButtonClick final
{
public:
	class UWBP_TabButton_C*                       TabButton;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_SimulateTabButtonClick) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_SimulateTabButtonClick");
static_assert(sizeof(BP_ChallengesMenuWidget_C_SimulateTabButtonClick) == 0x000018, "Wrong size on BP_ChallengesMenuWidget_C_SimulateTabButtonClick");
static_assert(offsetof(BP_ChallengesMenuWidget_C_SimulateTabButtonClick, TabButton) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_SimulateTabButtonClick::TabButton' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_SimulateTabButtonClick, K2Node_DynamicCast_AsSound_Base) == 0x000008, "Member 'BP_ChallengesMenuWidget_C_SimulateTabButtonClick::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_SimulateTabButtonClick, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_ChallengesMenuWidget_C_SimulateTabButtonClick::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.TryClaim
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ChallengesMenuWidget_C_TryClaim final
{
public:
	struct FGymChallenge                          Challenge;                                         // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          MissingRequirements;                               // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CompletedAlready;                                  // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGymChallengeTrackable                 CallFunc_Array_Get_Item;                           // 0x0068(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymCloudApi*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ChallengesMenuWidget_C_TryClaim) == 0x000008, "Wrong alignment on BP_ChallengesMenuWidget_C_TryClaim");
static_assert(sizeof(BP_ChallengesMenuWidget_C_TryClaim) == 0x0000B0, "Wrong size on BP_ChallengesMenuWidget_C_TryClaim");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, Challenge) == 0x000000, "Member 'BP_ChallengesMenuWidget_C_TryClaim::Challenge' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, MissingRequirements) == 0x000058, "Member 'BP_ChallengesMenuWidget_C_TryClaim::MissingRequirements' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, CompletedAlready) == 0x000059, "Member 'BP_ChallengesMenuWidget_C_TryClaim::CompletedAlready' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_ChallengesMenuWidget_C_TryClaim::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_ChallengesMenuWidget_C_TryClaim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_ChallengesMenuWidget_C_TryClaim::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_ChallengesMenuWidget_C_TryClaim::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, CallFunc_Greater_IntInt_ReturnValue) == 0x00008C, "Member 'BP_ChallengesMenuWidget_C_TryClaim::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, CallFunc_Less_IntInt_ReturnValue) == 0x00008D, "Member 'BP_ChallengesMenuWidget_C_TryClaim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_ChallengesMenuWidget_C_TryClaim::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000098, "Member 'BP_ChallengesMenuWidget_C_TryClaim::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_ChallengesMenuWidget_C_TryClaim::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_ChallengesMenuWidget_C_TryClaim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ChallengesMenuWidget_C_TryClaim, CallFunc_BooleanNOR_ReturnValue) == 0x0000A8, "Member 'BP_ChallengesMenuWidget_C_TryClaim::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");

}

