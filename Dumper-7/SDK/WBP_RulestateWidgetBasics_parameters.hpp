#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RulestateWidgetBasics

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CommonInput_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_RulestateWidgetBasics.WBP_RulestateWidgetBasics_C.ExecuteUbergraph_WBP_RulestateWidgetBasics
// 0x0110 (0x0110 - 0x0000)
struct WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0030(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue;                       // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymRuleReplicatedData*                 CallFunc_GetBasicRuleData_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGymRulesState                                CallFunc_GetRuleState_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymRuleReplicatedData*                 CallFunc_GetBasicRuleData_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGymRulesState                                CallFunc_GetRuleState_ReturnValue_1;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue_1;                     // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue_1;            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue_1;             // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue_2;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue_3;            // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue_4;            // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue_5;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x00F0(0x0018)(HasGetValueTypeHash)
	ECommonInputType                              K2Node_CustomEvent_bNewInputType;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_InputMethodToGamepadVisibility_ReturnValue; // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_InputModeToMouseVisibility_ReturnValue;   // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics) == 0x000008, "Wrong alignment on WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics");
static_assert(sizeof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics) == 0x000110, "Wrong size on WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, EntryPoint) == 0x000000, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, K2Node_InputActionEvent_Key_1) == 0x000008, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, K2Node_Event_MyGeometry) == 0x000030, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, K2Node_Event_InDeltaTime) == 0x000068, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_IsOpen_ReturnValue) == 0x00006C, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_IsOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetBasicRuleData_ReturnValue) == 0x000070, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetBasicRuleData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetRuleState_ReturnValue) == 0x000078, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetRuleState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, K2Node_SwitchEnum_CmpSuccess) == 0x000079, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetBasicRuleData_ReturnValue_1) == 0x000080, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetBasicRuleData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetRuleState_ReturnValue_1) == 0x000088, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetRuleState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, K2Node_SwitchEnum_CmpSuccess_1) == 0x000089, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetActiveWidget_ReturnValue) == 0x000090, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000098, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetCurrentInputType_ReturnValue) == 0x0000A0, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A1, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_IsOpen_ReturnValue_1) == 0x0000A2, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_IsOpen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_IsValid_ReturnValue) == 0x0000A3, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetActiveWidget_ReturnValue_1) == 0x0000A8, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetActiveWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000B0, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_IsUsingGamepad_ReturnValue) == 0x0000B1, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_IsValid_ReturnValue_1) == 0x0000B2, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_IsUsingGamepad_ReturnValue_1) == 0x0000B3, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_IsUsingGamepad_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetActiveWidget_ReturnValue_2) == 0x0000B8, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetActiveWidget_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000C0, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_BooleanAND_ReturnValue) == 0x0000C1, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetActiveWidget_ReturnValue_3) == 0x0000C8, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetActiveWidget_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0000D0, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D1, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetActiveWidget_ReturnValue_4) == 0x0000D8, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetActiveWidget_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0000E0, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_GetActiveWidget_ReturnValue_5) == 0x0000E8, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_GetActiveWidget_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, K2Node_InputActionEvent_Key) == 0x0000F0, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, K2Node_CustomEvent_bNewInputType) == 0x000108, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::K2Node_CustomEvent_bNewInputType' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000109, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_InputMethodToGamepadVisibility_ReturnValue) == 0x00010A, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_InputMethodToGamepadVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_BooleanAND_ReturnValue_2) == 0x00010B, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics, CallFunc_InputModeToMouseVisibility_ReturnValue) == 0x00010C, "Member 'WBP_RulestateWidgetBasics_C_ExecuteUbergraph_WBP_RulestateWidgetBasics::CallFunc_InputModeToMouseVisibility_ReturnValue' has a wrong offset!");

// Function WBP_RulestateWidgetBasics.WBP_RulestateWidgetBasics_C.InpActEvt_Confirm_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct WBP_RulestateWidgetBasics_C_InpActEvt_Confirm_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RulestateWidgetBasics_C_InpActEvt_Confirm_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on WBP_RulestateWidgetBasics_C_InpActEvt_Confirm_K2Node_InputActionEvent_0");
static_assert(sizeof(WBP_RulestateWidgetBasics_C_InpActEvt_Confirm_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on WBP_RulestateWidgetBasics_C_InpActEvt_Confirm_K2Node_InputActionEvent_0");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InpActEvt_Confirm_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'WBP_RulestateWidgetBasics_C_InpActEvt_Confirm_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function WBP_RulestateWidgetBasics.WBP_RulestateWidgetBasics_C.InpActEvt_Decline_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct WBP_RulestateWidgetBasics_C_InpActEvt_Decline_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RulestateWidgetBasics_C_InpActEvt_Decline_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on WBP_RulestateWidgetBasics_C_InpActEvt_Decline_K2Node_InputActionEvent_1");
static_assert(sizeof(WBP_RulestateWidgetBasics_C_InpActEvt_Decline_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on WBP_RulestateWidgetBasics_C_InpActEvt_Decline_K2Node_InputActionEvent_1");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InpActEvt_Decline_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'WBP_RulestateWidgetBasics_C_InpActEvt_Decline_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function WBP_RulestateWidgetBasics.WBP_RulestateWidgetBasics_C.InputMethodToGamepadVisibility
// 0x0008 (0x0008 - 0x0000)
struct WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility final
{
public:
	ECommonInputType                              Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility) == 0x000001, "Wrong alignment on WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility");
static_assert(sizeof(WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility) == 0x000008, "Wrong size on WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility, Index_0) == 0x000000, "Member 'WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility, ReturnValue) == 0x000001, "Member 'WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility, Temp_byte_Variable_4) == 0x000006, "Member 'WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility, K2Node_Select_Default) == 0x000007, "Member 'WBP_RulestateWidgetBasics_C_InputMethodToGamepadVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_RulestateWidgetBasics.WBP_RulestateWidgetBasics_C.InputModeToMouseVisibility
// 0x0008 (0x0008 - 0x0000)
struct WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility final
{
public:
	ECommonInputType                              Index_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility) == 0x000001, "Wrong alignment on WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility");
static_assert(sizeof(WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility) == 0x000008, "Wrong size on WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility, Index_0) == 0x000000, "Member 'WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility, ReturnValue) == 0x000001, "Member 'WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility, Temp_byte_Variable_4) == 0x000006, "Member 'WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility, K2Node_Select_Default) == 0x000007, "Member 'WBP_RulestateWidgetBasics_C_InputModeToMouseVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_RulestateWidgetBasics.WBP_RulestateWidgetBasics_C.IsUsingGamepad
// 0x0020 (0x0020 - 0x0000)
struct WBP_RulestateWidgetBasics_C_IsUsingGamepad final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RulestateWidgetBasics_C_IsUsingGamepad) == 0x000008, "Wrong alignment on WBP_RulestateWidgetBasics_C_IsUsingGamepad");
static_assert(sizeof(WBP_RulestateWidgetBasics_C_IsUsingGamepad) == 0x000020, "Wrong size on WBP_RulestateWidgetBasics_C_IsUsingGamepad");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_IsUsingGamepad, ReturnValue) == 0x000000, "Member 'WBP_RulestateWidgetBasics_C_IsUsingGamepad::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_IsUsingGamepad, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_RulestateWidgetBasics_C_IsUsingGamepad::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_IsUsingGamepad, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000010, "Member 'WBP_RulestateWidgetBasics_C_IsUsingGamepad::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_IsUsingGamepad, CallFunc_GetCurrentInputType_ReturnValue) == 0x000018, "Member 'WBP_RulestateWidgetBasics_C_IsUsingGamepad::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_IsUsingGamepad, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'WBP_RulestateWidgetBasics_C_IsUsingGamepad::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_RulestateWidgetBasics.WBP_RulestateWidgetBasics_C.OnInputMethodChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct WBP_RulestateWidgetBasics_C_OnInputMethodChanged_Event final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RulestateWidgetBasics_C_OnInputMethodChanged_Event) == 0x000001, "Wrong alignment on WBP_RulestateWidgetBasics_C_OnInputMethodChanged_Event");
static_assert(sizeof(WBP_RulestateWidgetBasics_C_OnInputMethodChanged_Event) == 0x000001, "Wrong size on WBP_RulestateWidgetBasics_C_OnInputMethodChanged_Event");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_OnInputMethodChanged_Event, bNewInputType) == 0x000000, "Member 'WBP_RulestateWidgetBasics_C_OnInputMethodChanged_Event::bNewInputType' has a wrong offset!");

// Function WBP_RulestateWidgetBasics.WBP_RulestateWidgetBasics_C.OnPressedStart
// 0x0018 (0x0018 - 0x0000)
struct WBP_RulestateWidgetBasics_C_OnPressedStart final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGymPlayerController*                   K2Node_DynamicCast_AsGym_Player_Controller;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RulestateWidgetBasics_C_OnPressedStart) == 0x000008, "Wrong alignment on WBP_RulestateWidgetBasics_C_OnPressedStart");
static_assert(sizeof(WBP_RulestateWidgetBasics_C_OnPressedStart) == 0x000018, "Wrong size on WBP_RulestateWidgetBasics_C_OnPressedStart");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_OnPressedStart, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'WBP_RulestateWidgetBasics_C_OnPressedStart::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_OnPressedStart, K2Node_DynamicCast_AsGym_Player_Controller) == 0x000008, "Member 'WBP_RulestateWidgetBasics_C_OnPressedStart::K2Node_DynamicCast_AsGym_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_OnPressedStart, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_RulestateWidgetBasics_C_OnPressedStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_RulestateWidgetBasics.WBP_RulestateWidgetBasics_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_RulestateWidgetBasics_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RulestateWidgetBasics_C_Tick) == 0x000004, "Wrong alignment on WBP_RulestateWidgetBasics_C_Tick");
static_assert(sizeof(WBP_RulestateWidgetBasics_C_Tick) == 0x00003C, "Wrong size on WBP_RulestateWidgetBasics_C_Tick");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_RulestateWidgetBasics_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_RulestateWidgetBasics_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_RulestateWidgetBasics.WBP_RulestateWidgetBasics_C.TickState
// 0x0050 (0x0050 - 0x0000)
struct WBP_RulestateWidgetBasics_C_TickState final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGymPlayerController*                   K2Node_DynamicCast_AsGym_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGymPlayerController*                   K2Node_DynamicCast_AsGym_Player_Controller_1;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGymRulesState                                CallFunc_GetRuleState_ReturnValue;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGymRulesState                                CallFunc_GetRuleState_ReturnValue_1;               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymRuleReplicatedData*                 CallFunc_GetBasicRuleData_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RulestateWidgetBasics_C_TickState) == 0x000008, "Wrong alignment on WBP_RulestateWidgetBasics_C_TickState");
static_assert(sizeof(WBP_RulestateWidgetBasics_C_TickState) == 0x000050, "Wrong size on WBP_RulestateWidgetBasics_C_TickState");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_RulestateWidgetBasics_C_TickState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_RulestateWidgetBasics_C_TickState::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, CallFunc_GetValidValue_ReturnValue) == 0x000010, "Member 'WBP_RulestateWidgetBasics_C_TickState::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, K2Node_DynamicCast_AsGym_Player_Controller) == 0x000018, "Member 'WBP_RulestateWidgetBasics_C_TickState::K2Node_DynamicCast_AsGym_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_RulestateWidgetBasics_C_TickState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'WBP_RulestateWidgetBasics_C_TickState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000028, "Member 'WBP_RulestateWidgetBasics_C_TickState::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, K2Node_DynamicCast_AsGym_Player_Controller_1) == 0x000030, "Member 'WBP_RulestateWidgetBasics_C_TickState::K2Node_DynamicCast_AsGym_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_RulestateWidgetBasics_C_TickState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, CallFunc_GetRuleState_ReturnValue) == 0x000039, "Member 'WBP_RulestateWidgetBasics_C_TickState::CallFunc_GetRuleState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, CallFunc_GetRuleState_ReturnValue_1) == 0x00003A, "Member 'WBP_RulestateWidgetBasics_C_TickState::CallFunc_GetRuleState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, CallFunc_GetBasicRuleData_ReturnValue) == 0x000040, "Member 'WBP_RulestateWidgetBasics_C_TickState::CallFunc_GetBasicRuleData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RulestateWidgetBasics_C_TickState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000048, "Member 'WBP_RulestateWidgetBasics_C_TickState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

}

