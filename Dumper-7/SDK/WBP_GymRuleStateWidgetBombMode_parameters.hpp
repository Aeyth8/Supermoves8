#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GymRuleStateWidgetBombMode

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "GYMGAME_structs.hpp"


namespace SDK::Params
{

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode
// 0x0070 (0x0070 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGymPlayerController*                   K2Node_DynamicCast_AsGym_Player_Controller;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TickVignette_DeltaTime_ImplicitCast;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode) == 0x000070, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode, EntryPoint) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode, K2Node_DynamicCast_AsGym_Player_Controller) == 0x000010, "Member 'WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode::K2Node_DynamicCast_AsGym_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x00001C, "Member 'WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode, K2Node_Event_MyGeometry) == 0x000020, "Member 'WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode, K2Node_Event_InDeltaTime) == 0x000058, "Member 'WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000060, "Member 'WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode, CallFunc_TickVignette_DeltaTime_ImplicitCast) == 0x000068, "Member 'WBP_GymRuleStateWidgetBombMode_C_ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode::CallFunc_TickVignette_DeltaTime_ImplicitCast' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.GetGameState
// 0x0028 (0x0028 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_GetGameState final
{
public:
	class AGymGameState*                          State;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGymGameState*                          K2Node_DynamicCast_AsGym_Game_State;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_GetGameState) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_GetGameState");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_GetGameState) == 0x000028, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_GetGameState");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_GetGameState, State) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_GetGameState::State' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_GetGameState, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_GetGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_GetGameState, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_GymRuleStateWidgetBombMode_C_GetGameState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_GetGameState, K2Node_DynamicCast_AsGym_Game_State) == 0x000018, "Member 'WBP_GymRuleStateWidgetBombMode_C_GetGameState::K2Node_DynamicCast_AsGym_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_GetGameState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_GymRuleStateWidgetBombMode_C_GetGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.OnBombAssigned
// 0x0018 (0x0018 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned) == 0x000018, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned, Temp_bool_Variable) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned, Temp_byte_Variable) == 0x000001, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned, K2Node_Select_Default) == 0x000004, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned, Temp_byte_Variable_2) == 0x000005, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned, Temp_byte_Variable_3) == 0x000006, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned, K2Node_Select_Default_1) == 0x000007, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombAssigned::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.OnBombNotAssigned
// 0x0008 (0x0008 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_OnBombNotAssigned final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_OnBombNotAssigned) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_OnBombNotAssigned");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_OnBombNotAssigned) == 0x000008, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_OnBombNotAssigned");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnBombNotAssigned, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnBombNotAssigned::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.OnEliminated
// 0x0198 (0x0198 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_OnEliminated final
{
public:
	EEliminationReason                            EliminationReason;                                 // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEliminationReason                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0098(0x0018)()
	EEliminationReason                            Temp_byte_Variable_1;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0118(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0130(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0160(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0178(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_OnEliminated");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated) == 0x000198, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_OnEliminated");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, EliminationReason) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::EliminationReason' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_byte_Variable) == 0x000001, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_1) == 0x000020, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_2) == 0x000038, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_3) == 0x000050, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_4) == 0x000068, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_5) == 0x000080, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_6) == 0x000098, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_byte_Variable_1) == 0x0000B0, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, K2Node_Select_Default) == 0x0000B8, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_7) == 0x0000D0, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_8) == 0x0000E8, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_9) == 0x000100, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_10) == 0x000118, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_11) == 0x000130, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_12) == 0x000148, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, Temp_text_Variable_13) == 0x000160, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, K2Node_Select_Default_1) == 0x000178, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnEliminated, CallFunc_PlayAnimation_ReturnValue) == 0x000190, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnEliminated::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.OnFinished
// 0x0058 (0x0058 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_OnFinished final
{
public:
	bool                                          bIsRoyale;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0038(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_OnFinished) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_OnFinished");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_OnFinished) == 0x000058, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_OnFinished");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnFinished, bIsRoyale) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnFinished::bIsRoyale' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnFinished, Temp_bool_Variable) == 0x000001, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnFinished::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnFinished, Temp_text_Variable) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnFinished::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnFinished, Temp_text_Variable_1) == 0x000020, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnFinished::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnFinished, K2Node_Select_Default) == 0x000038, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnFinished::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnFinished, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnFinished::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.OnPlayerTagged
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged final
{
public:
	class AGymPlayerState*                        OtherPlayer;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Cooldown_0;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged) == 0x0000B8, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged, OtherPlayer) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged::OtherPlayer' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged, Cooldown_0) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged::Cooldown_0' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged, CallFunc_GetPlayerName_ReturnValue) == 0x000010, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged, K2Node_MakeArray_Array) == 0x000088, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged, CallFunc_Format_ReturnValue) == 0x000098, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged, CallFunc_PlayAnimation_ReturnValue) == 0x0000B0, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnPlayerTagged::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.OnTaggedByPlayer
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer final
{
public:
	class AGymPlayerState*                        OtherPlayer;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer) == 0x0000B8, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer, OtherPlayer) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer::OtherPlayer' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer, CallFunc_GetPlayerName_ReturnValue) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer, K2Node_MakeArray_Array) == 0x000080, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer, CallFunc_Format_ReturnValue) == 0x000090, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer, CallFunc_PlayAnimation_ReturnValue) == 0x0000A8, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000B0, "Member 'WBP_GymRuleStateWidgetBombMode_C_OnTaggedByPlayer::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.PulseFunction
// 0x0050 (0x0050 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_PulseFunction final
{
public:
	double                                        X;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Return;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPI_ReturnValue;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyByPi_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sin_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_PulseFunction");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction) == 0x000050, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_PulseFunction");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction, X) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_PulseFunction::X' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction, Return) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_PulseFunction::Return' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction, CallFunc_GetPI_ReturnValue) == 0x000010, "Member 'WBP_GymRuleStateWidgetBombMode_C_PulseFunction::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction, CallFunc_MultiplyByPi_ReturnValue) == 0x000018, "Member 'WBP_GymRuleStateWidgetBombMode_C_PulseFunction::CallFunc_MultiplyByPi_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_GymRuleStateWidgetBombMode_C_PulseFunction::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_GymRuleStateWidgetBombMode_C_PulseFunction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_GymRuleStateWidgetBombMode_C_PulseFunction::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction, CallFunc_Sin_ReturnValue) == 0x000038, "Member 'WBP_GymRuleStateWidgetBombMode_C_PulseFunction::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_GymRuleStateWidgetBombMode_C_PulseFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_PulseFunction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_GymRuleStateWidgetBombMode_C_PulseFunction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.Set Bomb Text
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text final
{
public:
	class UGymBombModeReplicatedData*             CallFunc_GetRuleData_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBombNum_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetParticipantsRunning_ReturnValue;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text) == 0x0000F0, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text, CallFunc_GetRuleData_ReturnValue) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text::CallFunc_GetRuleData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text, CallFunc_GetBombNum_ReturnValue) == 0x00000C, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text::CallFunc_GetBombNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text, CallFunc_GetParticipantsRunning_ReturnValue) == 0x000018, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text::CallFunc_GetParticipantsRunning_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000070, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text, K2Node_MakeArray_Array) == 0x0000C8, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Bomb_Text::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.Set Round Text
// 0x0090 (0x0090 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text final
{
public:
	class UGymBombModeReplicatedData*             CallFunc_GetRuleData_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRoundNum_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text) == 0x000090, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text, CallFunc_GetRuleData_ReturnValue) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text::CallFunc_GetRuleData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text, CallFunc_GetRoundNum_ReturnValue) == 0x00000C, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text::CallFunc_GetRoundNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text, K2Node_MakeArray_Array) == 0x000068, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text, CallFunc_Format_ReturnValue) == 0x000078, "Member 'WBP_GymRuleStateWidgetBombMode_C_Set_Round_Text::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_Tick) == 0x000004, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_Tick");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_Tick) == 0x00003C, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_Tick");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_GymRuleStateWidgetBombMode_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.TickUI
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_TickUI final
{
public:
	float                                         CallFunc_GetRoundStartTime_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGymGameState*                          CallFunc_GetGameState_State;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBombTimer_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatTime_ReturnValue;                   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EGymRuleParticipantState                      CallFunc_GetCurrentRuleState_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FormatTime_Time_ImplicitCast;             // 0x0098(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_TickUI) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_TickUI");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_TickUI) == 0x0000A0, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_TickUI");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_GetRoundStartTime_ReturnValue) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_GetRoundStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_GetGameState_State) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_GetGameState_State' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_GetBombTimer_ReturnValue) == 0x000010, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_GetBombTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000018, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_FormatTime_ReturnValue) == 0x000038, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_FormatTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00006C, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_PlayAnimation_ReturnValue_1) == 0x000078, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_GetCurrentRuleState_ReturnValue) == 0x000080, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_GetCurrentRuleState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000081, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000082, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000090, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickUI, CallFunc_FormatTime_Time_ImplicitCast) == 0x000098, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickUI::CallFunc_FormatTime_Time_ImplicitCast' has a wrong offset!");

// Function WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C.TickVignette
// 0x0108 (0x0108 - 0x0000)
struct WBP_GymRuleStateWidgetBombMode_C_TickVignette final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Cooldown_ImplicitCast;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GymRuleStateWidgetBombMode_C_TickVignette) == 0x000008, "Wrong alignment on WBP_GymRuleStateWidgetBombMode_C_TickVignette");
static_assert(sizeof(WBP_GymRuleStateWidgetBombMode_C_TickVignette) == 0x000108, "Wrong size on WBP_GymRuleStateWidgetBombMode_C_TickVignette");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, DeltaTime) == 0x000000, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::DeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, Temp_bool_Variable) == 0x000008, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, Temp_real_Variable) == 0x000010, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, Temp_real_Variable_1) == 0x000018, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, Temp_bool_Variable_1) == 0x000020, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, Temp_struct_Variable) == 0x000024, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, Temp_struct_Variable_1) == 0x000034, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x000048, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, K2Node_Select_Default) == 0x000060, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_LinearColorLerp_ReturnValue) == 0x000070, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000090, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Abs_ReturnValue) == 0x0000A8, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_BooleanOR_ReturnValue) == 0x0000B8, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_FClamp_ReturnValue) == 0x0000C0, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Lerp_ReturnValue) == 0x0000C8, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, K2Node_Select_Default_1) == 0x0000D0, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000E0, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, K2Node_VariableSet_Cooldown_ImplicitCast) == 0x0000E8, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::K2Node_VariableSet_Cooldown_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000F0, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000F8, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GymRuleStateWidgetBombMode_C_TickVignette, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000100, "Member 'WBP_GymRuleStateWidgetBombMode_C_TickVignette::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

