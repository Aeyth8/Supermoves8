#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GymPlayerIdentityNameplateBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GymPlayerIdentityNameplateBP.GymPlayerIdentityNameplateBP_C
// 0x0010 (0x0398 - 0x0388)
class UGymPlayerIdentityNameplateBP_C final : public UGymGuiPlayerIdentityNameplate
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AGymPlayerState*                        PlayerState;                                       // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BP_UpdatePlayerIdentityInfo(class AGymCharacter* OtherPlayer);
	void ExecuteUbergraph_GymPlayerIdentityNameplateBP(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GymPlayerIdentityNameplateBP_C">();
	}
	static class UGymPlayerIdentityNameplateBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGymPlayerIdentityNameplateBP_C>();
	}
};
static_assert(alignof(UGymPlayerIdentityNameplateBP_C) == 0x000008, "Wrong alignment on UGymPlayerIdentityNameplateBP_C");
static_assert(sizeof(UGymPlayerIdentityNameplateBP_C) == 0x000398, "Wrong size on UGymPlayerIdentityNameplateBP_C");
static_assert(offsetof(UGymPlayerIdentityNameplateBP_C, UberGraphFrame) == 0x000388, "Member 'UGymPlayerIdentityNameplateBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGymPlayerIdentityNameplateBP_C, PlayerState) == 0x000390, "Member 'UGymPlayerIdentityNameplateBP_C::PlayerState' has a wrong offset!");

}

