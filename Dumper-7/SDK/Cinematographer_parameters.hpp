#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cinematographer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Cinematographer.RealCameraActor.SetActiveFocalLength
// 0x0004 (0x0004 - 0x0000)
struct RealCameraActor_SetActiveFocalLength final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RealCameraActor_SetActiveFocalLength) == 0x000004, "Wrong alignment on RealCameraActor_SetActiveFocalLength");
static_assert(sizeof(RealCameraActor_SetActiveFocalLength) == 0x000004, "Wrong size on RealCameraActor_SetActiveFocalLength");
static_assert(offsetof(RealCameraActor_SetActiveFocalLength, Value) == 0x000000, "Member 'RealCameraActor_SetActiveFocalLength::Value' has a wrong offset!");

// Function Cinematographer.RealCameraActor.SetCurrentAperture
// 0x0004 (0x0004 - 0x0000)
struct RealCameraActor_SetCurrentAperture final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RealCameraActor_SetCurrentAperture) == 0x000004, "Wrong alignment on RealCameraActor_SetCurrentAperture");
static_assert(sizeof(RealCameraActor_SetCurrentAperture) == 0x000004, "Wrong size on RealCameraActor_SetCurrentAperture");
static_assert(offsetof(RealCameraActor_SetCurrentAperture, Value) == 0x000000, "Member 'RealCameraActor_SetCurrentAperture::Value' has a wrong offset!");

// Function Cinematographer.RealCameraActor.SetCurrentISO
// 0x0004 (0x0004 - 0x0000)
struct RealCameraActor_SetCurrentISO final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RealCameraActor_SetCurrentISO) == 0x000004, "Wrong alignment on RealCameraActor_SetCurrentISO");
static_assert(sizeof(RealCameraActor_SetCurrentISO) == 0x000004, "Wrong size on RealCameraActor_SetCurrentISO");
static_assert(offsetof(RealCameraActor_SetCurrentISO, Value) == 0x000000, "Member 'RealCameraActor_SetCurrentISO::Value' has a wrong offset!");

// Function Cinematographer.RealCameraActor.SetCurrentNDFilter
// 0x0004 (0x0004 - 0x0000)
struct RealCameraActor_SetCurrentNDFilter final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RealCameraActor_SetCurrentNDFilter) == 0x000004, "Wrong alignment on RealCameraActor_SetCurrentNDFilter");
static_assert(sizeof(RealCameraActor_SetCurrentNDFilter) == 0x000004, "Wrong size on RealCameraActor_SetCurrentNDFilter");
static_assert(offsetof(RealCameraActor_SetCurrentNDFilter, Value) == 0x000000, "Member 'RealCameraActor_SetCurrentNDFilter::Value' has a wrong offset!");

// Function Cinematographer.RealCameraActor.SetCustomAspectRatio
// 0x0010 (0x0010 - 0x0000)
struct RealCameraActor_SetCustomAspectRatio final
{
public:
	struct FVector2D                              Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RealCameraActor_SetCustomAspectRatio) == 0x000008, "Wrong alignment on RealCameraActor_SetCustomAspectRatio");
static_assert(sizeof(RealCameraActor_SetCustomAspectRatio) == 0x000010, "Wrong size on RealCameraActor_SetCustomAspectRatio");
static_assert(offsetof(RealCameraActor_SetCustomAspectRatio, Value) == 0x000000, "Member 'RealCameraActor_SetCustomAspectRatio::Value' has a wrong offset!");

}

