#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DebugCustomCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DebugCustomCamera.DebugCustomCamera_C
// 0x0098 (0x0330 - 0x0298)
class ADebugCustomCamera_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Target;                                            // 0x02B0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     Transforms;                                        // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          MouseDown;                                         // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DebugCustomCamera(int32 EntryPoint);
	void InpActEvt_MouseLeftClick_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_MouseLeftClick_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpAxisEvt_MouseX_K2Node_InputAxisEvent_0(float AxisValue);
	void OnCategorySelected(int32 Category);
	void ReceiveTick(float DeltaSeconds);
	void SetTargetTransform(const struct FTransform& NewParam);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DebugCustomCamera_C">();
	}
	static class ADebugCustomCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADebugCustomCamera_C>();
	}
};
static_assert(alignof(ADebugCustomCamera_C) == 0x000010, "Wrong alignment on ADebugCustomCamera_C");
static_assert(sizeof(ADebugCustomCamera_C) == 0x000330, "Wrong size on ADebugCustomCamera_C");
static_assert(offsetof(ADebugCustomCamera_C, UberGraphFrame) == 0x000298, "Member 'ADebugCustomCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADebugCustomCamera_C, Camera) == 0x0002A0, "Member 'ADebugCustomCamera_C::Camera' has a wrong offset!");
static_assert(offsetof(ADebugCustomCamera_C, DefaultSceneRoot) == 0x0002A8, "Member 'ADebugCustomCamera_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ADebugCustomCamera_C, Target) == 0x0002B0, "Member 'ADebugCustomCamera_C::Target' has a wrong offset!");
static_assert(offsetof(ADebugCustomCamera_C, Transforms) == 0x000310, "Member 'ADebugCustomCamera_C::Transforms' has a wrong offset!");
static_assert(offsetof(ADebugCustomCamera_C, MouseDown) == 0x000320, "Member 'ADebugCustomCamera_C::MouseDown' has a wrong offset!");

}

