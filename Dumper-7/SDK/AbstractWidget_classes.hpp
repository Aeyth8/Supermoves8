#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AbstractWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AbstractWidget.AbstractWidget_C
// 0x0090 (0x0350 - 0x02C0)
class UAbstractWidget_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FLinearColor                           FillColor1;                                        // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FillColor2;                                        // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundColor;                                   // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DecreaseColor;                                     // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           IncreaseColor;                                     // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OffsetTime;                                        // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OffsetSpeed;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResetInterpolationOnUpdate;                       // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResetOffsetTimeOnlyWhenNoAnimation;               // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableIncreaseAnimation;                          // 0x032A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableDecreaseAnimation;                          // 0x032B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ImageMaterial;                                     // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, Interp, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        TimeSinceLastPercentUpdate;                        // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDamaged;                                        // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseOpacityMask;                                   // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               OpacityMask;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_AbstractWidget(int32 EntryPoint);
	void GetPercent(double* PercentValue);
	void PreConstruct(bool IsDesignTime);
	void SetPercent(double NewParam);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateStyle();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AbstractWidget_C">();
	}
	static class UAbstractWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAbstractWidget_C>();
	}
};
static_assert(alignof(UAbstractWidget_C) == 0x000008, "Wrong alignment on UAbstractWidget_C");
static_assert(sizeof(UAbstractWidget_C) == 0x000350, "Wrong size on UAbstractWidget_C");
static_assert(offsetof(UAbstractWidget_C, UberGraphFrame) == 0x0002C0, "Member 'UAbstractWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, FillColor1) == 0x0002C8, "Member 'UAbstractWidget_C::FillColor1' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, FillColor2) == 0x0002D8, "Member 'UAbstractWidget_C::FillColor2' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, BackgroundColor) == 0x0002E8, "Member 'UAbstractWidget_C::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, DecreaseColor) == 0x0002F8, "Member 'UAbstractWidget_C::DecreaseColor' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, IncreaseColor) == 0x000308, "Member 'UAbstractWidget_C::IncreaseColor' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, OffsetTime) == 0x000318, "Member 'UAbstractWidget_C::OffsetTime' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, OffsetSpeed) == 0x000320, "Member 'UAbstractWidget_C::OffsetSpeed' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, bResetInterpolationOnUpdate) == 0x000328, "Member 'UAbstractWidget_C::bResetInterpolationOnUpdate' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, bResetOffsetTimeOnlyWhenNoAnimation) == 0x000329, "Member 'UAbstractWidget_C::bResetOffsetTimeOnlyWhenNoAnimation' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, bEnableIncreaseAnimation) == 0x00032A, "Member 'UAbstractWidget_C::bEnableIncreaseAnimation' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, bEnableDecreaseAnimation) == 0x00032B, "Member 'UAbstractWidget_C::bEnableDecreaseAnimation' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, ImageMaterial) == 0x000330, "Member 'UAbstractWidget_C::ImageMaterial' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, TimeSinceLastPercentUpdate) == 0x000338, "Member 'UAbstractWidget_C::TimeSinceLastPercentUpdate' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, bIsDamaged) == 0x000340, "Member 'UAbstractWidget_C::bIsDamaged' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, bUseOpacityMask) == 0x000341, "Member 'UAbstractWidget_C::bUseOpacityMask' has a wrong offset!");
static_assert(offsetof(UAbstractWidget_C, OpacityMask) == 0x000348, "Member 'UAbstractWidget_C::OpacityMask' has a wrong offset!");

}

