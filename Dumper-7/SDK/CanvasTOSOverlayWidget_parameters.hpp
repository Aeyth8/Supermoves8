#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CanvasTOSOverlayWidget

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function CanvasTOSOverlayWidget.CanvasTOSOverlayWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct CanvasTOSOverlayWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CanvasTOSOverlayWidget_C_Tick) == 0x000004, "Wrong alignment on CanvasTOSOverlayWidget_C_Tick");
static_assert(sizeof(CanvasTOSOverlayWidget_C_Tick) == 0x00003C, "Wrong size on CanvasTOSOverlayWidget_C_Tick");
static_assert(offsetof(CanvasTOSOverlayWidget_C_Tick, MyGeometry) == 0x000000, "Member 'CanvasTOSOverlayWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'CanvasTOSOverlayWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function CanvasTOSOverlayWidget.CanvasTOSOverlayWidget_C.OnTOSAccepted_Event
// 0x0001 (0x0001 - 0x0000)
struct CanvasTOSOverlayWidget_C_OnTOSAccepted_Event final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CanvasTOSOverlayWidget_C_OnTOSAccepted_Event) == 0x000001, "Wrong alignment on CanvasTOSOverlayWidget_C_OnTOSAccepted_Event");
static_assert(sizeof(CanvasTOSOverlayWidget_C_OnTOSAccepted_Event) == 0x000001, "Wrong size on CanvasTOSOverlayWidget_C_OnTOSAccepted_Event");
static_assert(offsetof(CanvasTOSOverlayWidget_C_OnTOSAccepted_Event, Success) == 0x000000, "Member 'CanvasTOSOverlayWidget_C_OnTOSAccepted_Event::Success' has a wrong offset!");

// Function CanvasTOSOverlayWidget.CanvasTOSOverlayWidget_C.InpActEvt_UIGamepadUp_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_6");
static_assert(sizeof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_6");
static_assert(offsetof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function CanvasTOSOverlayWidget.CanvasTOSOverlayWidget_C.InpActEvt_UIGamepadUp_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_5");
static_assert(sizeof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_5");
static_assert(offsetof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function CanvasTOSOverlayWidget.CanvasTOSOverlayWidget_C.InpActEvt_UIGamepadRight_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_2");
static_assert(sizeof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_2");
static_assert(offsetof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function CanvasTOSOverlayWidget.CanvasTOSOverlayWidget_C.InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_1");
static_assert(sizeof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_1");
static_assert(offsetof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function CanvasTOSOverlayWidget.CanvasTOSOverlayWidget_C.InpActEvt_UIGamepadInteract_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadInteract_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadInteract_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadInteract_K2Node_InputActionEvent_0");
static_assert(sizeof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadInteract_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadInteract_K2Node_InputActionEvent_0");
static_assert(offsetof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadInteract_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadInteract_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function CanvasTOSOverlayWidget.CanvasTOSOverlayWidget_C.InpActEvt_UIGamepadDown_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_4");
static_assert(sizeof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_4");
static_assert(offsetof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function CanvasTOSOverlayWidget.CanvasTOSOverlayWidget_C.InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3");
static_assert(sizeof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3");
static_assert(offsetof(CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'CanvasTOSOverlayWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function CanvasTOSOverlayWidget.CanvasTOSOverlayWidget_C.ExecuteUbergraph_CanvasTOSOverlayWidget
// 0x01C0 (0x01C0 - 0x0000)
struct CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0050(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0080(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymCloudApi*                           CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GamepadUINavigate_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GamepadUINavigate_ReturnValue_1;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue;                       // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue_1;                     // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue_2;                     // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue_3;                     // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpen_ReturnValue_4;                     // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00F4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0140(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0158(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x0180(0x0018)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget) == 0x000008, "Wrong alignment on CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget");
static_assert(sizeof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget) == 0x0001C0, "Wrong size on CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, EntryPoint) == 0x000000, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_InputActionEvent_Key_3) == 0x000008, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, Temp_struct_Variable) == 0x000020, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_InputActionEvent_Key_2) == 0x000038, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_InputActionEvent_Key_1) == 0x000050, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_InputActionEvent_Key) == 0x000068, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_InputActionEvent_Key_4) == 0x000080, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_CustomEvent_Success) == 0x000098, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_CreateDelegate_OutputDelegate) == 0x00009C, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000B0, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_SwitchEnum_CmpSuccess) == 0x0000B8, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_GetPlayerController_ReturnValue) == 0x0000C0, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_GamepadUINavigate_ReturnValue) == 0x0000C8, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_GamepadUINavigate_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x0000D0, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_GamepadUINavigate_ReturnValue_1) == 0x0000D8, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_GamepadUINavigate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_GetCurrentInputType_ReturnValue) == 0x0000D9, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_IsOpen_ReturnValue) == 0x0000DA, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_IsOpen_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000DB, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_IsOpen_ReturnValue_1) == 0x0000DC, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_IsOpen_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_IsOpen_ReturnValue_2) == 0x0000DD, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_IsOpen_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_IsOpen_ReturnValue_3) == 0x0000DE, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_IsOpen_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_IsOpen_ReturnValue_4) == 0x0000DF, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_IsOpen_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_MakeArray_Array) == 0x0000E0, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F1, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_Event_MyGeometry) == 0x0000F4, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_Event_InDeltaTime) == 0x00012C, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_GetScrollOffset_ReturnValue) == 0x000130, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000138, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, Temp_struct_Variable_1) == 0x000140, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_InputActionEvent_Key_5) == 0x000158, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000178, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, K2Node_InputActionEvent_Key_6) == 0x000180, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_GetPlayerController_ReturnValue_1) == 0x000198, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_GetPlayerController_ReturnValue_2) == 0x0001A0, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001A8, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0001B0, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget, CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast) == 0x0001B8, "Member 'CanvasTOSOverlayWidget_C_ExecuteUbergraph_CanvasTOSOverlayWidget::CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast' has a wrong offset!");

}

