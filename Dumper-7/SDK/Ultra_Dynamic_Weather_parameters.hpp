#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ultra_Dynamic_Weather

#include "Basic.hpp"

#include "UDS_DLWE_Mode_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "RandomWeatherVariation_State_structs.hpp"
#include "UDS_and_UDW_State_structs.hpp"
#include "UDS_Weather_Sound_Components_structs.hpp"
#include "UDS_TemperatureType_structs.hpp"
#include "UDS_Weather_Display_Names_structs.hpp"
#include "UDS_Season_structs.hpp"


namespace SDK::Params
{

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Add Weather Override Volume to Array
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array final
{
public:
	class AWeather_Override_Volume_C*             Weather_Override_Volume;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array, Weather_Override_Volume) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array::Weather_Override_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array, CallFunc_Array_Contains_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Weather_C_Add_Weather_Override_Volume_to_Array::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Climate Preset Object
// 0x0190 (0x0190 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object final
{
public:
	class UUDS_Climate_Preset_C*                  Climate;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Make_Climate_Probability_Map_Probability_Map; // 0x0010(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Make_Climate_Probability_Map_Probability_Map_1; // 0x0060(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Make_Climate_Probability_Map_Probability_Map_2; // 0x00B0(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Make_Climate_Probability_Map_Probability_Map_3; // 0x0100(0x0050)()
	struct FVector2D                              CallFunc_Get_Climate_Temperature_Ranges_Summer_Range; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Climate_Temperature_Ranges_Autumn_Range; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Climate_Temperature_Ranges_Winter_Range; // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Get_Climate_Temperature_Ranges_Spring_Range; // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object) == 0x000190, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, Climate) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::Climate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Make_Climate_Probability_Map_Probability_Map) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Make_Climate_Probability_Map_Probability_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Make_Climate_Probability_Map_Probability_Map_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Make_Climate_Probability_Map_Probability_Map_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Make_Climate_Probability_Map_Probability_Map_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Make_Climate_Probability_Map_Probability_Map_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Make_Climate_Probability_Map_Probability_Map_3) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Make_Climate_Probability_Map_Probability_Map_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Get_Climate_Temperature_Ranges_Summer_Range) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Get_Climate_Temperature_Ranges_Summer_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Get_Climate_Temperature_Ranges_Autumn_Range) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Get_Climate_Temperature_Ranges_Autumn_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Get_Climate_Temperature_Ranges_Winter_Range) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Get_Climate_Temperature_Ranges_Winter_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object, CallFunc_Get_Climate_Temperature_Ranges_Spring_Range) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Apply_Climate_Preset_Object::CallFunc_Get_Climate_Temperature_Ranges_Spring_Range' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Interior Temperature with Occlusion
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion final
{
public:
	double                                        Temp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Occlusion;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion, Temp) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion::Temp' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion, Occlusion) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion::Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion, Out) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Apply_Interior_Temperature_with_Occlusion::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Max to Material Effects
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects final
{
public:
	class UUDS_Weather_Settings_C*                Weather_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_Coverage;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wetness;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Dust_0;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, Weather_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::Weather_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, Snow_Coverage) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::Snow_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, Wetness) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::Wetness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, Param_Dust_0) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::Param_Dust_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Apply_Max_to_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Splash Materials
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Splash_Materials final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterial>               K2Node_Select_Default;                             // 0x0008(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterial>               K2Node_Select_Default_1;                           // 0x0030(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              K2Node_DynamicCast_AsMaterial;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              K2Node_DynamicCast_AsMaterial_1;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Splash_Materials");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials) == 0x000088, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Splash_Materials");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, Temp_bool_Variable_1) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, K2Node_Select_Default) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, K2Node_Select_Default_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, K2Node_DynamicCast_AsMaterial) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::K2Node_DynamicCast_AsMaterial' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, K2Node_DynamicCast_AsMaterial_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::K2Node_DynamicCast_AsMaterial_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Splash_Materials, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Apply_Splash_Materials::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply State
// 0x0160 (0x0160 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_State final
{
public:
	struct FUDS_and_UDW_State                     State;                                             // 0x0000(0x0160)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_State) == 0x000160, "Wrong size on Ultra_Dynamic_Weather_C_Apply_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_State, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_State::State' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Apply Weather Changes Above Cloud Layer
// 0x00F8 (0x00F8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer final
{
public:
	class UUDS_Weather_Settings_C*                State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Above_Clouds;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_7;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_8;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_9;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_10;                      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer) == 0x0000F8, "Wrong size on Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, Location) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, Above_Clouds) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::Above_Clouds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_4) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_5) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_6) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_7) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_8) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_9) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Lerp_ReturnValue_10) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_MapRangeClamped_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_BooleanAND_ReturnValue) == 0x0000F1, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F2, "Member 'Ultra_Dynamic_Weather_C_Apply_Weather_Changes_Above_Cloud_Layer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Audio Update
// 0x00E0 (0x00E0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Audio_Update final
{
public:
	class UAudioComponent*                        Sound_Component;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Values;                                    // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_3;                         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Audio_Update) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Audio_Update");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Audio_Update) == 0x0000E0, "Wrong size on Ultra_Dynamic_Weather_C_Audio_Update");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Sound_Component) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Sound_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Current_Values) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Current_Values' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Alpha) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Temp_int_Array_Index_Variable) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_BreakVector_X) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_BreakVector_Y) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_BreakVector_Z) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Array_Get_Item_3) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_VLerp_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_VLerp_Alpha_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast) == 0x0000CC, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x0000D4, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Audio_Update, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Audio_Update::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Cache Sound Effects Levels
// 0x0250 (0x0250 - 0x0000)
struct Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels final
{
public:
	int32                                         Current_Sound_Index;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Current_Sound_Changing;                            // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rain_Sound_Component_Properties_Volume;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rain_Sound_Component_Properties_LPF;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rain_Sound_Component_Properties_Rain_Parameter; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Wind_Sound_Volume_And_LPF_Volume; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Wind_Sound_Volume_And_LPF_LPF; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EUDS_Weather_Sound_Components>         K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_Weather_Sound_Components>         K2Node_MakeArray_Array_1;                          // 0x00B8(0x0010)(ReferenceParm)
	EUDS_Weather_Sound_Components                 CallFunc_Array_Get_Item;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Sound_Components                 CallFunc_Array_Get_Item_1;                         // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_3;                         // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualExactly_VectorVector_ReturnValue;    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_Weather_Sound_Components>         K2Node_MakeArray_Array_2;                          // 0x0138(0x0010)(ReferenceParm)
	struct FVector                                Temp_struct_Variable;                              // 0x0148(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Sound_Components                 CallFunc_Array_Get_Item_4;                         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Sound_Global_Occlusion_Out;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Get_Sound_Directional_Occlusion_Out;      // 0x0188(0x0010)(ReferenceParm)
	double                                        CallFunc_Global_Sound_LPF_ReturnValue;             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Wind_Whistling_Sound_Volume_Int;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Wind_Sound_Intensity_Int;                 // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x01D0(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Global_Sound_LPF_ReturnValue_1;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Distant_Thunder_Sound_Volume_Int;         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EUDS_Weather_Sound_Components>         K2Node_MakeArray_Array_3;                          // 0x0210(0x0010)(ReferenceParm)
	EUDS_Weather_Sound_Components                 CallFunc_Array_Get_Item_5;                         // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_6;             // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_2;                            // 0x0230(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels) == 0x000250, "Wrong size on Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Current_Sound_Index) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Current_Sound_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Current_Sound_Changing) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Current_Sound_Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_int_Loop_Counter_Variable_3) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Rain_Sound_Component_Properties_Volume) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Rain_Sound_Component_Properties_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Rain_Sound_Component_Properties_LPF) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Rain_Sound_Component_Properties_LPF' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Rain_Sound_Component_Properties_Rain_Parameter) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Rain_Sound_Component_Properties_Rain_Parameter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Add_IntInt_ReturnValue_3) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_int_Loop_Counter_Variable_4) == 0x000064, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Add_IntInt_ReturnValue_4) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_int_Array_Index_Variable_3) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Directional_Wind_Sound_Volume_And_LPF_Volume) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Directional_Wind_Sound_Volume_And_LPF_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Directional_Wind_Sound_Volume_And_LPF_LPF) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Directional_Wind_Sound_Volume_And_LPF_LPF' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_MakeVector_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, K2Node_MakeArray_Array) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000AC, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Less_IntInt_ReturnValue) == 0x0000AD, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, K2Node_MakeArray_Array_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D4, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0000D5, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_MapRangeClamped_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_int_Array_Index_Variable_4) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Get_Item_1) == 0x0000EC, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Get_Item_3) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Length_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_EqualExactly_VectorVector_ReturnValue) == 0x00012C, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_EqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Less_IntInt_ReturnValue_2) == 0x00012D, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Not_PreBool_ReturnValue) == 0x00012E, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_BooleanOR_ReturnValue) == 0x00012F, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_BooleanOR_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, K2Node_MakeArray_Array_2) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_struct_Variable) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Get_Item_4) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000164, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Length_ReturnValue_3) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Less_IntInt_ReturnValue_3) == 0x00016C, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x00016D, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Get_Sound_Global_Occlusion_Out) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Get_Sound_Global_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Get_Sound_Directional_Occlusion_Out) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Get_Sound_Directional_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Global_Sound_LPF_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Global_Sound_LPF_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Wind_Whistling_Sound_Volume_Int) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Wind_Whistling_Sound_Volume_Int' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_FMin_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_MakeVector_ReturnValue_2) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Wind_Sound_Intensity_Int) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Wind_Sound_Intensity_Int' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_struct_Variable_1) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Global_Sound_LPF_ReturnValue_1) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Global_Sound_LPF_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Distant_Thunder_Sound_Volume_Int) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Distant_Thunder_Sound_Volume_Int' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_MakeVector_ReturnValue_3) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, K2Node_MakeArray_Array_3) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Get_Item_5) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Array_Length_ReturnValue_4) == 0x000224, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Conv_ByteToInt_ReturnValue_6) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Conv_ByteToInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_Less_IntInt_ReturnValue_4) == 0x00022C, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, Temp_struct_Variable_2) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Cache_Sound_Effects_Levels::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Change to Random Weather Variation
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation final
{
public:
	double                                        Time_to_Transition_to_Random_Weather__Seconds_;    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation, Time_to_Transition_to_Random_Weather__Seconds_) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Change_to_Random_Weather_Variation::Time_to_Transition_to_Random_Weather__Seconds_' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Change Weather
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Change_Weather final
{
public:
	class UUDS_Weather_Settings_C*                New_Weather_Type;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Time_To_Transition_To_New_Weather__Seconds_;       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Change_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Change_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Change_Weather) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Change_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather, New_Weather_Type) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Change_Weather::New_Weather_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Change_Weather, Time_To_Transition_To_New_Weather__Seconds_) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Change_Weather::Time_To_Transition_To_New_Weather__Seconds_' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check for DLWE Recenter
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter final
{
public:
	bool                                          CallFunc_Does_DLWE_Need_Recentering_Needs_X_Axis_Recenter; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Does_DLWE_Need_Recentering_Needs_Y_Axis_Recenter; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Does_DLWE_Need_Recentering_Needs_X_Axis_Recenter_1; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Does_DLWE_Need_Recentering_Needs_Y_Axis_Recenter_1; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Does_DLWE_Need_Recentering_Needs_X_Axis_Recenter_2; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Does_DLWE_Need_Recentering_Needs_Y_Axis_Recenter_2; // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter) == 0x0000E8, "Wrong size on Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Does_DLWE_Need_Recentering_Needs_X_Axis_Recenter) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Does_DLWE_Need_Recentering_Needs_X_Axis_Recenter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Does_DLWE_Need_Recentering_Needs_Y_Axis_Recenter) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Does_DLWE_Need_Recentering_Needs_Y_Axis_Recenter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Does_DLWE_Need_Recentering_Needs_X_Axis_Recenter_1) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Does_DLWE_Need_Recentering_Needs_X_Axis_Recenter_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Does_DLWE_Need_Recentering_Needs_Y_Axis_Recenter_1) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Does_DLWE_Need_Recentering_Needs_Y_Axis_Recenter_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Does_DLWE_Need_Recentering_Needs_X_Axis_Recenter_2) == 0x000005, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Does_DLWE_Need_Recentering_Needs_X_Axis_Recenter_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Does_DLWE_Need_Recentering_Needs_Y_Axis_Recenter_2) == 0x000006, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Does_DLWE_Need_Recentering_Needs_Y_Axis_Recenter_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X_2) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y_2) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_X_3) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Y_3) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_BreakVector_Z_3) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_MakeVector_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Check_for_DLWE_Recenter::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check for Events to Dispatch
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Display_Name_for_Current_Weather_As_String; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    CallFunc_Get_Display_Name_for_Current_Weather_As_Enumerator; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Dusty_Yes;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Dusty_Yes_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Cloudy_Yes;                     // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Cloudy_Yes_1;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Snowing_Yes;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Snowing_Yes_1;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Raining_Yes;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Currently_Raining_Yes_1;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_3;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Get_Display_Name_for_Current_Weather_As_String) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Get_Display_Name_for_Current_Weather_As_String' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Get_Display_Name_for_Current_Weather_As_Enumerator) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Get_Display_Name_for_Current_Weather_As_Enumerator' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Dusty_Yes) == 0x00001B, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Dusty_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Dusty_Yes_1) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Dusty_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001D, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00001E, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001F, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_BooleanOR_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Not_PreBool_ReturnValue_3) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Not_PreBool_ReturnValue_4) == 0x000022, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Cloudy_Yes) == 0x000023, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Cloudy_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Cloudy_Yes_1) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Cloudy_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Snowing_Yes) == 0x000025, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Snowing_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Snowing_Yes_1) == 0x000026, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Snowing_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Raining_Yes) == 0x000027, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Raining_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_Currently_Raining_Yes_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_Currently_Raining_Yes_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_BooleanOR_ReturnValue_2) == 0x00002A, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x00002B, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_BooleanOR_ReturnValue_3) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_NotEqual_BoolBool_ReturnValue_3) == 0x00002D, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_NotEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch, CallFunc_BooleanOR_ReturnValue_4) == 0x00002E, "Member 'Ultra_Dynamic_Weather_C_Check_for_Events_to_Dispatch::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check for Weather Value Update Threshold
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold final
{
public:
	double                                        New_Value;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Buffer_Value;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Threshold;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Range_Max;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update_Needed_Bool;                                // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, New_Value) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::New_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, Buffer_Value) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::Buffer_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, Threshold) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::Threshold' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, Range_Max) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::Range_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, Update_Needed_Bool) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::Update_Needed_Bool' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_Abs_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000042, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold, CallFunc_BooleanOR_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Check_for_Weather_Value_Update_Threshold::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check Point for Puddles Snow Or Dust
// 0x0418 (0x0418 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ground_Normal;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      Physical_Material;                                 // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Puddle_Depth;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_Depth_0;                                      // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dust_Depth_0;                                      // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dust_Mask;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Mask_Cancel;                                       // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Weather_Mask_Rain;                                 // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Weather_Mask;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Puddle_Mask;                                       // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_Mask;                                         // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Small_Cloud_Sample;                                // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Large_Cloud_Sample;                                // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Wetness;    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Dust;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_1;             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0140(0x0010)(ConstParm, ReferenceParm)
	TArray<class UPrimitiveComponent*>            CallFunc_BoxOverlapComponents_OutComponents;       // 0x0150(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxOverlapComponents_ReturnValue;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUDS_WeatherMask_Interface_C> K2Node_DynamicCast_AsUDS_Weather_Mask_Interface;   // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Approximate_Masking_At_Location_Mask;     // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Approximate_Masking_At_Location_Cancel_All_Masks; // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue;                        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue_1;                      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue_2;                      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue_3;                      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_8;      // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_9;      // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_2;                         // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_5;                     // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0408(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust) == 0x000418, "Wrong size on Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Ground_Normal) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Ground_Normal' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Physical_Material) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Physical_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Puddle_Depth) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Puddle_Depth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Snow_Depth_0) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Snow_Depth_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Dust_Depth_0) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Dust_Depth_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Dust_Mask) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Dust_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Mask_Cancel) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Mask_Cancel' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Weather_Mask_Rain) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Weather_Mask_Rain' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Weather_Mask) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Weather_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Puddle_Mask) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Puddle_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Snow_Mask) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Snow_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Small_Cloud_Sample) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Small_Cloud_Sample' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Large_Cloud_Sample) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Large_Cloud_Sample' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, K2Node_MakeArray_Array) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Conv_IntToBool_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Apply_Max_to_Material_Effects_Wetness) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Apply_Max_to_Material_Effects_Wetness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Apply_Max_to_Material_Effects_Dust) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Apply_Max_to_Material_Effects_Dust' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Conv_IntToBool_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Conv_IntToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_SelectFloat_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_MapRangeClamped_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, K2Node_SwitchEnum_CmpSuccess) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_SelectFloat_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, Temp_object_Variable) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BoxOverlapComponents_OutComponents) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BoxOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BoxOverlapComponents_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BoxOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Add_IntInt_ReturnValue) == 0x000164, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Get_Item) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, K2Node_DynamicCast_AsUDS_Weather_Mask_Interface) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::K2Node_DynamicCast_AsUDS_Weather_Mask_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Less_IntInt_ReturnValue) == 0x000189, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Approximate_Masking_At_Location_Mask) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Approximate_Masking_At_Location_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Approximate_Masking_At_Location_Cancel_All_Masks) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Approximate_Masking_At_Location_Cancel_All_Masks' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_1) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_1) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FWrap_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FWrap_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FWrap_ReturnValue_1) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FWrap_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FFloor_ReturnValue) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FFloor_ReturnValue_1) == 0x000214, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FWrap_ReturnValue_2) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FWrap_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FWrap_ReturnValue_3) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FWrap_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FFloor_ReturnValue_2) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FFloor_ReturnValue_3) == 0x00023C, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_IntInt_ReturnValue) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000244, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Add_IntInt_ReturnValue_1) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Add_IntInt_ReturnValue_2) == 0x00024C, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Contains_ReturnValue) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Contains_ReturnValue_1) == 0x000251, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_X) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_Y) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_Z) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue_1) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Lerp_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_X_1) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_Y_1) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector_Z_1) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_2) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_2) == 0x000300, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue_2) == 0x000310, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_3) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_3) == 0x000320, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x000328, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Lerp_ReturnValue_1) == 0x000330, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Lerp_ReturnValue_2) == 0x000338, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_4) == 0x000340, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_4) == 0x000348, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000350, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_5) == 0x000360, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_5) == 0x000368, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x000370, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Lerp_ReturnValue_3) == 0x000378, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue_3) == 0x000380, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000388, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_SelectFloat_ReturnValue_2) == 0x000390, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000398, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_8) == 0x0003A0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Subtract_DoubleDouble_ReturnValue_9) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Subtract_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Get_Item_1) == 0x0003B0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue_4) == 0x0003C0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x0003C8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x0003D0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_Array_Get_Item_2) == 0x0003D8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_FClamp_ReturnValue_5) == 0x0003E8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_X_6) == 0x0003F0, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_BreakVector2D_Y_6) == 0x0003F8, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_SelectFloat_ReturnValue_3) == 0x000400, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust, CallFunc_MakeVector2D_ReturnValue) == 0x000408, "Member 'Ultra_Dynamic_Weather_C_Check_Point_for_Puddles_Snow_Or_Dust::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check to change DLWE Mode
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_DLWE_Render_Target_Mapping_Mapping;       // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                K2Node_Select_Default_1;                           // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                K2Node_Select_Default_2;                           // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D_1;   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_byte_Variable) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_bool_Variable_1) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_byte_Variable_1) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_byte_Variable_2) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, Temp_bool_Variable_2) == 0x000022, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000023, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_Select_Default) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000025, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000026, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BooleanAND_ReturnValue) == 0x000027, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_DLWE_Render_Target_Mapping_Mapping) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_DLWE_Render_Target_Mapping_Mapping' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000039, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BooleanAND_ReturnValue_1) == 0x00003A, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_Select_Default_1) == 0x00003B, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BooleanAND_ReturnValue_2) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BooleanOR_ReturnValue) == 0x00003D, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_Select_Default_2) == 0x00003E, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_DynamicCast_AsTexture_Render_Target_2D_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_DynamicCast_AsTexture_Render_Target_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000069, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_BooleanOR_ReturnValue_1) == 0x00006A, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Check_to_change_DLWE_Mode::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check to Change Temperature Scale
// 0x0138 (0x0138 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale final
{
public:
	TArray<class AWeather_Override_Volume_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_1;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_2;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_3;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Convert_Temperature_Scale_Output_4;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_5;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_3;              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Convert_Temperature_Scale_Output_6;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_4;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Convert_Temperature_Scale_Output_7;       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_8;       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_5;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Convert_Temperature_Scale_Output_9;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale) == 0x000138, "Wrong size on Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_X) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, Temp_int_Variable) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Array_Get_Item) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeVector2D_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_X_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_Y_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_X_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_Y_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_2) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_3) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_4) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_X_3) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_BreakVector2D_Y_3) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_5) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_3) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_6) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_4) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_7) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeVector2D_ReturnValue_3) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_8) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_GetValidValue_ReturnValue_5) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_GetValidValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeLiteralByte_ReturnValue) == 0x000121, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Convert_Temperature_Scale_Output_9) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Convert_Temperature_Scale_Output_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_Less_ByteByte_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000131, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000132, "Member 'Ultra_Dynamic_Weather_C_Check_to_Change_Temperature_Scale::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check To Limit Construction
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_To_Limit_Construction final
{
public:
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_To_Limit_Construction");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Check_To_Limit_Construction");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_BooleanOR_ReturnValue_1) == 0x00003B, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_To_Limit_Construction, CallFunc_BooleanOR_ReturnValue_2) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Check_To_Limit_Construction::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check to Recenter Weather Override Volume Target
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_GetAbsMax_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target, CallFunc_Vector_GetAbsMax_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target::CallFunc_Vector_GetAbsMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000039, "Member 'Ultra_Dynamic_Weather_C_Check_to_Recenter_Weather_Override_Volume_Target::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Check to Redraw Weather Mask Target
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_GetAbsMax_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target, CallFunc_Vector_GetAbsMax_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target::CallFunc_Vector_GetAbsMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target, CallFunc_FMin_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Weather_C_Check_to_Redraw_Weather_Mask_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Clear All Material Parameters to Zero Coverage
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage final
{
public:
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Clear_All_Material_Parameters_to_Zero_Coverage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Close Thunder Sound Delay
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay, Delay) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay::Delay' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Close_Thunder_Sound_Delay::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Combined Wind Direction
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Weather_C_Combined_Wind_Direction final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Yaw_Angles_Out;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast;         // 0x0078(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Combined_Wind_Direction");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction) == 0x000088, "Wrong size on Ultra_Dynamic_Weather_C_Combined_Wind_Direction");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_BreakVector2D_X) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Lerp_Yaw_Angles_Out) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Lerp_Yaw_Angles_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_PerlinNoise1D_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_PerlinNoise1D_Value_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_PerlinNoise1D_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Combined_Wind_Direction, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Combined_Wind_Direction::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Compress DLWE Snow
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Compress_DLWE_Snow final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Y_ImplicitCast;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Compress_DLWE_Snow");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow) == 0x0000B8, "Wrong size on Ultra_Dynamic_Weather_C_Compress_DLWE_Snow");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, Size) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_RandomFloatFromStream_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_FClamp_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Array_Add_ReturnValue_1) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_Lerp_B_ImplicitCast) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_MakeVector_Y_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_MakeVector_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Compress_DLWE_Snow, CallFunc_MakeVector_X_ImplicitCast) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Compress_DLWE_Snow::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.ConstructionScript_Function
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Weather_C_ConstructionScript_Function final
{
public:
	bool                                          Run_By_Counterpart_0;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewLocalVar_0;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_MakeBoxSphereBounds_ReturnValue;          // 0x0020(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_ConstructionScript_Function) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_ConstructionScript_Function");
static_assert(sizeof(Ultra_Dynamic_Weather_C_ConstructionScript_Function) == 0x000060, "Wrong size on Ultra_Dynamic_Weather_C_ConstructionScript_Function");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, Run_By_Counterpart_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::Run_By_Counterpart_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, NewLocalVar_0) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Not_PreBool_ReturnValue_2) == 0x000006, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_MakeBoxSphereBounds_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_MakeBoxSphereBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_BooleanAND_ReturnValue_1) == 0x000059, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_Not_PreBool_ReturnValue_3) == 0x00005A, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ConstructionScript_Function, CallFunc_BooleanAND_ReturnValue_2) == 0x00005B, "Member 'Ultra_Dynamic_Weather_C_ConstructionScript_Function::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Convert Temperature Scale
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Weather_C_Convert_Temperature_Scale final
{
public:
	double                                        Input;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          In_Scale;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          Out_Scale;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Relative_Degrees;                                  // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Snap;                                              // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Output;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_TemperatureType                          Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GridSnap_Float_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Convert_Temperature_Scale");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale) == 0x000070, "Wrong size on Ultra_Dynamic_Weather_C_Convert_Temperature_Scale");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Input) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Input' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, In_Scale) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::In_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Out_Scale) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Out_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Relative_Degrees) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Relative_Degrees' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Snap) == 0x00000B, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Snap' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Output) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, Temp_byte_Variable) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, K2Node_Select_Default) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_GridSnap_Float_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Convert_Temperature_Scale, CallFunc_SelectFloat_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Convert_Temperature_Scale::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Copy Weather State
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Copy_Weather_State final
{
public:
	class UUDS_Weather_Settings_C*                Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_Material_Effects;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Copy_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Copy_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Copy_Weather_State) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Copy_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Copy_Weather_State, Source) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Copy_Weather_State::Source' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Copy_Weather_State, Target) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Copy_Weather_State::Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Copy_Weather_State, Set_Material_Effects) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Copy_Weather_State::Set_Material_Effects' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Create Cloud Reference Array
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array final
{
public:
	int32                                         Pixel_Y;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Pixel_X;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Source_Render_Target;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0040(0x0008)(NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_ReadRenderTargetRawPixel_ReturnValue;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array) == 0x0000B8, "Wrong size on Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Pixel_Y) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Pixel_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Pixel_X) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Pixel_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Source_Render_Target) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Source_Render_Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Temp_int_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, K2Node_DynamicCast_AsTexture_2D) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, Temp_int_Variable_1) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_ReadRenderTargetRawPixel_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_ReadRenderTargetRawPixel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_R) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_G) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_B) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_BreakColor_A) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_MakeVector2D_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Create_Cloud_Reference_Array::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Create Current Local Weather State
// 0x0110 (0x0110 - 0x0000)
struct Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State final
{
public:
	class UUDS_Weather_Settings_C*                Target_State_Object;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Test_Location;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Above_Clouds;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Affecting_Local_Weather;                           // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Distance_from_Spline_Center;                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             Current_Volume;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Volume_Alpha;                              // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sample_Point_for_Current_Alpha_Alpha;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Min_and_Max_Temperature_Min;  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Min_and_Max_Temperature_Max;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Yaw_Angles_Out;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State) == 0x000110, "Wrong size on Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Target_State_Object) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Target_State_Object' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Test_Location) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Test_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Above_Clouds) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Above_Clouds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Affecting_Local_Weather) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Affecting_Local_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Distance_from_Spline_Center) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Distance_from_Spline_Center' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Current_Volume) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Current_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Current_Volume_Alpha) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Current_Volume_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_IsDedicatedServer_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Array_Get_Item) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Max_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Sample_Point_for_Current_Alpha_Alpha) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Sample_Point_for_Current_Alpha_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_BreakVector2D_X) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Get_Current_Min_and_Max_Temperature_Min) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Get_Current_Min_and_Max_Temperature_Min' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Get_Current_Min_and_Max_Temperature_Max) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Get_Current_Min_and_Max_Temperature_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Lerp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Lerp_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_MakeVector2D_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_BooleanAND_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B9, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000BA, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_BreakVector2D_X_1) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_BreakVector2D_Y_1) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_FClamp_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Lerp_Yaw_Angles_Out) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Lerp_Yaw_Angles_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_SelectFloat_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_BooleanAND_ReturnValue_1) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000109, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State, CallFunc_Not_PreBool_ReturnValue) == 0x00010A, "Member 'Ultra_Dynamic_Weather_C_Create_Current_Local_Weather_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Create Weather State Objects
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Create_Weather_State_Objects final
{
public:
	class UUDS_Weather_Settings_C*                CallFunc_SpawnObject_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                CallFunc_SpawnObject_ReturnValue_1;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_SpawnObject_ReturnValue_2;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_SpawnObject_ReturnValue_3;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_SpawnObject_ReturnValue_4;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_SpawnObject_ReturnValue_5;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Create_Weather_State_Objects");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Create_Weather_State_Objects");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_SpawnObject_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_SpawnObject_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_SpawnObject_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_SpawnObject_ReturnValue_3) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_SpawnObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_IsValid_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_IsValid_ReturnValue_3) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_IsValid_ReturnValue_4) == 0x000032, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_SpawnObject_ReturnValue_4) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_SpawnObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_IsValid_ReturnValue_5) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Create_Weather_State_Objects, CallFunc_SpawnObject_ReturnValue_5) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Create_Weather_State_Objects::CallFunc_SpawnObject_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Dust Velocity
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Dust_Velocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Dust_Velocity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity) == 0x000090, "Wrong size on Ultra_Dynamic_Weather_C_Current_Dust_Velocity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, Velocity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_Wind_Rotation_Rot) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Dust_Velocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Current_Dust_Velocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Lightning Period and Status
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status final
{
public:
	double                                        Param_Lightning_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Period;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status) == 0x000058, "Wrong size on Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, Param_Lightning_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::Param_Lightning_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, Random) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::Random' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, Period) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, Enabled) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::Enabled' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_SafeDivide_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Current_Lightning_Period_and_Status::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Normalized Wind Direction
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction final
{
public:
	struct FVector                                Wind_Vector;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction, Wind_Vector) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction::Wind_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction, CallFunc_Wind_Rotation_Rot) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Normalized_Wind_Direction::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Rain Velocity
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Rain_Velocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Rain_Velocity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity) == 0x000090, "Wrong size on Ultra_Dynamic_Weather_C_Current_Rain_Velocity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, Velocity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_Wind_Rotation_Rot) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Rain_Velocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Current_Rain_Velocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Snow Velocity
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Snow_Velocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Snow_Velocity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity) == 0x0000B0, "Wrong size on Ultra_Dynamic_Weather_C_Current_Snow_Velocity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, Velocity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Wind_Rotation_Rot) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Snow_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Current_Snow_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Current Wind Debris Velocity
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, Velocity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_Wind_Rotation_Rot) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Current_Wind_Debris_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Currently Cloudy
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Weather_C_Currently_Cloudy final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Currently_Cloudy) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Currently_Cloudy");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Currently_Cloudy) == 0x000002, "Wrong size on Ultra_Dynamic_Weather_C_Currently_Cloudy");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Cloudy, Yes) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Currently_Cloudy::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Cloudy, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Currently_Cloudy::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Currently Dusty
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Weather_C_Currently_Dusty final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Currently_Dusty) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Currently_Dusty");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Currently_Dusty) == 0x000002, "Wrong size on Ultra_Dynamic_Weather_C_Currently_Dusty");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Dusty, Yes) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Currently_Dusty::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Dusty, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Currently_Dusty::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Currently Raining
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Weather_C_Currently_Raining final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Currently_Raining) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Currently_Raining");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Currently_Raining) == 0x000002, "Wrong size on Ultra_Dynamic_Weather_C_Currently_Raining");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Raining, Yes) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Currently_Raining::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Raining, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Currently_Raining::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Currently Snowing
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Weather_C_Currently_Snowing final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Currently_Snowing) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Currently_Snowing");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Currently_Snowing) == 0x000002, "Wrong size on Ultra_Dynamic_Weather_C_Currently_Snowing");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Snowing, Yes) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Currently_Snowing::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Currently_Snowing, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Currently_Snowing::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Destroy Close Thunder Component
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Destroy_Close_Thunder_Component final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Destroy_Close_Thunder_Component) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Destroy_Close_Thunder_Component");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Destroy_Close_Thunder_Component) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Destroy_Close_Thunder_Component");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Destroy_Close_Thunder_Component, Component) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Destroy_Close_Thunder_Component::Component' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Directional Wind Sound Volume And LPF
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF final
{
public:
	int32                                         Direction_Index;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Volume;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LPF;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Directional_Occlusion;                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF) == 0x000100, "Wrong size on Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, Direction_Index) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::Direction_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, Volume) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, LPF) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::LPF' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, Directional_Occlusion) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::Directional_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Array_Get_Item) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Lerp_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Wind_Rotation_Rot) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_GetForwardVector_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_MapRangeClamped_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, K2Node_MakeArray_Array) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Directional_Wind_Sound_Volume_And_LPF::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Distant Thunder Sound Volume
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume final
{
public:
	double                                        Int;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Sound_Global_Occlusion_Out;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume, Int) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume::Int' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume, CallFunc_Get_Sound_Global_Occlusion_Out) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume::CallFunc_Get_Sound_Global_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Distant_Thunder_Sound_Volume::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.DLWE Active Update
// 0x0003 (0x0003 - 0x0000)
struct Ultra_Dynamic_Weather_C_DLWE_Active_Update final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_DLWE_Active_Update) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_DLWE_Active_Update");
static_assert(sizeof(Ultra_Dynamic_Weather_C_DLWE_Active_Update) == 0x000003, "Wrong size on Ultra_Dynamic_Weather_C_DLWE_Active_Update");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Active_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_DLWE_Active_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Active_Update, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_DLWE_Active_Update::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Active_Update, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_DLWE_Active_Update::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.DLWE Compression Brush
// 0x0108 (0x0108 - 0x0000)
struct Ultra_Dynamic_Weather_C_DLWE_Compression_Brush final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Resolution;                                        // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spread;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Corner_Position;                                   // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Brush_Size;                                        // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DLWE_Render_Target_Area_Area;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DLWE_Render_Target_Area_Area_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DLWE_Render_Target_Area_Area_2;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_DLWE_Compression_Brush");
static_assert(sizeof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush) == 0x000108, "Wrong size on Ultra_Dynamic_Weather_C_DLWE_Compression_Brush");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, Size) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, Resolution) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::Resolution' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, Spread) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::Spread' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, Corner_Position) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::Corner_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, Brush_Size) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::Brush_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_DLWE_Render_Target_Area_Area) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_DLWE_Render_Target_Area_Area' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_DLWE_Render_Target_Area_Area_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_DLWE_Render_Target_Area_Area_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_DLWE_Render_Target_Area_Area_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_DLWE_Render_Target_Area_Area_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Compression_Brush, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_DLWE_Compression_Brush::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.DLWE Mode Changed__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_DLWE_Mode_Changed__DelegateSignature final
{
public:
	EUDS_DLWE_Mode                                New_Mode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_DLWE_Mode_Changed__DelegateSignature) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_DLWE_Mode_Changed__DelegateSignature");
static_assert(sizeof(Ultra_Dynamic_Weather_C_DLWE_Mode_Changed__DelegateSignature) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_DLWE_Mode_Changed__DelegateSignature");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Mode_Changed__DelegateSignature, New_Mode) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_DLWE_Mode_Changed__DelegateSignature::New_Mode' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.DLWE Render Target Area
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area final
{
public:
	double                                        Area;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area");
static_assert(sizeof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area, Area) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area::Area' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area, Temp_byte_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area, K2Node_Select_Default) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Area::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.DLWE_Render Target Mapping
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping final
{
public:
	struct FLinearColor                           Mapping;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DLWE_Render_Target_Area_Area;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DLWE_Render_Target_Area_Area_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping");
static_assert(sizeof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping) == 0x000098, "Wrong size on Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, Mapping) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::Mapping' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_DLWE_Render_Target_Area_Area) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_DLWE_Render_Target_Area_Area' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_DLWE_Render_Target_Area_Area_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_DLWE_Render_Target_Area_Area_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_BreakVector_X) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_BreakVector_Y) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_BreakVector_Z) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_MakeColor_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_MakeColor_B_ImplicitCast) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_MakeColor_A_ImplicitCast) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_MakeColor_R_ImplicitCast) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping, CallFunc_MakeColor_G_ImplicitCast) == 0x000094, "Member 'Ultra_Dynamic_Weather_C_DLWE_Render_Target_Mapping::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Does DLWE Need Recentering
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering final
{
public:
	bool                                          Needs_X_Axis_Recenter;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Needs_Y_Axis_Recenter;                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DLWE_Render_Target_Area_Area;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DLWE_Render_Target_Area_Area_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering) == 0x0000A8, "Wrong size on Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, Needs_X_Axis_Recenter) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::Needs_X_Axis_Recenter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, Needs_Y_Axis_Recenter) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::Needs_Y_Axis_Recenter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_DLWE_Render_Target_Area_Area) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_DLWE_Render_Target_Area_Area' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_DLWE_Render_Target_Area_Area_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_DLWE_Render_Target_Area_Area_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_BreakVector_X) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_BreakVector_Y) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_BreakVector_Z) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_Abs_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_BreakVector_X_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_BreakVector_Y_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_BreakVector_Z_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_Abs_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Does_DLWE_Need_Recentering::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Draw Weather Mask Brush Target
// 0x0480 (0x0480 - 0x0000)
struct Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target final
{
public:
	bool                                          Use_Editor_Location;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Lowest_Brush_Height;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Index;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            Mask_Components;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<double>                                Brush_Heights;                                     // 0x0028(0x0010)(Edit, BlueprintVisible)
	class UWeather_Mask_Projection_Box_Component_C* Current_Projection_Box;                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWeather_Mask_Projection_Box_Component_C*> Projection_Box_Components;                         // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UWeather_Mask_Brush_Component_C*> Brush_Components;                                  // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FDrawToRenderTargetContext             Draw_Context;                                      // 0x0060(0x0008)(Edit, BlueprintVisible, NoDestructor)
	class UCanvas*                                Draw_Canvas;                                       // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_1;       // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWeather_Mask_Projection_Box_Component_C* K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component; // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeather_Mask_Brush_Component_C*        K2Node_DynamicCast_AsWeather_Mask_Brush_Component; // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeather_Mask_Projection_Box_Component_C* CallFunc_Array_Get_Item_2;                         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x01B0(0x0010)(ConstParm, ReferenceParm)
	class UWeather_Mask_Brush_Component_C*        CallFunc_Array_Get_Item_3;                         // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeather_Mask_Brush_Component_C*        CallFunc_Array_Get_Item_4;                         // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0218(0x0010)(ConstParm, ReferenceParm)
	TArray<class UPrimitiveComponent*>            CallFunc_BoxOverlapComponents_OutComponents;       // 0x0228(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxOverlapComponents_ReturnValue;         // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeather_Mask_Projection_Box_Component_C* CallFunc_Array_Get_Item_5;                         // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeather_Mask_Projection_Box_Component_C* CallFunc_Array_Get_Item_6;                         // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_2;       // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_3;       // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_4;       // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_2;  // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_3;  // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_5;       // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_3;                          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0380(0x0008)(NoDestructor)
	struct FVector                                CallFunc_Get_Weather_Mask_Target_Root_Location_ReturnValue; // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_6;       // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_4;  // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue_7;       // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0400(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_5;  // 0x0420(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DrawMaterial_Rotation_ImplicitCast;    // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x0438(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast;  // 0x0450(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_K2_DrawMaterial_Rotation_ImplicitCast_1;  // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DrawTexture_Rotation_ImplicitCast;     // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DrawTexture_Rotation_ImplicitCast_1;   // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target) == 0x000480, "Wrong size on Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Use_Editor_Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Use_Editor_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Lowest_Brush_Height) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Lowest_Brush_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Current_Index) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Current_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Mask_Components) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Mask_Components' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Brush_Heights) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Brush_Heights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Current_Projection_Box) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Current_Projection_Box' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Projection_Box_Components) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Projection_Box_Components' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Brush_Components) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Brush_Components' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Draw_Context) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Draw_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Draw_Canvas) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Draw_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Array_Index_Variable) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Array_Index_Variable_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Array_Index_Variable_3) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_IsDedicatedServer_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Divide_Vector2DFloat_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Divide_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Loop_Counter_Variable_2) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Loop_Counter_Variable_3) == 0x0000D4, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x0000DC, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MinOfFloatArray_MinValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_LastIndex_ReturnValue) == 0x0000E4, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Loop_Counter_Variable_4) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x0000FC, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MaxOfFloatArray_MaxValue) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Get_Item) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, K2Node_DynamicCast_AsWeather_Mask_Brush_Component) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::K2Node_DynamicCast_AsWeather_Mask_Brush_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Length_ReturnValue_1) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Less_IntInt_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_X) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_Y) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_Z) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Add_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Length_ReturnValue_2) == 0x00017C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_RemoveItem_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Get_Item_2) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Length_ReturnValue_3) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Less_IntInt_ReturnValue_2) == 0x000194, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MakeVector_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_object_Variable) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Get_Item_3) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Length_ReturnValue_4) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001CC, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_X_1) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_Y_1) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_Z_1) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Get_Item_4) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Length_ReturnValue_5) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Less_IntInt_ReturnValue_4) == 0x00020C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Add_ReturnValue_1) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Add_ReturnValue_2) == 0x000214, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, K2Node_MakeArray_Array) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BoxOverlapComponents_OutComponents) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BoxOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BoxOverlapComponents_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BoxOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Variable) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Add_IntInt_ReturnValue_5) == 0x000254, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Get_Item_5) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Less_IntInt_ReturnValue_5) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Variable_1) == 0x000264, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MakeVector2D_ReturnValue) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Add_IntInt_ReturnValue_6) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, Temp_int_Array_Index_Variable_4) == 0x00028C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Array_Get_Item_6) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_X_2) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_Y_2) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_Z_2) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Divide_Vector2DFloat_ReturnValue_2) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Divide_Vector2DFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MakeColor_ReturnValue) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Divide_Vector2DFloat_ReturnValue_3) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Divide_Vector2DFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Divide_Vector2DFloat_ReturnValue_4) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Divide_Vector2DFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue_2) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue_3) == 0x000328, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Divide_Vector2DFloat_ReturnValue_5) == 0x000338, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Divide_Vector2DFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_IsValid_ReturnValue) == 0x000348, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_X_3) == 0x000350, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_Y_3) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector_Z_3) == 0x000360, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000368, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000370, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000380, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Get_Weather_Mask_Target_Root_Location_ReturnValue) == 0x000388, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Get_Weather_Mask_Target_Root_Location_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_IsValid_ReturnValue_1) == 0x0003A0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Divide_Vector2DFloat_ReturnValue_6) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Divide_Vector2DFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue_4) == 0x0003B8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Divide_Vector2DFloat_ReturnValue_7) == 0x0003C8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Divide_Vector2DFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0003D8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0003E0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector2D_X) == 0x0003E8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_BreakVector2D_Y) == 0x0003F0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0003F8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, K2Node_MakeStruct_LinearColor) == 0x000400, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MakeVector2D_ReturnValue_1) == 0x000410, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue_5) == 0x000420, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_K2_DrawMaterial_Rotation_ImplicitCast) == 0x000430, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_K2_DrawMaterial_Rotation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x000438, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000448, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast) == 0x000450, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_K2_DrawMaterial_Rotation_ImplicitCast_1) == 0x000460, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_K2_DrawMaterial_Rotation_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_K2_DrawTexture_Rotation_ImplicitCast) == 0x000464, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_K2_DrawTexture_Rotation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_K2_DrawTexture_Rotation_ImplicitCast_1) == 0x000468, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_K2_DrawTexture_Rotation_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, CallFunc_MakeColor_B_ImplicitCast) == 0x00046C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, K2Node_MakeStruct_B_ImplicitCast) == 0x000470, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, K2Node_MakeStruct_A_ImplicitCast) == 0x000474, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, K2Node_MakeStruct_R_ImplicitCast) == 0x000478, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target, K2Node_MakeStruct_G_ImplicitCast) == 0x00047C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Mask_Brush_Target::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Draw Weather Override Volume Target
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target final
{
public:
	class UCanvas*                                Render_Canvas;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AWeather_Override_Volume_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0068(0x0010)(ReferenceParm)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item_2;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D_1;   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x00C0(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target) == 0x0000D0, "Wrong size on Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, Render_Canvas) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::Render_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, Temp_int_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, Temp_int_Variable_1) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_GetAllActorsOfClass_OutActors) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Array_Get_Item_2) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Max_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, K2Node_DynamicCast_AsTexture_Render_Target_2D_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::K2Node_DynamicCast_AsTexture_Render_Target_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Draw_Weather_Override_Volume_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Dust Spawn Rate
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Dust_Spawn_Rate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Dust_Spawn_Rate");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Dust_Spawn_Rate");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Dust_Spawn_Rate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Dust_Spawn_Rate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Dust_Spawn_Rate::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Dust_Spawn_Rate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Spawn_Rate, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Dust_Spawn_Rate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Dust Sprite Alpha
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Dust_Sprite_Alpha::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.ExecuteUbergraph_Ultra_Dynamic_Weather
// 0x0610 (0x0610 - 0x0000)
struct Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_CustomEvent_New_Weather_Type;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time_To_Transition_To_New_Weather__Seconds_; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time_to_Transition_to_Random_Weather__Seconds_; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Cloud_Coverage;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Fog;                                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Dust;                                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_and_UDW_State                     K2Node_Event_State;                                // 0x0098(0x0160)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B[0x1];                                      // 0x020B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x0218(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Angle_2;                        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Use_Custom_Lightning_Location;  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Custom_Lightning_Location;      // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Custom_Target_Location;         // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             K2Node_CustomEvent_Volume;                         // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Angle_1;                        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lightning_Distance_Range_Range;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lightning_Distance_Range_Range_1;         // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Close_Thunder_Sound_Delay_Delay;          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Lightning_Period_and_Status_Period; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Current_Lightning_Period_and_Status_Enabled; // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Angle;                          // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Lightning_Flash_Location_Loc;             // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0xF];                                      // 0x0321(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0330(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClose_Thunder_Audio_Player_C*          CallFunc_AddComponent_ReturnValue;                 // 0x0390(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Event_Component;                            // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Lightning_Bolt_Target_Offset_Out;         // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x03B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x03C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0450(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Sky_C*                   K2Node_Event_UDS;                                  // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomWeatherVariation_State          CallFunc_Map_Find_Value;                           // 0x0568(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             K2Node_DynamicCast_AsWeather_Override_Volume;      // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x6];                                      // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x05A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x05B0(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CC[0x4];                                      // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUDW_Startup_Interface_C> K2Node_DynamicCast_AsUDW_Startup_Interface;        // 0x05D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E2[0x6];                                      // 0x05E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue_1;     // 0x05E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast; // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast; // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Lightning_Flash_Length_ImplicitCast; // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather) == 0x000610, "Wrong size on Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, EntryPoint) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_EndPlayReason) == 0x000039, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_SwitchEnum_CmpSuccess) == 0x00003A, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_New_Weather_Type) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_New_Weather_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Time_To_Transition_To_New_Weather__Seconds_) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Time_To_Transition_To_New_Weather__Seconds_' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Time_to_Transition_to_Random_Weather__Seconds_) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Time_to_Transition_to_Random_Weather__Seconds_' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_HasAuthority_ReturnValue) == 0x000061, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000062, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_Cloud_Coverage) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_Cloud_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_Fog) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_Fog' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_Dust) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_Dust' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MapRangeClamped_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_State) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Variable_1) == 0x0001FC, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BooleanOR_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_IntInt_ReturnValue_2) == 0x000204, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_1) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x000209, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BooleanOR_ReturnValue_1) == 0x00020A, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x00020C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BooleanAND_ReturnValue) == 0x000211, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_HasAuthority_ReturnValue_1) == 0x000212, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_2) == 0x000213, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_3) == 0x000214, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Map_Keys_Keys) == 0x000218, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Length_ReturnValue_1) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Less_IntInt_ReturnValue_1) == 0x00022C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Angle_2) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Angle_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Use_Custom_Lightning_Location) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Use_Custom_Lightning_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Custom_Lightning_Location) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Custom_Lightning_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Custom_Target_Location) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Custom_Target_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_4) == 0x000278, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Volume) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Angle_1) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Angle_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BooleanAND_ReturnValue_1) == 0x000299, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Lightning_Distance_Range_Range) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Lightning_Distance_Range_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsDedicatedServer_ReturnValue) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_FClamp_ReturnValue) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Not_PreBool_ReturnValue) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Lightning_Distance_Range_Range_1) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Lightning_Distance_Range_Range_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Close_Thunder_Sound_Delay_Delay) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Close_Thunder_Sound_Delay_Delay' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Lerp_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Current_Lightning_Period_and_Status_Period) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Current_Lightning_Period_and_Status_Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Current_Lightning_Period_and_Status_Enabled) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Current_Lightning_Period_and_Status_Enabled' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CustomEvent_Angle) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CustomEvent_Angle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Lightning_Flash_Location_Loc) == 0x000300, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Lightning_Flash_Location_Loc' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_5) == 0x000320, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_MakeTransform_ReturnValue) == 0x000330, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_AddComponent_ReturnValue) == 0x000390, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_Component) == 0x000398, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Lightning_Bolt_Target_Offset_Out) == 0x0003A0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Lightning_Bolt_Target_Offset_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_CreateDelegate_OutputDelegate) == 0x0003B8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0003C8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetForwardVector_ReturnValue) == 0x0003D0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0003E8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BreakVector_X) == 0x000400, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BreakVector_Y) == 0x000408, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_BreakVector_Z) == 0x000410, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Add_VectorVector_ReturnValue) == 0x000418, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000430, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_FindLookAtRotation_ReturnValue) == 0x000438, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000450, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000538, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00053C, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_DeltaSeconds) == 0x000540, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_Event_UDS) == 0x000548, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_Event_UDS' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Not_PreBool_ReturnValue_2) == 0x000550, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, Temp_int_Array_Index_Variable) == 0x000554, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Get_Item_1) == 0x000558, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_6) == 0x000560, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Map_Find_Value) == 0x000568, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Map_Find_ReturnValue) == 0x000588, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_AsWeather_Override_Volume) == 0x000590, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_AsWeather_Override_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_bSuccess_1) == 0x000598, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000599, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x0005A0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_IsValid_ReturnValue_7) == 0x0005A8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_GetAllActorsWithInterface_OutActors) == 0x0005B0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Get_Item_2) == 0x0005C0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Array_Length_ReturnValue_2) == 0x0005C8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_AsUDW_Startup_Interface) == 0x0005D0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_AsUDW_Startup_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_DynamicCast_bSuccess_2) == 0x0005E0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Less_IntInt_ReturnValue_2) == 0x0005E1, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetTimerForNextTick_ReturnValue_1) == 0x0005E8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetTimerForNextTick_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0005F0, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0005F8, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x0005FC, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast) == 0x000600, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast) == 0x000604, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather, K2Node_VariableSet_Lightning_Flash_Length_ImplicitCast) == 0x000608, "Member 'Ultra_Dynamic_Weather_C_ExecuteUbergraph_Ultra_Dynamic_Weather::K2Node_VariableSet_Lightning_Flash_Length_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Extract Values from Weather State
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State final
{
public:
	class UUDS_Weather_Settings_C*                State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Coverage_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Fog_0;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Dust_0;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rain_0;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_0;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Intensity_0;                                  // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Lightning_0;                                 // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Snow;                                     // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Wetness_0;                                // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Dust;                                     // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State) == 0x000058, "Wrong size on Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, Cloud_Coverage_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, Param_Fog_0) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::Param_Fog_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, Param_Dust_0) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::Param_Dust_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, Rain_0) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::Rain_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, Snow_0) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::Snow_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, Wind_Intensity_0) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::Wind_Intensity_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, Param_Lightning_0) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::Param_Lightning_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, Material_Snow) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::Material_Snow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, Material_Wetness_0) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::Material_Wetness_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State, Material_Dust) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Extract_Values_from_Weather_State::Material_Dust' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Fade DLWE Target Over Time
// 0x00F0 (0x00F0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time final
{
public:
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0018(0x0008)(NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1;   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size_1;     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context_1;  // 0x0090(0x0008)(NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D_1;   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas_2;   // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size_2;     // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context_2;  // 0x00E0(0x0008)(NoDestructor)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time) == 0x0000F0, "Wrong size on Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MakeColor_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_FMax_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_K2_SetTimer_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, K2Node_SwitchEnum_CmpSuccess) == 0x000071, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Size_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Size_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Context_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Context_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MapRangeClamped_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_K2_SetTimer_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, K2Node_DynamicCast_AsTexture_Render_Target_2D_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::K2Node_DynamicCast_AsTexture_Render_Target_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Canvas_2) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Canvas_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Size_2) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Size_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_BeginDrawCanvasToRenderTarget_Context_2) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_BeginDrawCanvasToRenderTarget_Context_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_MakeColor_B_ImplicitCast) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0000EC, "Member 'Ultra_Dynamic_Weather_C_Fade_DLWE_Target_Over_Time::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Filter Probability Map
// 0x01C0 (0x01C0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Filter_Probability_Map final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Probability_Map;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UUDS_Weather_Settings_C*                Current_Random_Type;                               // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  Filtered_Probability_Map;                          // 0x0058(0x0050)(Parm, OutParm)
	TMap<class UUDS_Weather_Settings_C*, double>  Map;                                               // 0x00A8(0x0050)(Edit, BlueprintVisible)
	TArray<class UUDS_Weather_Settings_C*>        Weather_Types_to_Filter;                           // 0x00F8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0120(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys_1;                          // 0x0158(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_1;                         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_2;                         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Filter_Probability_Map) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Filter_Probability_Map");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Filter_Probability_Map) == 0x0001C0, "Wrong size on Ultra_Dynamic_Weather_C_Filter_Probability_Map");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Probability_Map) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Probability_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Current_Random_Type) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Current_Random_Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Filtered_Probability_Map) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Filtered_Probability_Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Map) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Map' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Weather_Types_to_Filter) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Weather_Types_to_Filter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Array_Index_Variable) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Loop_Counter_Variable) == 0x00010C, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Array_Index_Variable_1) == 0x000114, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Array_Index_Variable_2) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00011C, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00011D, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Map_Keys_Keys) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Loop_Counter_Variable_1) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Get_Item) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000144, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000145, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_BooleanAND_ReturnValue) == 0x000146, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_BooleanAND_ReturnValue_1) == 0x000147, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Add_IntInt_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_BooleanOR_ReturnValue) == 0x00014C, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, Temp_int_Loop_Counter_Variable_2) == 0x000154, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Map_Keys_Keys_1) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Length_ReturnValue_1) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Add_IntInt_ReturnValue_2) == 0x00017C, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Less_IntInt_ReturnValue_1) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Abs_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Get_Item_2) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Map_Remove_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Length_ReturnValue_2) == 0x0001AC, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_AddUnique_ReturnValue) == 0x0001B4, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Probability_Map, CallFunc_Array_Add_ReturnValue_1) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Filter_Probability_Map::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Filter Weather Override Volumes Array
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array) == 0x000070, "Wrong size on Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Array_Get_Item) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Vector_Distance2D_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Filter_Weather_Override_Volumes_Array::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Flash Lightning
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Flash_Lightning final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Custom_Lightning_Location_0;                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Custom_Lightning_Location_0;                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Custom_Target_Location;                            // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Flash_Lightning) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Flash_Lightning");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Flash_Lightning) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Flash_Lightning");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Angle) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Angle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Use_Custom_Lightning_Location_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Use_Custom_Lightning_Location_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Custom_Lightning_Location_0) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Custom_Lightning_Location_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Flash_Lightning, Custom_Target_Location) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Flash_Lightning::Custom_Target_Location' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Fog Vertical Velocity
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Fog_Vertical_Velocity::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Client Starting Material State
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Client_Starting_Material_State final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Client_Starting_Material_State) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Client_Starting_Material_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Client_Starting_Material_State) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Get_Client_Starting_Material_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Client_Starting_Material_State, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Client_Starting_Material_State::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Close Thunder Sound Occlusion
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion final
{
public:
	double                                        Volume;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LPF;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Sound_Global_Occlusion_Out;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion, Volume) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion::Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion, LPF) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion::LPF' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion, CallFunc_Get_Sound_Global_Occlusion_Out) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion::CallFunc_Get_Sound_Global_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Close_Thunder_Sound_Occlusion::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Control Point Location
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Control_Point_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Control_Point_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Control_Point_Location");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Control_Point_Location) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Get_Control_Point_Location");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Control_Point_Location, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Control_Point_Location::Location' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Current Min and Max Temperature
// 0x00E0 (0x00E0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature final
{
public:
	struct FVector2D                              Summer_Min_and_Max;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Autumn_Min_and_Max;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Winter_Min_and_Max;                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Spring_Min_and_Max;                                // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min;                                               // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max;                                               // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Temperature;                                   // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min_Temperature;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      Seasons_Min_and_Max_Values;                        // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector2D>                      K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature) == 0x0000E0, "Wrong size on Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Summer_Min_and_Max) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Summer_Min_and_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Autumn_Min_and_Max) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Autumn_Min_and_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Winter_Min_and_Max) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Winter_Min_and_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Spring_Min_and_Max) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Spring_Min_and_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Min) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Min' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Max) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Max_Temperature) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Max_Temperature' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Min_Temperature) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Min_Temperature' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Seasons_Min_and_Max_Values) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Seasons_Min_and_Max_Values' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, K2Node_MakeArray_Array) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Temp_int_Array_Index_Variable) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_Array_Get_Item) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Min_and_Max_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C. Pawn Locations
// 0x0168 (0x0168 - 0x0000)
struct Ultra_Dynamic_Weather_C__Pawn_Locations final
{
public:
	double                                        CallFunc_BreakVector_X;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0020(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C__Pawn_Locations) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C__Pawn_Locations");
static_assert(sizeof(Ultra_Dynamic_Weather_C__Pawn_Locations) == 0x000168, "Wrong size on Ultra_Dynamic_Weather_C__Pawn_Locations");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_BreakVector_X) == 0x000000, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_BreakVector_Y) == 0x000008, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_BreakVector_Z) == 0x000010, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000020, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, K2Node_SwitchEnum_CmpSuccess) == 0x000109, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_Vector_Distance_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000121, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000122, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_GetCameraLocation_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_GetPlayerPawn_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_IsDedicatedServer_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_IsValid_ReturnValue_1) == 0x000149, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_Not_PreBool_ReturnValue) == 0x00014A, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_BooleanAND_ReturnValue) == 0x00014B, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Pawn_Locations, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Weather_C__Pawn_Locations::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Current Temperature
// 0x01E8 (0x01E8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Current_Temperature final
{
public:
	bool                                          Apply_Interior_Temperature;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                Custom_Weather_State_Object;                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Celsius;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fahrenheit;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Weather_State;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_7;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_8;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_9;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Interior_Temperature_with_Occlusion_Out; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output;         // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Convert_Temperature_Scale_Output_1;       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast;         // 0x01D8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Current_Temperature) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Current_Temperature");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Current_Temperature) == 0x0001E8, "Wrong size on Ultra_Dynamic_Weather_C_Get_Current_Temperature");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Apply_Interior_Temperature) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Apply_Interior_Temperature' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Custom_Weather_State_Object) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Custom_Weather_State_Object' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Celsius) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Celsius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Fahrenheit) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Fahrenheit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Weather_State) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Weather_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_BreakVector2D_X) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, Temp_bool_Variable) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, K2Node_Select_Default) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_4) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_PerlinNoise1D_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_5) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_6) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_GetForwardVector_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_BreakVector_X) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_BreakVector_Y) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_BreakVector_Z) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_7) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_8) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_FClamp_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_MapRangeClamped_ReturnValue_9) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_MapRangeClamped_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Apply_Interior_Temperature_with_Occlusion_Out) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Apply_Interior_Temperature_with_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_SelectFloat_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Convert_Temperature_Scale_Output) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Convert_Temperature_Scale_Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Convert_Temperature_Scale_Output_1) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Convert_Temperature_Scale_Output_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_PerlinNoise1D_Value_ImplicitCast) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_PerlinNoise1D_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Current_Temperature, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Get_Current_Temperature::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Display Name for Current Weather
// 0x00A0 (0x00A0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather final
{
public:
	class FString                                 As_String;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    As_Enumerator;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_2;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_3;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_4;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_5;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_6;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_7;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_8;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_9;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_10;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_11;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_12;                             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_13;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    Temp_byte_Variable_14;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_1;                           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_2;                           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_3;                           // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_4;                           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_5;                           // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_6;                           // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_7;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_2;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_8;                           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Weather_Display_Names                    K2Node_Select_Default_9;                           // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather) == 0x0000A0, "Wrong size on Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, As_String) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::As_String' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, As_Enumerator) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::As_Enumerator' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_int_Variable) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_2) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_3) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_4) == 0x00001B, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_bool_Variable) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_5) == 0x00001D, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_bool_Variable_1) == 0x00001E, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_6) == 0x00001F, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_7) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_bool_Variable_2) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_bool_Variable_3) == 0x000022, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_bool_Variable_4) == 0x000023, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_8) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_9) == 0x000025, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_int_Variable_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_10) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_11) == 0x00002D, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_bool_Variable_5) == 0x00002E, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_12) == 0x00002F, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_int_Variable_2) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_13) == 0x000035, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000036, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default) == 0x000037, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_byte_Variable_14) == 0x000039, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Round_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Clamp_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_1) == 0x000051, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_2) == 0x000052, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_3) == 0x000053, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000054, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_FFloor_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_4) == 0x000064, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Clamp_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, Temp_bool_Variable_6) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_5) == 0x00006D, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_6) == 0x00006E, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x00006F, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_7) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_FFloor_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Clamp_ReturnValue_2) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Clamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_8) == 0x000089, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, K2Node_Select_Default_9) == 0x00008A, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Get_Display_Name_for_Current_Weather::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Intended Cloud Direction
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction final
{
public:
	double                                        Intended_Cloud_Direction_0;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction, Intended_Cloud_Direction_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Direction::Intended_Cloud_Direction_0' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Intended Cloud Wind Speed
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Wind_Speed final
{
public:
	double                                        Intended_Cloud_Wind_Speed_0;                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Wind_Speed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Wind_Speed");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Wind_Speed) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Wind_Speed");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Wind_Speed, Intended_Cloud_Wind_Speed_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Intended_Cloud_Wind_Speed::Intended_Cloud_Wind_Speed_0' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Intended Water Level
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Intended_Water_Level final
{
public:
	bool                                          Using_Water_Level;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Water_Level_0;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Intended_Water_Level) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Intended_Water_Level");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Intended_Water_Level) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Get_Intended_Water_Level");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Intended_Water_Level, Using_Water_Level) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Intended_Water_Level::Using_Water_Level' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Intended_Water_Level, Water_Level_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Intended_Water_Level::Water_Level_0' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Local Weather State Values
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values final
{
public:
	double                                        Cloud_Coverage_0;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Intensity_0;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rain_0;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_0;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Dust_0;                                      // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Fog_0;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Lightning_0;                                 // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Cloud_Coverage_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Wind_Intensity_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Wind_Intensity_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Rain_0) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Rain_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Snow_0) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Snow_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Param_Dust_0) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Param_Dust_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Param_Fog_0) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Param_Fog_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values, Param_Lightning_0) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Local_Weather_State_Values::Param_Lightning_0' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Sound Directional Occlusion
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion final
{
public:
	TArray<double>                                Out;                                               // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TArray<double>                                K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm)
	TArray<double>                                K2Node_Select_Default;                             // 0x0038(0x0010)(ReferenceParm)
	double                                        K2Node_MakeArray__0__ImplicitCast;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeArray__1__ImplicitCast;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeArray__2__ImplicitCast;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MakeArray__3__ImplicitCast;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion) == 0x000068, "Wrong size on Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, Temp_bool_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray_Array_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_Select_Default) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray__0__ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray__0__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray__1__ImplicitCast) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray__1__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray__2__ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray__2__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion, K2Node_MakeArray__3__ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Directional_Occlusion::K2Node_MakeArray__3__ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Sound Global Occlusion
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Global_Occlusion::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Sound Upward Occlusion
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Sound_Upward_Occlusion::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Starting Weather Override Volumes
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AWeather_Override_Volume_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes, CallFunc_Array_Get_Item) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Get_Starting_Weather_Override_Volumes::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get State for Saving
// 0x0340 (0x0340 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_State_for_Saving final
{
public:
	struct FUDS_and_UDW_State                     UDW_State;                                         // 0x0000(0x0160)(Parm, OutParm, HasGetValueTypeHash)
	struct FUDS_and_UDW_State                     State;                                             // 0x0160(0x0160)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AWeather_Override_Volume_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x02D0(0x0010)(ReferenceParm)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomWeatherVariation_State          CallFunc_Get_State_for_Saving_State;               // 0x02F0(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Get_State_for_Saving_Volume;              // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRandomWeatherVariation_State          CallFunc_Get_State_for_Saving_State_1;             // 0x0318(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Get_State_for_Saving_Volume_1;            // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_State_for_Saving) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_State_for_Saving");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_State_for_Saving) == 0x000340, "Wrong size on Ultra_Dynamic_Weather_C_Get_State_for_Saving");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, UDW_State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::UDW_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, State) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, Temp_int_Array_Index_Variable) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, Temp_int_Loop_Counter_Variable) == 0x0002C4, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, CallFunc_Add_IntInt_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, CallFunc_GetAllActorsOfClass_OutActors) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, CallFunc_Array_Get_Item) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, CallFunc_Array_Length_ReturnValue) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, CallFunc_Less_IntInt_ReturnValue) == 0x0002EC, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, CallFunc_Get_State_for_Saving_State) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::CallFunc_Get_State_for_Saving_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, CallFunc_Get_State_for_Saving_Volume) == 0x000310, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::CallFunc_Get_State_for_Saving_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, CallFunc_Get_State_for_Saving_State_1) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::CallFunc_Get_State_for_Saving_State_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_State_for_Saving, CallFunc_Get_State_for_Saving_Volume_1) == 0x000338, "Member 'Ultra_Dynamic_Weather_C_Get_State_for_Saving::CallFunc_Get_State_for_Saving_Volume_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get UDS Reference
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_UDS_Reference final
{
public:
	class AUltra_Dynamic_Sky_C*                   CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_UDS_Reference) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_UDS_Reference");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_UDS_Reference) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Get_UDS_Reference");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Reference, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Reference::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_UDS_Reference, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_UDS_Reference::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Weather Mask Target Root Location
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location final
{
public:
	bool                                          Use_Editor_Location;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_SnappedToGrid_ReturnValue;         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location, Use_Editor_Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location::Use_Editor_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location, ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location, CallFunc_SelectVector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location, CallFunc_Vector_SnappedToGrid_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location::CallFunc_Vector_SnappedToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location, CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Mask_Target_Root_Location::CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Get Weather Particle Collision Channel
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Get_Weather_Particle_Collision_Channel final
{
public:
	ECollisionChannel                             Channel;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Get_Weather_Particle_Collision_Channel) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Get_Weather_Particle_Collision_Channel");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Get_Weather_Particle_Collision_Channel) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Get_Weather_Particle_Collision_Channel");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Get_Weather_Particle_Collision_Channel, Channel) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Get_Weather_Particle_Collision_Channel::Channel' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Global Lightning Internal
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Global_Lightning_Internal final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Global_Lightning_Internal) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Global_Lightning_Internal");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Global_Lightning_Internal) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Global_Lightning_Internal");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Global_Lightning_Internal, Angle) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Global_Lightning_Internal::Angle' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Global Sound LPF
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Global_Sound_LPF final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Sound_Global_Occlusion_Out;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Global_Sound_LPF) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Global_Sound_LPF");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Global_Sound_LPF) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Global_Sound_LPF");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Global_Sound_LPF, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Global_Sound_LPF::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Global_Sound_LPF, CallFunc_Get_Sound_Global_Occlusion_Out) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Global_Sound_LPF::CallFunc_Get_Sound_Global_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Global_Sound_LPF, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Global_Sound_LPF::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Increment Global Material Effects
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects final
{
public:
	double                                        Dust_Delta;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wetness_Delta;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, Dust_Delta) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::Dust_Delta' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, Wetness_Delta) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::Wetness_Delta' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_HasAuthority_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_FClamp_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects, CallFunc_FClamp_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Increment_Global_Material_Effects::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Increment Transition Between States
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Increment_Transition_Between_States final
{
public:
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Increment_Transition_Between_States");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Increment_Transition_Between_States");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_SafeDivide_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_Ease_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Increment_Transition_Between_States, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Increment_Transition_Between_States::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Initialize Occlusion
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Weather_C_Initialize_Occlusion final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Initialize_Occlusion) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_Initialize_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Initialize_Occlusion) == 0x000014, "Wrong size on Ultra_Dynamic_Weather_C_Initialize_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Occlusion, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Initialize_Occlusion::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Occlusion, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Initialize_Occlusion::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Occlusion, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Initialize_Occlusion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Initialize Random Weather Variation
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation, K2Node_Select_Default) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Initialize_Random_Weather_Variation::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Initialize Weather
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Weather_C_Initialize_Weather final
{
public:
	class AUltra_Dynamic_Sky_C*                   UDS;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Initialize_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Initialize_Weather");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Initialize_Weather) == 0x000008, "Wrong size on Ultra_Dynamic_Weather_C_Initialize_Weather");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather, UDS) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather::UDS' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Initialize Weather Override Volume Target
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D_1;   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_Not_PreBool_ReturnValue_1) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001B, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_IsDedicatedServer_ReturnValue) == 0x00002A, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_Not_PreBool_ReturnValue_3) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, K2Node_DynamicCast_AsTexture_Render_Target_2D_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::K2Node_DynamicCast_AsTexture_Render_Target_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_BooleanAND_ReturnValue_1) == 0x00004A, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target, CallFunc_BooleanAND_ReturnValue_2) == 0x00004B, "Member 'Ultra_Dynamic_Weather_C_Initialize_Weather_Override_Volume_Target::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Invalidate VHFM Level
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level final
{
public:
	double                                        Threshold;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Buffer;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current;                                           // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Continue;                                          // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Invalidated;                                       // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_GetAbs_ReturnValue;                // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxElement_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_MakeBoxSphereBounds_ReturnValue;          // 0x0080(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level) == 0x0000C0, "Wrong size on Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Threshold) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Threshold' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Distance) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Distance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Buffer) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Buffer' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Current) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Continue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Continue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, Invalidated) == 0x000041, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::Invalidated' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_Vector_GetAbs_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_Vector_GetAbs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_GetMaxElement_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_MakeBoxSphereBounds_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_MakeBoxSphereBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level, CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast) == 0x0000BC, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_Level::CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Invalidate VHFM With Material States
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States final
{
public:
	struct FVector                                Current_State;                                     // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Invalidate_VHFM_Level_Continue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Invalidate_VHFM_Level_Continue_1;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Invalidate_VHFM_Level_Continue_2;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, Current_State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::Current_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, CallFunc_Invalidate_VHFM_Level_Continue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::CallFunc_Invalidate_VHFM_Level_Continue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, CallFunc_Invalidate_VHFM_Level_Continue_1) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::CallFunc_Invalidate_VHFM_Level_Continue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, CallFunc_Invalidate_VHFM_Level_Continue_2) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::CallFunc_Invalidate_VHFM_Level_Continue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Invalidate_VHFM_With_Material_States::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Is Point in DLWE Space
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Yes;                                               // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DLWE_Render_Target_Area_Area;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPointInBox_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space) == 0x000070, "Wrong size on Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, Point) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::Point' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, Yes) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, Temp_byte_Variable) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, Temp_real_Variable) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, CallFunc_DLWE_Render_Target_Area_Area) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::CallFunc_DLWE_Render_Target_Area_Area' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, K2Node_Select_Default) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space, CallFunc_IsPointInBox_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Is_Point_in_DLWE_Space::CallFunc_IsPointInBox_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lerp Between Weather States
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States final
{
public:
	class UUDS_Weather_Settings_C*                A;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                B;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Target_State;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Set_Material_Effects;                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Bias_for_Material_Effects;                     // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Biased_Alpha;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue_1;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_7;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_8;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_9;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_10;                      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States) == 0x000100, "Wrong size on Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, A) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, B) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Alpha) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Target_State) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Target_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Set_Material_Effects) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Set_Material_Effects' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Use_Bias_for_Material_Effects) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Use_Bias_for_Material_Effects' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, Biased_Alpha) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::Biased_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_SelectFloat_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_FMax_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Ease_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Ease_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_SelectFloat_ReturnValue_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_3) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_4) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_5) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_6) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_7) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_SelectFloat_ReturnValue_3) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_8) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_9) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States, CallFunc_Lerp_ReturnValue_10) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Lerp_Between_Weather_States::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lerp Yaw Angles
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles final
{
public:
	double                                        Angle_A;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle_B;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, Angle_A) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::Angle_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, Angle_B) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::Angle_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, Alpha) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, Out) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000039, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Lerp_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles, CallFunc_SelectFloat_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Lerp_Yaw_Angles::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lightning Bolt Target Offset
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset final
{
public:
	struct FVector                                Out;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset) == 0x000098, "Wrong size on Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset, CallFunc_SelectVector_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Lightning_Bolt_Target_Offset::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lightning Distance Range
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lightning_Distance_Range final
{
public:
	double                                        Range;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lightning_Distance_Range");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Lightning_Distance_Range");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range, Range) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lightning_Distance_Range::Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lightning_Distance_Range::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Lightning_Distance_Range::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Distance_Range, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Lightning_Distance_Range::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lightning Flash Location
// 0x0170 (0x0170 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lightning_Flash_Location final
{
public:
	struct FVector                                Loc;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Tested_Location;                           // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Valid_Location;                                    // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lightning_World_Height_Height;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast; // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast; // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_1; // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_1; // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lightning_Flash_Location");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location) == 0x000170, "Wrong size on Ultra_Dynamic_Weather_C_Lightning_Flash_Location");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Loc) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Loc' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Current_Tested_Location) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Current_Tested_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Valid_Location) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Valid_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Temp_bool_Variable) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, Temp_int_Variable) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Lightning_World_Height_Height) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Lightning_World_Height_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_GetCameraRotation_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_BreakRotator_Roll) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_BreakRotator_Pitch) == 0x0000DC, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_BreakRotator_Yaw) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_SelectFloat_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_MakeRotator_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast) == 0x000144, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_MakeVector_X_ImplicitCast) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_1) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_1) == 0x000154, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Location, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Location::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lightning Flash Tick Update
// 0x00F0 (0x00F0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update final
{
public:
	double                                        Overall_Intensity;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_Value_ImplicitCast;         // 0x00B8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update) == 0x0000F0, "Wrong size on Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, Overall_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::Overall_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_PerlinNoise1D_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_LinearColorLerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_GetFloatValue_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_PerlinNoise1D_Value_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_PerlinNoise1D_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Lightning_Flash_Tick_Update::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Lightning World Height
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Lightning_World_Height final
{
public:
	double                                        Height;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Lightning_World_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Lightning_World_Height");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Lightning_World_Height) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Lightning_World_Height");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_World_Height, Height) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Lightning_World_Height::Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Lightning_World_Height, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Lightning_World_Height::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Load Required Assets
// 0x00A0 (0x00A0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Load_Required_Assets final
{
public:
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_4;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_5;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_6;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_7;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_8;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_9;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_10;        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_11;        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_12;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_13;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_14;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_15;        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_16;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_17;        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_18;        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_19;        // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Load_Required_Assets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Load_Required_Assets");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Load_Required_Assets) == 0x0000A0, "Wrong size on Ultra_Dynamic_Weather_C_Load_Required_Assets");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_4) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_5) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_6) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_7) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_8) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_9) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_10) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_11) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_12) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_13) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_14) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_15) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_16) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_17) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_18) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_19) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_19' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Local Lightning Internal
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Local_Lightning_Internal final
{
public:
	class AWeather_Override_Volume_C*             Volume;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Local_Lightning_Internal) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Local_Lightning_Internal");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Local_Lightning_Internal) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Local_Lightning_Internal");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Local_Lightning_Internal, Volume) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Local_Lightning_Internal::Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Local_Lightning_Internal, Angle) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Local_Lightning_Internal::Angle' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Make Outdoor Sound Mix
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Make_Outdoor_Sound_Mix::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Make Random Stream
// 0x0014 (0x0014 - 0x0000)
struct Ultra_Dynamic_Weather_C_Make_Random_Stream final
{
public:
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x000C(0x0008)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Make_Random_Stream) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_Make_Random_Stream");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Make_Random_Stream) == 0x000014, "Wrong size on Ultra_Dynamic_Weather_C_Make_Random_Stream");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Random_Stream, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Make_Random_Stream::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Random_Stream, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Make_Random_Stream::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Random_Stream, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Make_Random_Stream::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Make_Random_Stream, CallFunc_MakeRandomStream_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Make_Random_Stream::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Material Dust Change Speed
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed) == 0x000060, "Wrong size on Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_SelectFloat_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_SelectFloat_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Material_Dust_Change_Speed::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Material Snow Coverage Change Speed
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed) == 0x0000B0, "Wrong size on Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_SelectFloat_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_FClamp_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_SelectFloat_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed, CallFunc_FClamp_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Material_Snow_Coverage_Change_Speed::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Material Wetness Change Speed
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_5;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed) == 0x0000E8, "Wrong size on Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_SelectFloat_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_FClamp_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_FClamp_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_FClamp_ReturnValue_3) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_SelectFloat_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_FClamp_ReturnValue_4) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_SelectFloat_ReturnValue_3) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed, CallFunc_FClamp_ReturnValue_5) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Material_Wetness_Change_Speed::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Monitor Local Weather Changes
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes final
{
public:
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_Less_IntInt_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, K2Node_Select_Default) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Monitor_Local_Weather_Changes::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Populate Weather State
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Weather_C_Populate_Weather_State final
{
public:
	class UUDS_Weather_Settings_C*                State;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Coverage_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Fog_0;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Dust_0;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rain_0;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_0;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Intensity_0;                                  // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Lightning_0;                                 // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Snow;                                     // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Wetness_0;                                // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Dust;                                     // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Populate_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Populate_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Populate_Weather_State) == 0x000058, "Wrong size on Ultra_Dynamic_Weather_C_Populate_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Cloud_Coverage_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Param_Fog_0) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Param_Fog_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Param_Dust_0) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Param_Dust_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Rain_0) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Rain_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Snow_0) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Snow_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Wind_Intensity_0) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Wind_Intensity_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Param_Lightning_0) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Param_Lightning_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Material_Snow) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Material_Snow' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Material_Wetness_0) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Material_Wetness_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Populate_Weather_State, Material_Dust) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Populate_Weather_State::Material_Dust' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.PPWF Intensity
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Weather_C_PPWF_Intensity final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_PPWF_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_PPWF_Intensity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_PPWF_Intensity) == 0x000088, "Wrong size on Ultra_Dynamic_Weather_C_PPWF_Intensity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_PPWF_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_PPWF_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Print Current Status To Screen
// 0x0150 (0x0150 - 0x0000)
struct Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen final
{
public:
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_1;                       // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_3;        // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_2;                       // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_3;                       // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_4;        // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_5;        // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_4;                       // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_5;                       // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_6;        // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Left_ReturnValue_6;                       // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen) == 0x000150, "Wrong size on Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue_3) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue_3) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue_4) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue_5) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue_4) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue_5) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Conv_DoubleToString_ReturnValue_6) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Conv_DoubleToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Left_ReturnValue_6) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Left_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Print_Current_Status_To_Screen::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Query Project Settings
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Weather_C_Query_Project_Settings final
{
public:
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Query_Project_Settings) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_Query_Project_Settings");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Query_Project_Settings) == 0x000004, "Wrong size on Ultra_Dynamic_Weather_C_Query_Project_Settings");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Query_Project_Settings, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Query_Project_Settings::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Rain Sound Component Properties
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties final
{
public:
	int32                                         Direction_Index;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Volume;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LPF;                                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rain_Parameter;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Directional_Occlusion;                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Sound_Upward_Occlusion_Out;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Sound_Upward_Occlusion_Out_1;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, Direction_Index) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::Direction_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, Volume) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, LPF) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::LPF' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, Rain_Parameter) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::Rain_Parameter' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, Directional_Occlusion) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::Directional_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_Get_Sound_Upward_Occlusion_Out) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_Get_Sound_Upward_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_Get_Sound_Upward_Occlusion_Out_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_Get_Sound_Upward_Occlusion_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_Array_Get_Item) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_Lerp_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties, CallFunc_FMin_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Rain_Sound_Component_Properties::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Rain Spawn Rate
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Rain_Spawn_Rate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Rain_Spawn_Rate");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Rain_Spawn_Rate");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Rain_Spawn_Rate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Rain_Spawn_Rate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Rain_Spawn_Rate::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Rain_Spawn_Rate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rain_Spawn_Rate, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Rain_Spawn_Rate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Rainbow Strength
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Rainbow_Strength final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Rainbow_Strength) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Rainbow_Strength");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Rainbow_Strength) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Rainbow_Strength");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Rainbow_Strength, CallFunc_FMax_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Rainbow_Strength::CallFunc_FMax_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_ReceiveEndPlay");
static_assert(sizeof(Ultra_Dynamic_Weather_C_ReceiveEndPlay) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_ReceiveEndPlay");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Weather_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_ReceiveTick) == 0x000004, "Wrong alignment on Ultra_Dynamic_Weather_C_ReceiveTick");
static_assert(sizeof(Ultra_Dynamic_Weather_C_ReceiveTick) == 0x000004, "Wrong size on Ultra_Dynamic_Weather_C_ReceiveTick");
static_assert(offsetof(Ultra_Dynamic_Weather_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Recenter DLWE Render Target
// 0x0118 (0x0118 - 0x0000)
struct Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target final
{
public:
	class UTextureRenderTarget2D*                 Render_Target;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETextureRenderTargetFormat                    Format;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Clear_Color;                                       // 0x000C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     EdgeFade_Material;                                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Resolution;                                        // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Draw_Edge_Fade;                                    // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0050(0x0008)(NoDestructor)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1;   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size_1;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context_1;  // 0x0070(0x0008)(NoDestructor)
	double                                        CallFunc_DLWE_Render_Target_Area_Area;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target) == 0x000118, "Wrong size on Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Render_Target) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Render_Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Format) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Format' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Clear_Color) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Clear_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, EdgeFade_Material) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::EdgeFade_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Resolution) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Resolution' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, Draw_Edge_Fade) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::Draw_Edge_Fade' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_DLWE_Render_Target_Area_Area) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_DLWE_Render_Target_Area_Area' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Multiply_VectorInt_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BreakVector2D_X) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_BreakVector2D_Y) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Round_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Round_ReturnValue_1) == 0x0000E4, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_MakeVector2D_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Recenter_DLWE_Render_Target::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Recycle Render Targets
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Recycle_Render_Targets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Recycle_Render_Targets");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Recycle_Render_Targets");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Array_Get_Item) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Array_Length_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Recycle_Render_Targets, CallFunc_Max_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Recycle_Render_Targets::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Report Removal Of Mask Component
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component final
{
public:
	class UWeatherMask_C*                         Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UWeather_Mask_Projection_Box_Component_C* K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component, Component) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component::Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component, K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component::K2Node_DynamicCast_AsWeather_Mask_Projection_Box_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component, CallFunc_Array_RemoveItem_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Report_Removal_Of_Mask_Component::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Ripple DLWE Puddle
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Strength;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, Strength) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle, CallFunc_Array_Add_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Ripple_DLWE_Puddle::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Sample Current Sound Occlusion Values
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values final
{
public:
	double                                        NonMinusDirectional_Occlusion;                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        XPlus_Occlusion;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YPlus_Occlusion;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        XMinus_Occlusion;                                  // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YMinus_Occlusion;                                  // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Upward_Occlusion;                                  // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_X__Occlusion_ImplicitCast;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Y__Occlusion_ImplicitCast;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_X__Occlusion_ImplicitCast_1; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Y__Occlusion_ImplicitCast_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values, NonMinusDirectional_Occlusion) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values::NonMinusDirectional_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values, XPlus_Occlusion) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values::XPlus_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values, YPlus_Occlusion) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values::YPlus_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values, XMinus_Occlusion) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values::XMinus_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values, YMinus_Occlusion) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values::YMinus_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values, Upward_Occlusion) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values::Upward_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values, K2Node_FunctionResult_X__Occlusion_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values::K2Node_FunctionResult_X__Occlusion_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values, K2Node_FunctionResult_Y__Occlusion_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values::K2Node_FunctionResult_Y__Occlusion_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values, K2Node_FunctionResult_X__Occlusion_ImplicitCast_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values::K2Node_FunctionResult_X__Occlusion_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values, K2Node_FunctionResult_Y__Occlusion_ImplicitCast_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Sample_Current_Sound_Occlusion_Values::K2Node_FunctionResult_Y__Occlusion_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Screen Droplets Periodic Updates
// 0x0268 (0x0268 - 0x0000)
struct Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_1;          // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates) == 0x000268, "Wrong size on Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_GetCameraRotation_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_BreakVector_X) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_BreakVector_Y) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_BreakVector_Z) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Abs_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_FClamp_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Normal_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_LineTraceSingle_OutHit) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_LineTraceSingle_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Normal_ReturnValue_1) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_GetCameraRotation_ReturnValue_1) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_GetCameraRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_GetForwardVector_ReturnValue_1) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Dot_VectorVector_ReturnValue) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Screen_Droplets_Periodic_Updates::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Season Changed__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Season_Changed__DelegateSignature final
{
public:
	EUDS_Season                                   Season_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Season_Changed__DelegateSignature) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Season_Changed__DelegateSignature");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Season_Changed__DelegateSignature) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Season_Changed__DelegateSignature");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Season_Changed__DelegateSignature, Season_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Season_Changed__DelegateSignature::Season_0' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Current Global Weather State
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State final
{
public:
	class UUDS_Weather_Settings_C*                New_Weather_State;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                K2Node_Select_Default_1;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, New_Weather_State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::New_Weather_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, Temp_bool_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, Temp_bool_Variable_1) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue_1) == 0x00000D, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue_2) == 0x00000E, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue_3) == 0x00000F, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, K2Node_Select_Default) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, K2Node_Select_Default_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_Not_PreBool_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_Not_PreBool_ReturnValue_2) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue_4) == 0x00002A, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State, CallFunc_BooleanOR_ReturnValue_5) == 0x00002B, "Member 'Ultra_Dynamic_Weather_C_Set_Current_Global_Weather_State::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Random Time Offset
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Random_Time_Offset final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Random_Time_Offset");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Set_Random_Time_Offset");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Random_Time_Offset::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset, CallFunc_RandomFloatFromStream_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Set_Random_Time_Offset::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Random_Time_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Random_Time_Offset, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_Random_Time_Offset::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Shared Weather Particle Parameters
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters final
{
public:
	class UNiagaraComponent*                      System;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_4;   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_5;   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_6;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_7;   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_8;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_9;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_10;  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_11;  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, System) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_4) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_5) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_6) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_7) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_8) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_9) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_10) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_11) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Set_Shared_Weather_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_11' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set up Post Process Wind Fog
// 0x0750 (0x0750 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0028(0x0010)()
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0040(0x06E0)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0720(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_731[0x7];                                      // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog) == 0x000750, "Wrong size on Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, K2Node_MakeStruct_WeightedBlendables) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, K2Node_MakeStruct_PostProcessSettings) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000720, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, K2Node_DynamicCast_AsMaterial_Interface) == 0x000728, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, K2Node_DynamicCast_bSuccess) == 0x000730, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000738, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000740, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000744, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000748, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00074C, "Member 'Ultra_Dynamic_Weather_C_Set_up_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Up Rainbow
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Up_Rainbow final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x0008(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0048(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Up_Rainbow");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow) == 0x0000A8, "Wrong size on Ultra_Dynamic_Weather_C_Set_Up_Rainbow");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, K2Node_DynamicCast_AsTexture_2D) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, K2Node_Select_Default) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, K2Node_DynamicCast_AsMaterial_Interface) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00009C, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Up_Rainbow, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Set_Up_Rainbow::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Set Variables on UDS Based on Weather State
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State final
{
public:
	double                                        CallFunc_Fog_Vertical_Velocity_Out;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Sky_Cloud_Speed_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State, CallFunc_Fog_Vertical_Velocity_Out) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State::CallFunc_Fog_Vertical_Velocity_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State, CallFunc_Sky_Cloud_Speed_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State::CallFunc_Sky_Cloud_Speed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Set_Variables_on_UDS_Based_on_Weather_State::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Shut Down Mask Components Spawned At Runtime
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Get_Weather_Mask_Target_Root_Location_ReturnValue; // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_BoxOverlapComponents_OutComponents;       // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxOverlapComponents_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeatherMask_C*                         K2Node_DynamicCast_AsWeather_Mask;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime) == 0x000098, "Wrong size on Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, Temp_object_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, CallFunc_Get_Weather_Mask_Target_Root_Location_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::CallFunc_Get_Weather_Mask_Target_Root_Location_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, K2Node_MakeArray_Array) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, CallFunc_BoxOverlapComponents_OutComponents) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::CallFunc_BoxOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, CallFunc_BoxOverlapComponents_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::CallFunc_BoxOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, CallFunc_Array_Get_Item) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, K2Node_DynamicCast_AsWeather_Mask) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::K2Node_DynamicCast_AsWeather_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Shut_Down_Mask_Components_Spawned_At_Runtime::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Sky Cloud Speed
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Sky_Cloud_Speed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Sky_Cloud_Speed");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Sky_Cloud_Speed");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Sky_Cloud_Speed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Sky_Cloud_Speed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Sky_Cloud_Speed::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sky_Cloud_Speed, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Sky_Cloud_Speed::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C. Dust Velocity Randomization
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization final
{
public:
	double                                        Low_Wind;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        High_Wind;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization");
static_assert(sizeof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization) == 0x000030, "Wrong size on Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, Low_Wind) == 0x000000, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::Low_Wind' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, High_Wind) == 0x000008, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::High_Wind' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C__Dust_Velocity_Randomization::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Snow Spawn Rate
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Snow_Spawn_Rate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Snow_Spawn_Rate");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Snow_Spawn_Rate");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Snow_Spawn_Rate, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Snow_Spawn_Rate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Sort Weather Override Volumes
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes final
{
public:
	TArray<int32>                                 Priorities;                                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class AWeather_Override_Volume_C*>     Sorted_List_of_Volumes;                            // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AWeather_Override_Volume_C*             Current_Volume;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Inserted;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Priorities) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Priorities' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Sorted_List_of_Volumes) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Sorted_List_of_Volumes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Current_Volume) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Current_Volume' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Inserted) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Inserted' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Temp_bool_True_if_break_was_hit_Variable) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Temp_int_Array_Index_Variable) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004D, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Get_Item) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Get_Item_1) == 0x000064, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006D, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_BooleanAND_ReturnValue) == 0x00006E, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes, CallFunc_Array_Add_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Sort_Weather_Override_Volumes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C. Update DLWE Targets
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Weather_C__Update_DLWE_Targets final
{
public:
	bool                                          First_Run;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_DLWE_Render_Target_Mapping_Mapping;       // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_DLWE_Render_Target_Mapping_Mapping_1;     // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D_1;   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D_2;   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C__Update_DLWE_Targets");
static_assert(sizeof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets) == 0x000090, "Wrong size on Ultra_Dynamic_Weather_C__Update_DLWE_Targets");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, First_Run) == 0x000000, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::First_Run' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Not_PreBool_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_BooleanAND_ReturnValue_1) == 0x000011, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_BooleanAND_ReturnValue_2) == 0x000020, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000028, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_DLWE_Render_Target_Mapping_Mapping) == 0x000034, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_DLWE_Render_Target_Mapping_Mapping' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_DLWE_Render_Target_Mapping_Mapping_1) == 0x000044, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_DLWE_Render_Target_Mapping_Mapping_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Not_PreBool_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, K2Node_DynamicCast_AsTexture_Render_Target_2D_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::K2Node_DynamicCast_AsTexture_Render_Target_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Not_PreBool_ReturnValue_3) == 0x000071, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, K2Node_DynamicCast_AsTexture_Render_Target_2D_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::K2Node_DynamicCast_AsTexture_Render_Target_2D_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C__Update_DLWE_Targets, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C__Update_DLWE_Targets::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Start Active Timers
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Start_Active_Timers final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_3;                // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_4;                // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Start_Active_Timers) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Start_Active_Timers");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Start_Active_Timers) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Start_Active_Timers");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_BooleanOR_ReturnValue_1) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_BooleanOR_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_HasAuthority_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_3) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_ReturnValue_4) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Active_Timers, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Start_Active_Timers::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Start Screen Droplets
// 0x0750 (0x0750 - 0x0000)
struct Ultra_Dynamic_Weather_C_Start_Screen_Droplets final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0038(0x0010)()
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0050(0x06E0)()
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets) == 0x000010, "Wrong alignment on Ultra_Dynamic_Weather_C_Start_Screen_Droplets");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets) == 0x000750, "Wrong size on Ultra_Dynamic_Weather_C_Start_Screen_Droplets");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, K2Node_DynamicCast_AsMaterial_Interface) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, K2Node_MakeStruct_WeightedBlendables) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, K2Node_MakeStruct_PostProcessSettings) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000730, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000738, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000740, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000744, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000748, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Start_Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x00074C, "Member 'Ultra_Dynamic_Weather_C_Start_Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Test Actor for Weather Exposure
// 0x0178 (0x0178 - 0x0000)
struct Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Test_Colliding_Components_Only;                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                Custom_Weather_State_Object;                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Custom_Component_for_Bounds;                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Rain_Exposure;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Snow_Exposure;                                     // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Exposure;                                     // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dust_Exposure;                                     // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                Weather_State;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Direction_Exposure;                           // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Weather_Exposure;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Actor_Extent;                                      // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Actor_Origin;                                      // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_Select_Default;                             // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	double                                        CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0140(0x0010)(ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value_1; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure) == 0x000178, "Wrong size on Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Actor) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Actor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Test_Colliding_Components_Only) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Test_Colliding_Components_Only' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Custom_Weather_State_Object) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Custom_Weather_State_Object' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Custom_Component_for_Bounds) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Custom_Component_for_Bounds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Rain_Exposure) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Rain_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Snow_Exposure) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Snow_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Wind_Exposure) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Wind_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Dust_Exposure) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Dust_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Weather_State) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Weather_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Wind_Direction_Exposure) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Wind_Direction_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Weather_Exposure) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Weather_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Actor_Extent) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Actor_Extent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Actor_Origin) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Actor_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, Temp_bool_Variable) == 0x000089, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetComponentBounds_Origin) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetComponentBounds_BoxExtent) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetComponentBounds_SphereRadius) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetActorBounds_Origin) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_GetActorBounds_BoxExtent) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_IsValid_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, K2Node_Select_Default) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, K2Node_MakeArray_Array) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, K2Node_MakeArray_Array_1) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value_1) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Test_Actor_for_Weather_Exposure::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Test Component for Wind Exposure
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure final
{
public:
	class UPrimitiveComponent*                    Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Exposure;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure) == 0x000078, "Wrong size on Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, Component) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, Wind_Exposure) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::Wind_Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_GetComponentBounds_Origin) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_GetComponentBounds_BoxExtent) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_GetComponentBounds_SphereRadius) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_Trace_Bounds_for_Exposure_Values_Exposure_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Test_Component_for_Wind_Exposure::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Trace Bounds for Exposure Values
// 0x04A8 (0x04A8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values final
{
public:
	struct FVector                                Bounds_Origin;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Bounds_Extent;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors_to_Ignore;                                  // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Test_Weather;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Exposure_Value;                                    // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Vector;                                    // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Trace_Origin;                              // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Exposure;                                          // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Current_Dust_Velocity_Velocity;           // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Current_Snow_Velocity_Velocity;           // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Current_Rain_Velocity_Velocity;           // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0270(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x0368(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x03A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeArray__2__ImplicitCast;                 // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__1__ImplicitCast;                 // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeArray__0__ImplicitCast;                 // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values) == 0x0004A8, "Wrong size on Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Bounds_Origin) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Bounds_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Bounds_Extent) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Bounds_Extent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Actors_to_Ignore) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Actors_to_Ignore' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Test_Weather) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Test_Weather' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Exposure_Value) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Exposure_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Current_Vector) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Current_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Current_Trace_Origin) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Current_Trace_Origin' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Exposure) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Exposure' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Temp_int_Array_Index_Variable) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, Temp_int_Variable) == 0x000094, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Current_Dust_Velocity_Velocity) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Current_Dust_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_VectorVector_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Current_Snow_Velocity_Velocity) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Current_Snow_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Wind_Rotation_Rot) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Normal_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_MakeArray_Array) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_MaxOfFloatArray_MaxValue) == 0x0001CC, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Current_Rain_Velocity_Velocity) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Current_Rain_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_Select_Default) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Normal_ReturnValue_1) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000228, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_LineTraceSingle_OutHit) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_LineTraceSingle_ReturnValue) == 0x000358, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000360, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_MakeArray_Array_1) == 0x000368, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000378, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Array_Get_Item) == 0x000390, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_LineTraceSingle_OutHit_1) == 0x0003A8, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000490, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Array_Length_ReturnValue) == 0x000494, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, CallFunc_Less_IntInt_ReturnValue) == 0x000498, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_MakeArray__2__ImplicitCast) == 0x00049C, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_MakeArray__2__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_MakeArray__1__ImplicitCast) == 0x0004A0, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_MakeArray__1__ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values, K2Node_MakeArray__0__ImplicitCast) == 0x0004A4, "Member 'Ultra_Dynamic_Weather_C_Trace_Bounds_for_Exposure_Values::K2Node_MakeArray__0__ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Active Dust Parameters
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters final
{
public:
	bool                                          Turned_On;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawning;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spawn_Rate;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dust_Sprite_Alpha_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Current_Dust_Velocity_Velocity;           // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dust_Spawn_Rate_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, Turned_On) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::Turned_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, Spawning) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::Spawning' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, Spawn_Rate) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::Spawn_Rate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Dust_Sprite_Alpha_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Dust_Sprite_Alpha_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_BooleanOR_ReturnValue_1) == 0x000021, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_BooleanOR_ReturnValue_2) == 0x000022, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Current_Dust_Velocity_Velocity) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Current_Dust_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_Dust_Spawn_Rate_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_Dust_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_BooleanOR_ReturnValue_3) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Dust_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Active Rain Parameters
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters final
{
public:
	bool                                          Turned_On;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spawn_Rate;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Current_Rain_Velocity_Velocity;           // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Rain_Spawn_Rate_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters) == 0x000060, "Wrong size on Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, Turned_On) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::Turned_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, Spawn_Rate) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::Spawn_Rate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_Current_Rain_Velocity_Velocity) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_Current_Rain_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_BooleanOR_ReturnValue_1) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_Rain_Spawn_Rate_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_Rain_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Rain_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Active Snow Parameters
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters final
{
public:
	bool                                          Turned_On;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawning;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spawn_Rate;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Current_Snow_Velocity_Velocity;           // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Snow_Spawn_Rate_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters) == 0x000088, "Wrong size on Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, Turned_On) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::Turned_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, Spawning) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::Spawning' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, Spawn_Rate) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::Spawn_Rate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Snow___Dust_Velocity_Randomization_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_BooleanOR_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Current_Snow_Velocity_Velocity) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Current_Snow_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_Snow_Spawn_Rate_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_Snow_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_BooleanOR_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Snow_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Active Variables
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Active_Variables final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Active_Variables) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Active_Variables");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Active_Variables) == 0x000002, "Wrong size on Ultra_Dynamic_Weather_C_Update_Active_Variables");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Active Wind Debris Parameters
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters final
{
public:
	double                                        Spawn_Rate;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Current_Wind_Debris_Velocity_Velocity;    // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Wind_Debris_Spawn_Rate_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, Spawn_Rate) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::Spawn_Rate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_Current_Wind_Debris_Velocity_Velocity) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_Current_Wind_Debris_Velocity_Velocity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_Wind_Debris_Spawn_Rate_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_Wind_Debris_Spawn_Rate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Active_Wind_Debris_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Current Global And Local Weather State
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State final
{
public:
	class UUDS_Weather_Settings_C*                New_Weather_State;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Wind_Direction_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State, New_Weather_State) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State::New_Weather_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State, CallFunc_Combined_Wind_Direction_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Current_Global_And_Local_Weather_State::CallFunc_Combined_Wind_Direction_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update DLWE Depth Mode
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode final
{
public:
	int32                                         New_Snow_Mode;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue_1;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_1_ImplicitCast;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_0_ImplicitCast;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode) == 0x0000B8, "Wrong size on Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, New_Snow_Mode) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::New_Snow_Mode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, Temp_real_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, Temp_real_Variable_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, Temp_real_Variable_2) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, Temp_real_Variable_3) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_Not_PreBool_ReturnValue_1) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_BooleanOR_ReturnValue) == 0x00002B, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, Temp_real_Variable_4) == 0x00002C, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_BooleanOR_ReturnValue_1) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_BooleanOR_ReturnValue_2) == 0x000032, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000033, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_SelectInt_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, Temp_int_Variable_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_SelectInt_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, K2Node_Select_Default) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, K2Node_Select_Default_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_SafeDivide_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_SafeDivide_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_SafeDivide_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, K2Node_Select_Option_1_ImplicitCast) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::K2Node_Select_Option_1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, K2Node_Select_Option_0_ImplicitCast) == 0x000094, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_SafeDivide_B_ImplicitCast) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0000AC, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Depth_Mode::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update DLWE Interactions
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_DLWE_Interactions final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_DLWE_Interactions) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_DLWE_Interactions");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_DLWE_Interactions) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Update_DLWE_Interactions");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Interactions, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Interactions::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update DLWE Puddle Ripples
// 0x00F8 (0x00F8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples final
{
public:
	struct FDrawToRenderTargetContext             Render_Context;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor)
	class UCanvas*                                RenderCanvas;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_DLWE_Compression_Brush_Corner_Position;   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_DLWE_Compression_Brush_Brush_Size;        // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x00D0(0x0008)(NoDestructor)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples) == 0x0000F8, "Wrong size on Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Render_Context) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Render_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, RenderCanvas) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::RenderCanvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, K2Node_MakeStruct_LinearColor) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_DLWE_Compression_Brush_Corner_Position) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_DLWE_Compression_Brush_Corner_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_DLWE_Compression_Brush_Brush_Size) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_DLWE_Compression_Brush_Brush_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples, K2Node_MakeStruct_A_ImplicitCast) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Puddle_Ripples::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update DLWE Snow Compressions
// 0x0110 (0x0110 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions final
{
public:
	struct FDrawToRenderTargetContext             Render_Context;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor)
	class UCanvas*                                RenderCanvas;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_MakeBoxSphereBounds_ReturnValue;          // 0x0058(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x00B8(0x0008)(NoDestructor)
	struct FVector2D                              CallFunc_DLWE_Compression_Brush_Corner_Position;   // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_DLWE_Compression_Brush_Brush_Size;        // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions) == 0x000110, "Wrong size on Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Render_Context) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Render_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, RenderCanvas) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::RenderCanvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeBoxSphereBounds_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeBoxSphereBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_DLWE_Compression_Brush_Corner_Position) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_DLWE_Compression_Brush_Corner_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_DLWE_Compression_Brush_Brush_Size) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_DLWE_Compression_Brush_Brush_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions, CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Snow_Compressions::CallFunc_MakeBoxSphereBounds_SphereRadius_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update DLWE Wetness Parameters
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters) == 0x000090, "Wrong size on Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_BooleanOR_ReturnValue_1) == 0x000011, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_FFloor_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_FFloor_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, K2Node_MakeStruct_LinearColor) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, K2Node_MakeStruct_A_ImplicitCast) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, K2Node_MakeStruct_B_ImplicitCast) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, K2Node_MakeStruct_R_ImplicitCast) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters, K2Node_MakeStruct_G_ImplicitCast) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_DLWE_Wetness_Parameters::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Fog Particle Parameters
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters final
{
public:
	class UFXSystemComponent*                     Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Particle_Percentage;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Weather_Intensity;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Particle_Intensity;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, Target) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::Target' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, Max_Particle_Percentage) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::Max_Particle_Percentage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, Weather_Intensity) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::Weather_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, Particle_Intensity) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::Particle_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00004C, "Member 'Ultra_Dynamic_Weather_C_Update_Fog_Particle_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Material Effect Parameters
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Wind_Force_Vector_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                K2Node_Select_Default_1;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Wetness;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Dust;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                K2Node_Select_Default_2;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_1; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Wetness_1;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Dust_1;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Weather_Settings_C*                K2Node_Select_Default_3;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_2; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Wetness_2;  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Apply_Max_to_Material_Effects_Dust_2;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters) == 0x000100, "Wrong size on Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, Temp_bool_Variable_1) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, Temp_bool_Variable_2) == 0x000002, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, Temp_bool_Variable_3) == 0x000003, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_BooleanOR_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Wind_Force_Vector_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Wind_Force_Vector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_BooleanOR_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, K2Node_Select_Default) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, K2Node_Select_Default_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Wetness) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Wetness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Dust) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Dust' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, K2Node_Select_Default_2) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Wetness_1) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Wetness_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Dust_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Dust_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, K2Node_Select_Default_3) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_2) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Snow_Coverage_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Wetness_2) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Wetness_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Apply_Max_to_Material_Effects_Dust_2) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Apply_Max_to_Material_Effects_Dust_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0000E4, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x0000EC, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5) == 0x0000F4, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Material_Effect_Parameters::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Material State Change Speeds
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds final
{
public:
	double                                        CallFunc_Material_Dust_Change_Speed_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Material_Wetness_Change_Speed_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Material_Snow_Coverage_Change_Speed_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds, CallFunc_Material_Dust_Change_Speed_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds::CallFunc_Material_Dust_Change_Speed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds, CallFunc_Material_Wetness_Change_Speed_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds::CallFunc_Material_Wetness_Change_Speed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds, CallFunc_Material_Snow_Coverage_Change_Speed_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Material_State_Change_Speeds::CallFunc_Material_Snow_Coverage_Change_Speed_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Obscured Lightning Glow
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow final
{
public:
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow, CallFunc_GetForwardVector_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Glow::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Obscured Lightning Parameters
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters final
{
public:
	double                                        Spawn_Rate;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters) == 0x000020, "Wrong size on Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, Spawn_Rate) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::Spawn_Rate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Obscured_Lightning_Parameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Old State With Replicated Variables
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables final
{
public:
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Old_State_With_Replicated_Variables::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Outdoor Sound Mix
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix final
{
public:
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix, CallFunc_Lerp_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix, CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Outdoor_Sound_Mix::CallFunc_SetSoundMixClassOverride_Volume_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Post Process Wind Fog
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog final
{
public:
	bool                                          Force_Update;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_PPWF_Intensity_Out;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog) == 0x000050, "Wrong size on Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, Force_Update) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::Force_Update' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Abs_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_FInterpTo_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_1) == 0x000032, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000033, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_PPWF_Intensity_Out) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_PPWF_Intensity_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_3) == 0x000041, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_4) == 0x000042, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanOR_ReturnValue_5) == 0x000043, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_BooleanAND_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Post_Process_Wind_Fog::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Rainbow
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Rainbow final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Rainbow_Strength_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Rainbow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Rainbow");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Rainbow) == 0x000060, "Wrong size on Ultra_Dynamic_Weather_C_Update_Rainbow");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_Rainbow_Strength_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_Rainbow_Strength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_BooleanOR_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_BooleanOR_ReturnValue_2) == 0x000059, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Rainbow, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00005C, "Member 'Ultra_Dynamic_Weather_C_Update_Rainbow::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Screen Droplets
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Screen_Droplets final
{
public:
	double                                        Direct_Exposure_of_Camera_to_Rain;                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Screen_Droplets");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets) == 0x000080, "Wrong size on Ultra_Dynamic_Weather_C_Update_Screen_Droplets");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, Direct_Exposure_of_Camera_to_Rain) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::Direct_Exposure_of_Camera_to_Rain' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_BooleanOR_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000019, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00001A, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_BooleanAND_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Screen_Droplets, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Update_Screen_Droplets::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Season
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Season final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Current_Min_and_Max_Temperature_Min;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Min_and_Max_Temperature_Max;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Season_Value_for_Weather_from_Date_and_Time_Season; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_3;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Season) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Season");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Season) == 0x0000E8, "Wrong size on Ultra_Dynamic_Weather_C_Update_Season");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Update_Season::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_FFloor_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Get_Current_Min_and_Max_Temperature_Min) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Get_Current_Min_and_Max_Temperature_Min' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Get_Current_Min_and_Max_Temperature_Max) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Get_Current_Min_and_Max_Temperature_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Season_Value_for_Weather_from_Date_and_Time_Season) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Season_Value_for_Weather_from_Date_and_Time_Season' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Array_Get_Item) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Array_Get_Item_3) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_MakeStruct_LinearColor) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Conv_IntToByte_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_GetValidValue_ReturnValue) == 0x000089, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Abs_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_FClamp_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, CallFunc_SelectFloat_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Season::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_MakeStruct_A_ImplicitCast) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_MakeStruct_B_ImplicitCast) == 0x0000DC, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_MakeStruct_G_ImplicitCast) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Season, K2Node_MakeStruct_R_ImplicitCast) == 0x0000E4, "Member 'Ultra_Dynamic_Weather_C_Update_Season::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Static Variables
// 0x0328 (0x0328 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Static_Variables final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lightning_World_Height_Height;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System_1;             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System_2;             // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System_3;             // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System_4;             // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base_1;                 // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base_2;                 // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item_2;                         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8; // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base_3;                 // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item_3;                         // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3[0x1];                                      // 0x01C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_1;                              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB[0x1];                                      // 0x01CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9; // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_3;                              // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_1;               // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F7[0x1];                                      // 0x01F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0205(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_2;               // 0x0206(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0207(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x020E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x020F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAudioComponent*>                K2Node_MakeArray_Array_1;                          // 0x0210(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_MakeArray_Array_2;                          // 0x0220(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Variable_3;                               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item_4;                         // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_3;               // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_4;               // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x0286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x0287(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5; // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCustomTimeDilation_Dilation_ImplicitCast; // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6; // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8; // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9; // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_4;   // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_5;   // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10; // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_6;   // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_7;   // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_8;   // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_9;   // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12; // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13; // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14; // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15; // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_10;  // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16; // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18; // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Static_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Static_Variables");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Static_Variables) == 0x000328, "Wrong size on Ultra_Dynamic_Weather_C_Update_Static_Variables");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000D, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000E, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Divide_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeArray_Array) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_int_Variable) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Array_Get_Item) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000079, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanOR_ReturnValue) == 0x00007A, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00007B, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_int_Variable_1) == 0x00007C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanOR_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanOR_ReturnValue_2) == 0x000089, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x00008A, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanOR_ReturnValue_3) == 0x00008B, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Lightning_World_Height_Height) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Lightning_World_Height_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_1) == 0x000099, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_AsNiagara_System) == 0x0000C0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C9, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_AsNiagara_System_1) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_AsNiagara_System_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_AsNiagara_System_2) == 0x0000F0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_AsNiagara_System_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000108, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_AsNiagara_System_3) == 0x000110, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_AsNiagara_System_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_3) == 0x000118, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_AsNiagara_System_4) == 0x000120, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_AsNiagara_System_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_4) == 0x000128, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x000130, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_AsSound_Base) == 0x000138, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_5) == 0x000140, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6) == 0x000148, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_AsSound_Base_1) == 0x000150, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_AsSound_Base_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_6) == 0x000158, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7) == 0x000160, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_AsSound_Base_2) == 0x000168, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_AsSound_Base_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_7) == 0x000170, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Array_Get_Item_2) == 0x000178, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_1) == 0x000184, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8) == 0x000188, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_AsSound_Base_3) == 0x000190, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_AsSound_Base_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_8) == 0x000198, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Array_Get_Item_3) == 0x0001A0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_3) == 0x0001A8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001AC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_real_Variable) == 0x0001B0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_3) == 0x0001B4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_IsStandalone_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_4) == 0x0001C1, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001C2, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_real_Variable_1) == 0x0001C4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_4) == 0x0001C8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_5) == 0x0001C9, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_6) == 0x0001CA, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_real_Variable_2) == 0x0001CC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_7) == 0x0001D0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9) == 0x0001D8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D) == 0x0001E0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_9) == 0x0001E8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_real_Variable_3) == 0x0001EC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_real_Variable_4) == 0x0001F0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_IsStandalone_ReturnValue_1) == 0x0001F4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_IsStandalone_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_8) == 0x0001F5, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_5) == 0x0001F6, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_int_Variable_2) == 0x0001F8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_6) == 0x0001FC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_Select_Default) == 0x000200, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_9) == 0x000204, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_10) == 0x000205, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_IsStandalone_ReturnValue_2) == 0x000206, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_IsStandalone_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_11) == 0x000207, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_7) == 0x000208, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_8) == 0x000209, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_12) == 0x00020A, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_13) == 0x00020B, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_14) == 0x00020C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_15) == 0x00020D, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_9) == 0x00020E, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_10) == 0x00020F, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeArray_Array_1) == 0x000210, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeArray_Array_2) == 0x000220, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_int_Variable_3) == 0x000230, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_4) == 0x000234, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_3) == 0x000238, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_3) == 0x00023C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Array_Get_Item_4) == 0x000240, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000250, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_16) == 0x000260, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000268, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeStruct_LinearColor) == 0x000270, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_IsStandalone_ReturnValue_3) == 0x000280, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_IsStandalone_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_IsStandalone_ReturnValue_4) == 0x000281, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_IsStandalone_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_17) == 0x000282, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_11) == 0x000283, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_18) == 0x000284, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_12) == 0x000285, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_19) == 0x000286, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_20) == 0x000287, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_21) == 0x000288, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_22) == 0x000289, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, Temp_int_Loop_Counter_Variable_1) == 0x00028C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_4) == 0x000290, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_4) == 0x000294, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000298, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x00029C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0002A0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x0002A4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x0002A8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x0002AC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5) == 0x0002B0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetCustomTimeDilation_Dilation_ImplicitCast) == 0x0002B4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetCustomTimeDilation_Dilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x0002B8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6) == 0x0002BC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7) == 0x0002C0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8) == 0x0002C4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9) == 0x0002C8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x0002CC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x0002D0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_4) == 0x0002D4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_5) == 0x0002D8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10) == 0x0002DC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_6) == 0x0002E0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_7) == 0x0002E4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_8) == 0x0002E8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_9) == 0x0002EC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11) == 0x0002F0, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12) == 0x0002F4, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13) == 0x0002F8, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14) == 0x0002FC, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15) == 0x000300, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast_10) == 0x000304, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16) == 0x000308, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17) == 0x00030C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeStruct_R_ImplicitCast) == 0x000310, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18) == 0x000314, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeStruct_G_ImplicitCast) == 0x000318, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeStruct_B_ImplicitCast) == 0x00031C, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Static_Variables, K2Node_MakeStruct_A_ImplicitCast) == 0x000320, "Member 'Ultra_Dynamic_Weather_C_Update_Static_Variables::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Underwater State
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Underwater_State final
{
public:
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Underwater_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Underwater_State");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Underwater_State) == 0x000010, "Wrong size on Ultra_Dynamic_Weather_C_Update_Underwater_State");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Underwater_State, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Underwater_State::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Underwater_State, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Underwater_State::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Underwater_State, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Weather_C_Update_Underwater_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Underwater_State, CallFunc_BooleanAND_ReturnValue_1) == 0x00000A, "Member 'Ultra_Dynamic_Weather_C_Update_Underwater_State::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Weather Settings from UDS
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS final
{
public:
	double                                        Cloud_Coverage_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Fog_0;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Dust_0;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS, Cloud_Coverage_0) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS::Cloud_Coverage_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS, Param_Fog_0) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS::Param_Fog_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS, Param_Dust_0) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Weather_Settings_from_UDS::Param_Dust_0' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update Wind Directional Source Actor
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor final
{
public:
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Wind_Rotation_Rot;                        // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpeed_InNewSpeed_ImplicitCast;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor) == 0x000040, "Wrong size on Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_BooleanOR_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_Wind_Rotation_Rot) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_Wind_Rotation_Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor, CallFunc_SetSpeed_InNewSpeed_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Update_Wind_Directional_Source_Actor::CallFunc_SetSpeed_InNewSpeed_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Update WOV Target Coordinates
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates final
{
public:
	bool                                          Use_Editor_Location;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeather_Override_Volume_C*             CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_SnappedToGrid_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates) == 0x0000E8, "Wrong size on Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, Use_Editor_Location) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::Use_Editor_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, Temp_int_Variable_1) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_SelectVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Array_Get_Item) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Vector_SnappedToGrid_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Vector_SnappedToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, K2Node_MakeStruct_LinearColor) == 0x0000C8, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, K2Node_MakeStruct_B_ImplicitCast) == 0x0000D8, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast) == 0x0000DC, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, K2Node_MakeStruct_R_ImplicitCast) == 0x0000E0, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates, K2Node_MakeStruct_G_ImplicitCast) == 0x0000E4, "Member 'Ultra_Dynamic_Weather_C_Update_WOV_Target_Coordinates::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Weather Display Name Changed__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Weather_C_Weather_Display_Name_Changed__DelegateSignature final
{
public:
	EUDS_Weather_Display_Names                    Weather_Name;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Weather_Display_Name_Changed__DelegateSignature) == 0x000001, "Wrong alignment on Ultra_Dynamic_Weather_C_Weather_Display_Name_Changed__DelegateSignature");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Weather_Display_Name_Changed__DelegateSignature) == 0x000001, "Wrong size on Ultra_Dynamic_Weather_C_Weather_Display_Name_Changed__DelegateSignature");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Weather_Display_Name_Changed__DelegateSignature, Weather_Name) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Weather_Display_Name_Changed__DelegateSignature::Weather_Name' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Wind Debris Spawn Rate
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate) == 0x000028, "Wrong size on Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Wind_Debris_Spawn_Rate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Wind Force Vector
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Weather_C_Wind_Force_Vector final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Wind_Force_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Wind_Force_Vector");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Wind_Force_Vector) == 0x0000B0, "Wrong size on Ultra_Dynamic_Weather_C_Wind_Force_Vector");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Force_Vector, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Weather_C_Wind_Force_Vector::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Wind Rotation
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Weather_C_Wind_Rotation final
{
public:
	struct FRotator                               Rot;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Wind_Rotation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Wind_Rotation");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Wind_Rotation) == 0x000038, "Wrong size on Ultra_Dynamic_Weather_C_Wind_Rotation");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Rotation, Rot) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Wind_Rotation::Rot' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Rotation, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Wind_Rotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Rotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Wind_Rotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Wind Sound Intensity
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Weather_C_Wind_Sound_Intensity final
{
public:
	double                                        Int;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Wind_Sound_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Wind_Sound_Intensity");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Wind_Sound_Intensity) == 0x000018, "Wrong size on Ultra_Dynamic_Weather_C_Wind_Sound_Intensity");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Sound_Intensity, Int) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Wind_Sound_Intensity::Int' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Sound_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Wind_Sound_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Sound_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Wind_Sound_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Weather.Ultra_Dynamic_Weather_C.Wind Whistling Sound Volume
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume final
{
public:
	double                                        Int;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Sound_Global_Occlusion_Out;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume) == 0x000008, "Wrong alignment on Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume");
static_assert(sizeof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume) == 0x000048, "Wrong size on Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume, Int) == 0x000000, "Member 'Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume::Int' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume, CallFunc_Get_Sound_Global_Occlusion_Out) == 0x000008, "Member 'Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume::CallFunc_Get_Sound_Global_Occlusion_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume, CallFunc_Lerp_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Weather_C_Wind_Whistling_Sound_Volume::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

}

