#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AbilityIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AbilityIcon.WBP_AbilityIcon_C
// 0x0068 (0x0328 - 0x02C0)
class UWBP_AbilityIcon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CooldownTimer_Mirror;                              // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CooldownTimer;                                     // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ContainerGlow;                                     // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 AbilityContainer;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AbilityContainer_Glow;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AbilityIcon;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AbilityIcon_Grey;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LineExplosionFlipbook;                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SquaresFlipbook;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Whiteout;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture;                                       // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture_Grey;                                  // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_AbilityIcon(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AbilityIcon_C">();
	}
	static class UWBP_AbilityIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AbilityIcon_C>();
	}
};
static_assert(alignof(UWBP_AbilityIcon_C) == 0x000008, "Wrong alignment on UWBP_AbilityIcon_C");
static_assert(sizeof(UWBP_AbilityIcon_C) == 0x000328, "Wrong size on UWBP_AbilityIcon_C");
static_assert(offsetof(UWBP_AbilityIcon_C, UberGraphFrame) == 0x0002C0, "Member 'UWBP_AbilityIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, CooldownTimer_Mirror) == 0x0002C8, "Member 'UWBP_AbilityIcon_C::CooldownTimer_Mirror' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, CooldownTimer) == 0x0002D0, "Member 'UWBP_AbilityIcon_C::CooldownTimer' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, ContainerGlow) == 0x0002D8, "Member 'UWBP_AbilityIcon_C::ContainerGlow' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, AbilityContainer) == 0x0002E0, "Member 'UWBP_AbilityIcon_C::AbilityContainer' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, AbilityContainer_Glow) == 0x0002E8, "Member 'UWBP_AbilityIcon_C::AbilityContainer_Glow' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, AbilityIcon) == 0x0002F0, "Member 'UWBP_AbilityIcon_C::AbilityIcon' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, AbilityIcon_Grey) == 0x0002F8, "Member 'UWBP_AbilityIcon_C::AbilityIcon_Grey' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, LineExplosionFlipbook) == 0x000300, "Member 'UWBP_AbilityIcon_C::LineExplosionFlipbook' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, SquaresFlipbook) == 0x000308, "Member 'UWBP_AbilityIcon_C::SquaresFlipbook' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, Whiteout) == 0x000310, "Member 'UWBP_AbilityIcon_C::Whiteout' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, IconTexture) == 0x000318, "Member 'UWBP_AbilityIcon_C::IconTexture' has a wrong offset!");
static_assert(offsetof(UWBP_AbilityIcon_C, IconTexture_Grey) == 0x000320, "Member 'UWBP_AbilityIcon_C::IconTexture_Grey' has a wrong offset!");

}

