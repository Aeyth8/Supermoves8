#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UDS_WeatherMask_Interface

#include "Basic.hpp"

#include "UDS_WeatherMask_Interface_classes.hpp"
#include "UDS_WeatherMask_Interface_parameters.hpp"


namespace SDK
{

// Function UDS_WeatherMask_Interface.UDS_WeatherMask_Interface_C.Approximate Masking At Location
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUDS_DLWE_Mode                          Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Mask                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Cancel_All_Masks                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IUDS_WeatherMask_Interface_C::Approximate_Masking_At_Location(const struct FVector& Location, EUDS_DLWE_Mode Mode, double* Mask, bool* Cancel_All_Masks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UDS_WeatherMask_Interface_C", "Approximate Masking At Location");

	Params::UDS_WeatherMask_Interface_C_Approximate_Masking_At_Location Parms{};

	Parms.Location = std::move(Location);
	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (Mask != nullptr)
		*Mask = Parms.Mask;

	if (Cancel_All_Masks != nullptr)
		*Cancel_All_Masks = Parms.Cancel_All_Masks;
}

}

