#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GymGUIPlaylistScoreboardWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_GymGUIPlaylistScoreboardWidget.BP_GymGUIPlaylistScoreboardWidget_C
// 0x0130 (0x04B8 - 0x0388)
class UBP_GymGUIPlaylistScoreboardWidget_C final : public UGymGuiPlaylistWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_GymTournamentEntry_C*               BP_GymTournamentEntry_3;                           // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_XPcondensed_C*                      BP_XPcondensed;                                    // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_XPexpanded_C*                       BP_XPexpanded;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    CommonActionWidget_351;                            // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_39;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeaderboardIcon;                                   // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PlaymenuButton_C*                  MainMenuButton;                                    // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           PlayerContentBox;                                  // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             PlayerList;                                        // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ProgressbarOverlay;                                // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PlaymenuButton_C*                  RestartButton;                                     // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TournamentPanel_C*                 RoyaleScreen1;                                     // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TournamentPanel_C*                 RoyaleScreen2;                                     // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Scoreboard;                                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         ShowSummary;                                       // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TournamentPanel_C*                 TournamentScreen1;                                 // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TournamentPanel_C*                 TournamentScreen2;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_2;                                  // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           XPreward;                                          // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CurrentEntry;                                      // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LevelName;                                         // 0x0438(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   GameModeName;                                      // 0x0450(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_TournamentPanel_C*                 CurrentPanel;                                      // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_GymTournamentEntry_C*>       Entries;                                           // 0x0470(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FTimerHandle                           SecondScreenTimer;                                 // 0x0480(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ScoreAwardTimer;                                   // 0x0488(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ScoreAwarded;                                      // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeUntilTravel;                                   // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ProgressDynamicMat;                                // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        HighlightableWidgets;                              // 0x04A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void AwardScores();
	void BndEvt__BP_GymGUIPlaylistScoreboardWidget_MainMenuButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__BP_GymGUIPlaylistScoreboardWidget_RestartButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BPOpen();
	void ClearPlayerList();
	void Construct();
	void EndSessionComplete(bool Success);
	void ExecuteUbergraph_BP_GymGUIPlaylistScoreboardWidget(int32 EntryPoint);
	void GetMyScore(struct FGymPlaylistScoreboardEntry* Data);
	void InpActEvt_ShowRewardSummary_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_ShowRewardSummary_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_UIGamepadDown_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_UIGamepadRight_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_UIGamepadUp_K2Node_InputActionEvent_1(const struct FKey& Key);
	void IsPauseMenuOpen(bool* Yes);
	void OnInitialized();
	void OpenScoreboard(bool bIsValidLevel);
	bool ShouldShowColumn(class FName ID);
	void ShowAllEntries();
	void ShowEntry(int32 Index_0);
	void ShowRoyaleFirstScreen();
	void ShowRoyaleSecondScreen();
	void ShowTournamentFirstScreen();
	void ShowTournamentSecondScreen();
	void SwapPanelTo(class UWBP_TournamentPanel_C* CurrentPanel_0);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GymGUIPlaylistScoreboardWidget_C">();
	}
	static class UBP_GymGUIPlaylistScoreboardWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GymGUIPlaylistScoreboardWidget_C>();
	}
};
static_assert(alignof(UBP_GymGUIPlaylistScoreboardWidget_C) == 0x000008, "Wrong alignment on UBP_GymGUIPlaylistScoreboardWidget_C");
static_assert(sizeof(UBP_GymGUIPlaylistScoreboardWidget_C) == 0x0004B8, "Wrong size on UBP_GymGUIPlaylistScoreboardWidget_C");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, UberGraphFrame) == 0x000388, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, BP_GymTournamentEntry_3) == 0x000390, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::BP_GymTournamentEntry_3' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, BP_XPcondensed) == 0x000398, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::BP_XPcondensed' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, BP_XPexpanded) == 0x0003A0, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::BP_XPexpanded' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, CommonActionWidget_351) == 0x0003A8, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::CommonActionWidget_351' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, Image) == 0x0003B0, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, Image_39) == 0x0003B8, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::Image_39' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, LeaderboardIcon) == 0x0003C0, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::LeaderboardIcon' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, MainMenuButton) == 0x0003C8, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::MainMenuButton' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, PlayerContentBox) == 0x0003D0, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::PlayerContentBox' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, PlayerList) == 0x0003D8, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::PlayerList' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, ProgressbarOverlay) == 0x0003E0, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::ProgressbarOverlay' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, RestartButton) == 0x0003E8, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::RestartButton' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, RoyaleScreen1) == 0x0003F0, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::RoyaleScreen1' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, RoyaleScreen2) == 0x0003F8, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::RoyaleScreen2' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, Scoreboard) == 0x000400, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::Scoreboard' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, ShowSummary) == 0x000408, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::ShowSummary' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, TournamentScreen1) == 0x000410, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::TournamentScreen1' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, TournamentScreen2) == 0x000418, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::TournamentScreen2' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, WidgetSwitcher_2) == 0x000420, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::WidgetSwitcher_2' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, XPreward) == 0x000428, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::XPreward' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, CurrentEntry) == 0x000430, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::CurrentEntry' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, LevelName) == 0x000438, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::LevelName' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, GameModeName) == 0x000450, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::GameModeName' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, CurrentPanel) == 0x000468, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::CurrentPanel' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, Entries) == 0x000470, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::Entries' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, SecondScreenTimer) == 0x000480, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::SecondScreenTimer' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, ScoreAwardTimer) == 0x000488, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::ScoreAwardTimer' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, ScoreAwarded) == 0x000490, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::ScoreAwarded' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, TimeUntilTravel) == 0x000498, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::TimeUntilTravel' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, ProgressDynamicMat) == 0x0004A0, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::ProgressDynamicMat' has a wrong offset!");
static_assert(offsetof(UBP_GymGUIPlaylistScoreboardWidget_C, HighlightableWidgets) == 0x0004A8, "Member 'UBP_GymGUIPlaylistScoreboardWidget_C::HighlightableWidgets' has a wrong offset!");

}

