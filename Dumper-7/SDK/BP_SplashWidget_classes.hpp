#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplashWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_SplashWidget.BP_SplashWidget_C
// 0x00E0 (0x03A0 - 0x02C0)
class UBP_SplashWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PromptFadeIn;                                      // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PromptHover;                                       // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LogoHover;                                         // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WIP_Notification_OUT;                              // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WIP_Notification_IN;                               // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOutWIPDisclaimer;                              // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LogoPromptFadeIn;                                  // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BackgroundGradientFade;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_SplashIntro_WorkInProgressAlert_C*  BP_SplashIntro_WorkInProgressAlert;                // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ButtonPrompt;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrossfadeBackground;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrossfadeBlack;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LogoStressTest;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MakeaGamesLogo;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UThrobber*                              ThrobberAnyButton;                                 // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VideoPlayer;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWidget*>                        HighlightableWidgets;                              // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UWidget*                                PreviouslySelectedKit;                             // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMediaPlayer*                           MediaPlayer;                                       // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 Id_Level_Kit;                                      // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnAnyKey;                                          // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          AnyKeyPrimed;                                      // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        MenuMusic;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_GymGameInstance_C*                  As_BP_Gym_Game_Instance;                           // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ShowAnyKeyPrompt();
	void PlaybackPrecent(const class USoundWave* PlayingSoundWave, const float PlaybackPercent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnAnyKey__DelegateSignature();
	void ExecuteUbergraph_BP_SplashWidget(int32 EntryPoint);
	void Destruct();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SplashWidget_C">();
	}
	static class UBP_SplashWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SplashWidget_C>();
	}
};
static_assert(alignof(UBP_SplashWidget_C) == 0x000008, "Wrong alignment on UBP_SplashWidget_C");
static_assert(sizeof(UBP_SplashWidget_C) == 0x0003A0, "Wrong size on UBP_SplashWidget_C");
static_assert(offsetof(UBP_SplashWidget_C, UberGraphFrame) == 0x0002C0, "Member 'UBP_SplashWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, PromptFadeIn) == 0x0002C8, "Member 'UBP_SplashWidget_C::PromptFadeIn' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, PromptHover) == 0x0002D0, "Member 'UBP_SplashWidget_C::PromptHover' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, LogoHover) == 0x0002D8, "Member 'UBP_SplashWidget_C::LogoHover' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, WIP_Notification_OUT) == 0x0002E0, "Member 'UBP_SplashWidget_C::WIP_Notification_OUT' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, WIP_Notification_IN) == 0x0002E8, "Member 'UBP_SplashWidget_C::WIP_Notification_IN' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, FadeOutWIPDisclaimer) == 0x0002F0, "Member 'UBP_SplashWidget_C::FadeOutWIPDisclaimer' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, LogoPromptFadeIn) == 0x0002F8, "Member 'UBP_SplashWidget_C::LogoPromptFadeIn' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, BackgroundGradientFade) == 0x000300, "Member 'UBP_SplashWidget_C::BackgroundGradientFade' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, BP_SplashIntro_WorkInProgressAlert) == 0x000308, "Member 'UBP_SplashWidget_C::BP_SplashIntro_WorkInProgressAlert' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, ButtonPrompt) == 0x000310, "Member 'UBP_SplashWidget_C::ButtonPrompt' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, CrossfadeBackground) == 0x000318, "Member 'UBP_SplashWidget_C::CrossfadeBackground' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, CrossfadeBlack) == 0x000320, "Member 'UBP_SplashWidget_C::CrossfadeBlack' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, LogoStressTest) == 0x000328, "Member 'UBP_SplashWidget_C::LogoStressTest' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, MakeaGamesLogo) == 0x000330, "Member 'UBP_SplashWidget_C::MakeaGamesLogo' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, ThrobberAnyButton) == 0x000338, "Member 'UBP_SplashWidget_C::ThrobberAnyButton' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, VideoPlayer) == 0x000340, "Member 'UBP_SplashWidget_C::VideoPlayer' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, HighlightableWidgets) == 0x000348, "Member 'UBP_SplashWidget_C::HighlightableWidgets' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, PreviouslySelectedKit) == 0x000358, "Member 'UBP_SplashWidget_C::PreviouslySelectedKit' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, MediaPlayer) == 0x000360, "Member 'UBP_SplashWidget_C::MediaPlayer' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, Id_Level_Kit) == 0x000368, "Member 'UBP_SplashWidget_C::Id_Level_Kit' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, OnAnyKey) == 0x000378, "Member 'UBP_SplashWidget_C::OnAnyKey' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, AnyKeyPrimed) == 0x000388, "Member 'UBP_SplashWidget_C::AnyKeyPrimed' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, MenuMusic) == 0x000390, "Member 'UBP_SplashWidget_C::MenuMusic' has a wrong offset!");
static_assert(offsetof(UBP_SplashWidget_C, As_BP_Gym_Game_Instance) == 0x000398, "Member 'UBP_SplashWidget_C::As_BP_Gym_Game_Instance' has a wrong offset!");

}

