#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpectatorCircuitWidget

#include "Basic.hpp"

#include "GYMGAME_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_SpectatorCircuitWidget.WBP_SpectatorCircuitWidget_C.ExecuteUbergraph_WBP_SpectatorCircuitWidget
// 0x0040 (0x0040 - 0x0000)
struct WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget) == 0x000004, "Wrong alignment on WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget");
static_assert(sizeof(WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget) == 0x000040, "Wrong size on WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget, EntryPoint) == 0x000000, "Member 'WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_SpectatorCircuitWidget_C_ExecuteUbergraph_WBP_SpectatorCircuitWidget::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WBP_SpectatorCircuitWidget.WBP_SpectatorCircuitWidget_C.Get_LapText_Text
// 0x0108 (0x0108 - 0x0000)
struct WBP_SpectatorCircuitWidget_C_Get_LapText_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLapsCompleted_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLapNum_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
};
static_assert(alignof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text) == 0x000008, "Wrong alignment on WBP_SpectatorCircuitWidget_C_Get_LapText_Text");
static_assert(sizeof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text) == 0x000108, "Wrong size on WBP_SpectatorCircuitWidget_C_Get_LapText_Text");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, ReturnValue) == 0x000000, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, CallFunc_GetLapsCompleted_ReturnValue) == 0x00001C, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::CallFunc_GetLapsCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, CallFunc_GetLapNum_ReturnValue) == 0x000020, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::CallFunc_GetLapNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000028, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, CallFunc_Min_ReturnValue) == 0x000030, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000088, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, K2Node_MakeArray_Array) == 0x0000E0, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Get_LapText_Text, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'WBP_SpectatorCircuitWidget_C_Get_LapText_Text::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_SpectatorCircuitWidget.WBP_SpectatorCircuitWidget_C.GetCheckpoinCounterText
// 0x0108 (0x0108 - 0x0000)
struct WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckpointsVisited_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCheckpointCount_ReturnValue;           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
};
static_assert(alignof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText) == 0x000008, "Wrong alignment on WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText");
static_assert(sizeof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText) == 0x000108, "Wrong size on WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, ReturnValue) == 0x000000, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, CallFunc_CheckpointsVisited_ReturnValue) == 0x00001C, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::CallFunc_CheckpointsVisited_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, CallFunc_GetCheckpointCount_ReturnValue) == 0x00007C, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::CallFunc_GetCheckpointCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000088, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, K2Node_MakeArray_Array) == 0x0000E0, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'WBP_SpectatorCircuitWidget_C_GetCheckpoinCounterText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_SpectatorCircuitWidget.WBP_SpectatorCircuitWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_SpectatorCircuitWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorCircuitWidget_C_Tick) == 0x000004, "Wrong alignment on WBP_SpectatorCircuitWidget_C_Tick");
static_assert(sizeof(WBP_SpectatorCircuitWidget_C_Tick) == 0x00003C, "Wrong size on WBP_SpectatorCircuitWidget_C_Tick");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_SpectatorCircuitWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_SpectatorCircuitWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_SpectatorCircuitWidget.WBP_SpectatorCircuitWidget_C.TickCheckpointVisibilityAndText
// 0x0028 (0x0028 - 0x0000)
struct WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGymRulesState                                CallFunc_GetRuleState_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCheckpoinCounterText_ReturnValue;      // 0x0008(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText) == 0x000008, "Wrong alignment on WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText");
static_assert(sizeof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText) == 0x000028, "Wrong size on WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText, Temp_bool_Variable) == 0x000000, "Member 'WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText, CallFunc_GetRuleState_ReturnValue) == 0x000002, "Member 'WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText::CallFunc_GetRuleState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText, Temp_byte_Variable) == 0x000004, "Member 'WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText, CallFunc_GetCheckpoinCounterText_ReturnValue) == 0x000008, "Member 'WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText::CallFunc_GetCheckpoinCounterText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText, K2Node_Select_Default) == 0x000022, "Member 'WBP_SpectatorCircuitWidget_C_TickCheckpointVisibilityAndText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_SpectatorCircuitWidget.WBP_SpectatorCircuitWidget_C.TickParticipantAndRule
// 0x0010 (0x0010 - 0x0000)
struct WBP_SpectatorCircuitWidget_C_TickParticipantAndRule final
{
public:
	class UGymCircuitReplicatedData*              CallFunc_GetRuleData_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGymParticipantRepDataCircuit*          CallFunc_GetParticipantData_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorCircuitWidget_C_TickParticipantAndRule) == 0x000008, "Wrong alignment on WBP_SpectatorCircuitWidget_C_TickParticipantAndRule");
static_assert(sizeof(WBP_SpectatorCircuitWidget_C_TickParticipantAndRule) == 0x000010, "Wrong size on WBP_SpectatorCircuitWidget_C_TickParticipantAndRule");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickParticipantAndRule, CallFunc_GetRuleData_ReturnValue) == 0x000000, "Member 'WBP_SpectatorCircuitWidget_C_TickParticipantAndRule::CallFunc_GetRuleData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickParticipantAndRule, CallFunc_GetParticipantData_ReturnValue) == 0x000008, "Member 'WBP_SpectatorCircuitWidget_C_TickParticipantAndRule::CallFunc_GetParticipantData_ReturnValue' has a wrong offset!");

// Function WBP_SpectatorCircuitWidget.WBP_SpectatorCircuitWidget_C.TickUI
// 0x0088 (0x0088 - 0x0000)
struct WBP_SpectatorCircuitWidget_C_TickUI final
{
public:
	float                                         CallFunc_GetRaceStartTime_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatTime_ReturnValue;                   // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	EGymRulesState                                CallFunc_GetRuleState_ReturnValue;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FormatTime_Time_ImplicitCast;             // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorCircuitWidget_C_TickUI) == 0x000008, "Wrong alignment on WBP_SpectatorCircuitWidget_C_TickUI");
static_assert(sizeof(WBP_SpectatorCircuitWidget_C_TickUI) == 0x000088, "Wrong size on WBP_SpectatorCircuitWidget_C_TickUI");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_GetRaceStartTime_ReturnValue) == 0x000000, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_GetRaceStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000010, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_FormatTime_ReturnValue) == 0x000028, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_FormatTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_GetRuleState_ReturnValue) == 0x000058, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_GetRuleState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000059, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00005C, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000060, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_PlayAnimation_ReturnValue_1) == 0x000068, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_PlayAnimation_ReturnValue_2) == 0x000070, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000078, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorCircuitWidget_C_TickUI, CallFunc_FormatTime_Time_ImplicitCast) == 0x000080, "Member 'WBP_SpectatorCircuitWidget_C_TickUI::CallFunc_FormatTime_Time_ImplicitCast' has a wrong offset!");

}

