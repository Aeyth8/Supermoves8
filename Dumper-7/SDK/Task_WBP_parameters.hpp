#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_WBP

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Task_WBP.Task_WBP_C.ExecuteUbergraph_Task_WBP
// 0x0090 (0x0090 - 0x0000)
struct Task_WBP_C_ExecuteUbergraph_Task_WBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UGymObjective*>                  CallFunc_GetAllObjectives_ReturnValue;             // 0x0010(0x0010)(ReferenceParm)
	class UGymObjective*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGymObjective*>                  CallFunc_GetAllObjectives_ReturnValue_1;           // 0x0038(0x0010)(ReferenceParm)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0054(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_WBP_C_ExecuteUbergraph_Task_WBP) == 0x000008, "Wrong alignment on Task_WBP_C_ExecuteUbergraph_Task_WBP");
static_assert(sizeof(Task_WBP_C_ExecuteUbergraph_Task_WBP) == 0x000090, "Wrong size on Task_WBP_C_ExecuteUbergraph_Task_WBP");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, EntryPoint) == 0x000000, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_GetAllObjectives_ReturnValue) == 0x000010, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_GetAllObjectives_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_Array_Get_Item) == 0x000020, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_GetAllObjectives_ReturnValue_1) == 0x000038, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_GetAllObjectives_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000051, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, K2Node_Event_IsDesignTime) == 0x000053, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, K2Node_Event_MyGeometry) == 0x000054, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_ExecuteUbergraph_Task_WBP, K2Node_Event_InDeltaTime) == 0x00008C, "Member 'Task_WBP_C_ExecuteUbergraph_Task_WBP::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function Task_WBP.Task_WBP_C.GetTimerBoxVisibility
// 0x0008 (0x0008 - 0x0000)
struct Task_WBP_C_GetTimerBoxVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTimedQuest_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_WBP_C_GetTimerBoxVisibility) == 0x000001, "Wrong alignment on Task_WBP_C_GetTimerBoxVisibility");
static_assert(sizeof(Task_WBP_C_GetTimerBoxVisibility) == 0x000008, "Wrong size on Task_WBP_C_GetTimerBoxVisibility");
static_assert(offsetof(Task_WBP_C_GetTimerBoxVisibility, ReturnValue) == 0x000000, "Member 'Task_WBP_C_GetTimerBoxVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_GetTimerBoxVisibility, Temp_bool_Variable) == 0x000001, "Member 'Task_WBP_C_GetTimerBoxVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_GetTimerBoxVisibility, Temp_byte_Variable) == 0x000002, "Member 'Task_WBP_C_GetTimerBoxVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_GetTimerBoxVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'Task_WBP_C_GetTimerBoxVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_GetTimerBoxVisibility, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'Task_WBP_C_GetTimerBoxVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_GetTimerBoxVisibility, CallFunc_IsTimedQuest_ReturnValue) == 0x000005, "Member 'Task_WBP_C_GetTimerBoxVisibility::CallFunc_IsTimedQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_GetTimerBoxVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'Task_WBP_C_GetTimerBoxVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_GetTimerBoxVisibility, K2Node_Select_Default) == 0x000007, "Member 'Task_WBP_C_GetTimerBoxVisibility::K2Node_Select_Default' has a wrong offset!");

// Function Task_WBP.Task_WBP_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Task_WBP_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_WBP_C_PreConstruct) == 0x000001, "Wrong alignment on Task_WBP_C_PreConstruct");
static_assert(sizeof(Task_WBP_C_PreConstruct) == 0x000001, "Wrong size on Task_WBP_C_PreConstruct");
static_assert(offsetof(Task_WBP_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Task_WBP_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Task_WBP.Task_WBP_C.Tick
// 0x003C (0x003C - 0x0000)
struct Task_WBP_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_WBP_C_Tick) == 0x000004, "Wrong alignment on Task_WBP_C_Tick");
static_assert(sizeof(Task_WBP_C_Tick) == 0x00003C, "Wrong size on Task_WBP_C_Tick");
static_assert(offsetof(Task_WBP_C_Tick, MyGeometry) == 0x000000, "Member 'Task_WBP_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Tick, InDeltaTime) == 0x000038, "Member 'Task_WBP_C_Tick::InDeltaTime' has a wrong offset!");

// Function Task_WBP.Task_WBP_C.Update
// 0x0040 (0x0040 - 0x0000)
struct Task_WBP_C_Update final
{
public:
	class UObjective_WBP_C*                       CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UGymObjective*>                  CallFunc_GetAllObjectives_ReturnValue;             // 0x0018(0x0010)(ReferenceParm)
	class UGymObjective*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_WBP_C_Update) == 0x000008, "Wrong alignment on Task_WBP_C_Update");
static_assert(sizeof(Task_WBP_C_Update) == 0x000040, "Wrong size on Task_WBP_C_Update");
static_assert(offsetof(Task_WBP_C_Update, CallFunc_Create_ReturnValue) == 0x000000, "Member 'Task_WBP_C_Update::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Update, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Task_WBP_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Update, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'Task_WBP_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Update, CallFunc_GetVisibility_ReturnValue) == 0x00000D, "Member 'Task_WBP_C_Update::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Update, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Task_WBP_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Task_WBP_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Update, CallFunc_GetAllObjectives_ReturnValue) == 0x000018, "Member 'Task_WBP_C_Update::CallFunc_GetAllObjectives_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Update, CallFunc_Array_Get_Item) == 0x000028, "Member 'Task_WBP_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Task_WBP_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'Task_WBP_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_Update, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000038, "Member 'Task_WBP_C_Update::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function Task_WBP.Task_WBP_C.UpdateTimer
// 0x0048 (0x0048 - 0x0000)
struct Task_WBP_C_UpdateTimer final
{
public:
	float                                         CallFunc_GetTimeLeft_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatTime_ReturnValue;                   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FormatTime_Time_ImplicitCast;             // 0x0040(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_WBP_C_UpdateTimer) == 0x000008, "Wrong alignment on Task_WBP_C_UpdateTimer");
static_assert(sizeof(Task_WBP_C_UpdateTimer) == 0x000048, "Wrong size on Task_WBP_C_UpdateTimer");
static_assert(offsetof(Task_WBP_C_UpdateTimer, CallFunc_GetTimeLeft_ReturnValue) == 0x000000, "Member 'Task_WBP_C_UpdateTimer::CallFunc_GetTimeLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_UpdateTimer, CallFunc_FMax_ReturnValue) == 0x000008, "Member 'Task_WBP_C_UpdateTimer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_UpdateTimer, CallFunc_FormatTime_ReturnValue) == 0x000010, "Member 'Task_WBP_C_UpdateTimer::CallFunc_FormatTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_UpdateTimer, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'Task_WBP_C_UpdateTimer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_UpdateTimer, CallFunc_FMax_A_ImplicitCast) == 0x000038, "Member 'Task_WBP_C_UpdateTimer::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Task_WBP_C_UpdateTimer, CallFunc_FormatTime_Time_ImplicitCast) == 0x000040, "Member 'Task_WBP_C_UpdateTimer::CallFunc_FormatTime_Time_ImplicitCast' has a wrong offset!");

}

