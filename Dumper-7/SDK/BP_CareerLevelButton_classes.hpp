#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CareerLevelButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TaskDataListStruct_structs.hpp"
#include "GYMGAME_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_CareerLevelButton.BP_CareerLevelButton_C
// 0x0120 (0x0408 - 0x02E8)
class UBP_CareerLevelButton_C final : public UGymGuiGenericButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoverPush;                                         // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoveredAnim;                                       // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                CompletedContainer;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CompletedTaskText;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              GameModeContainer;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         GoalsContainer;                                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           GoalsListContainer;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 GradientFadeGreen;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_GameMode;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              LockedContainer;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedIcon;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockedImage;                                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlaylistImage;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TapeImage;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHeader_Style1_H2_C*                    TitleTextBlock;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TitleText;                                         // 0x0368(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTexture2D*                             BackgroundImage;                                   // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 LocationID;                                        // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LevelName;                                         // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UGymSaveGameTutorial*                   SaveFile;                                          // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DevEnabled;                                        // 0x03B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTaskDataListStruct                    LevelData;                                         // 0x03C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsMarkedCompleted;                                 // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GameModeName;                                      // 0x03F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Inner_Enabled;                                     // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDemo;                                            // 0x0401(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowTape;                                          // 0x0402(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BP_CareerLevelButton_ButtonObject_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__BP_CareerLevelButton_ButtonObject_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void CustomEvent();
	void ExecuteUbergraph_BP_CareerLevelButton(int32 EntryPoint);
	void GetRequiredTasks(int32* Required_Points);
	void Init();
	void InitGameMode();
	void InitTape();
	void OnDisabledButtonClick();
	void Open();
	void PreConstruct(bool IsDesignTime);
	void SetCompletedTasks(int32 CompletedTasks, int32 MaxTasks);
	void Unlock(bool Unlocked);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CareerLevelButton_C">();
	}
	static class UBP_CareerLevelButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CareerLevelButton_C>();
	}
};
static_assert(alignof(UBP_CareerLevelButton_C) == 0x000008, "Wrong alignment on UBP_CareerLevelButton_C");
static_assert(sizeof(UBP_CareerLevelButton_C) == 0x000408, "Wrong size on UBP_CareerLevelButton_C");
static_assert(offsetof(UBP_CareerLevelButton_C, UberGraphFrame) == 0x0002E8, "Member 'UBP_CareerLevelButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, HoverPush) == 0x0002F0, "Member 'UBP_CareerLevelButton_C::HoverPush' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, HoveredAnim) == 0x0002F8, "Member 'UBP_CareerLevelButton_C::HoveredAnim' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, CompletedContainer) == 0x000300, "Member 'UBP_CareerLevelButton_C::CompletedContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, CompletedTaskText) == 0x000308, "Member 'UBP_CareerLevelButton_C::CompletedTaskText' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, GameModeContainer) == 0x000310, "Member 'UBP_CareerLevelButton_C::GameModeContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, GoalsContainer) == 0x000318, "Member 'UBP_CareerLevelButton_C::GoalsContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, GoalsListContainer) == 0x000320, "Member 'UBP_CareerLevelButton_C::GoalsListContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, GradientFadeGreen) == 0x000328, "Member 'UBP_CareerLevelButton_C::GradientFadeGreen' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, Icon_GameMode) == 0x000330, "Member 'UBP_CareerLevelButton_C::Icon_GameMode' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, LockedContainer) == 0x000338, "Member 'UBP_CareerLevelButton_C::LockedContainer' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, LockedIcon) == 0x000340, "Member 'UBP_CareerLevelButton_C::LockedIcon' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, LockedImage) == 0x000348, "Member 'UBP_CareerLevelButton_C::LockedImage' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, PlaylistImage) == 0x000350, "Member 'UBP_CareerLevelButton_C::PlaylistImage' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, TapeImage) == 0x000358, "Member 'UBP_CareerLevelButton_C::TapeImage' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, TitleTextBlock) == 0x000360, "Member 'UBP_CareerLevelButton_C::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, TitleText) == 0x000368, "Member 'UBP_CareerLevelButton_C::TitleText' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, BackgroundImage) == 0x000380, "Member 'UBP_CareerLevelButton_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, LocationID) == 0x000388, "Member 'UBP_CareerLevelButton_C::LocationID' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, Enabled) == 0x000398, "Member 'UBP_CareerLevelButton_C::Enabled' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, LevelName) == 0x0003A0, "Member 'UBP_CareerLevelButton_C::LevelName' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, SaveFile) == 0x0003B0, "Member 'UBP_CareerLevelButton_C::SaveFile' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, DevEnabled) == 0x0003B8, "Member 'UBP_CareerLevelButton_C::DevEnabled' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, LevelData) == 0x0003C0, "Member 'UBP_CareerLevelButton_C::LevelData' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, IsMarkedCompleted) == 0x0003E8, "Member 'UBP_CareerLevelButton_C::IsMarkedCompleted' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, GameModeName) == 0x0003F0, "Member 'UBP_CareerLevelButton_C::GameModeName' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, Inner_Enabled) == 0x000400, "Member 'UBP_CareerLevelButton_C::Inner_Enabled' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, IsDemo) == 0x000401, "Member 'UBP_CareerLevelButton_C::IsDemo' has a wrong offset!");
static_assert(offsetof(UBP_CareerLevelButton_C, ShowTape) == 0x000402, "Member 'UBP_CareerLevelButton_C::ShowTape' has a wrong offset!");

}

