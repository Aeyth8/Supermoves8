#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RollDownSlope_ActorComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RollDownSlope_ActorComponent.RollDownSlope_ActorComponent_C.CalculateRollRightAmount
// 0x0098 (0x0098 - 0x0000)
struct RollDownSlope_ActorComponent_C_CalculateRollRightAmount final
{
public:
	double                                        RollRightAmount_0;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount) == 0x000008, "Wrong alignment on RollDownSlope_ActorComponent_C_CalculateRollRightAmount");
static_assert(sizeof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount) == 0x000098, "Wrong size on RollDownSlope_ActorComponent_C_CalculateRollRightAmount");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount, RollRightAmount_0) == 0x000000, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRightAmount::RollRightAmount_0' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000008, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRightAmount::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount, CallFunc_GetSocketRotation_ReturnValue) == 0x000020, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRightAmount::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount, CallFunc_Normal_ReturnValue) == 0x000038, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRightAmount::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount, CallFunc_GetForwardVector_ReturnValue) == 0x000050, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRightAmount::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount, CallFunc_Cross_VectorVector_ReturnValue) == 0x000068, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRightAmount::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount, CallFunc_BreakVector_X) == 0x000080, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRightAmount::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount, CallFunc_BreakVector_Y) == 0x000088, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRightAmount::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRightAmount, CallFunc_BreakVector_Z) == 0x000090, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRightAmount::CallFunc_BreakVector_Z' has a wrong offset!");

// Function RollDownSlope_ActorComponent.RollDownSlope_ActorComponent_C.CalculateRollRLPhase
// 0x0068 (0x0068 - 0x0000)
struct RollDownSlope_ActorComponent_C_CalculateRollRLPhase final
{
public:
	double                                        Phase;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FWrap_ReturnValue;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase) == 0x000008, "Wrong alignment on RollDownSlope_ActorComponent_C_CalculateRollRLPhase");
static_assert(sizeof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase) == 0x000068, "Wrong size on RollDownSlope_ActorComponent_C_CalculateRollRLPhase");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase, Phase) == 0x000000, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRLPhase::Phase' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase, CallFunc_GetSocketRotation_ReturnValue) == 0x000008, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRLPhase::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase, CallFunc_GetRightVector_ReturnValue) == 0x000020, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRLPhase::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase, CallFunc_Dot_VectorVector_ReturnValue) == 0x000038, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRLPhase::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000040, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRLPhase::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase, CallFunc_DegAtan2_ReturnValue) == 0x000048, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRLPhase::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRLPhase::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase, CallFunc_FWrap_ReturnValue) == 0x000058, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRLPhase::CallFunc_FWrap_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_CalculateRollRLPhase, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000060, "Member 'RollDownSlope_ActorComponent_C_CalculateRollRLPhase::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");

// Function RollDownSlope_ActorComponent.RollDownSlope_ActorComponent_C.Get Slope
// 0x0BF8 (0x0BF8 - 0x0000)
struct RollDownSlope_ActorComponent_C_Get_Slope final
{
public:
	struct FVector                                PelvisPosition;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SlopePosition;                                     // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SlopeNormal_0;                                     // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundSlope;                                        // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0050(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0078(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_4;                            // 0x0098(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x02A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393[0x1];                                      // 0x0393(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46A[0x2];                                      // 0x046A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x04E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_5;      // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x05A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_3;                 // 0x0690(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_3;            // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0779(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x077A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x077B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_784[0x4];                                      // 0x0784(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x07B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x07D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x07E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x07F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x07F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81C[0x4];                                      // 0x081C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0820(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_852[0x2];                                      // 0x0852(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x0860(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x0878(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x0890(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x08A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x08C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x08C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x08D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_3;                // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F4[0x4];                                      // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0910(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0928(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_6;      // 0x0940(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_7;      // 0x0958(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_4;                 // 0x0988(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_4;            // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A71[0x7];                                      // 0x0A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A81[0x7];                                      // 0x0A81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x0A88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_4;            // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_4;         // 0x0AA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA2[0x2];                                      // 0x0AA2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_4;                    // 0x0AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_4;                // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AAC[0x4];                                      // 0x0AAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_4;                // 0x0AB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_4;             // 0x0AC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_4;                  // 0x0AE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_4;            // 0x0AF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_4;                 // 0x0B10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_4;                // 0x0B18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_4;            // 0x0B20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_4;             // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_4;                // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_4;                 // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_4;            // 0x0B3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_4;               // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B44[0x4];                                      // 0x0B44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_4;              // 0x0B48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_4;                // 0x0B60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_8;      // 0x0B78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x0BB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0BC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0BE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RollDownSlope_ActorComponent_C_Get_Slope) == 0x000008, "Wrong alignment on RollDownSlope_ActorComponent_C_Get_Slope");
static_assert(sizeof(RollDownSlope_ActorComponent_C_Get_Slope) == 0x000BF8, "Wrong size on RollDownSlope_ActorComponent_C_Get_Slope");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, PelvisPosition) == 0x000000, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::PelvisPosition' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, SlopePosition) == 0x000018, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::SlopePosition' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, SlopeNormal_0) == 0x000030, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::SlopeNormal_0' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, FoundSlope) == 0x000048, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::FoundSlope' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, Temp_object_Variable) == 0x000050, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, Temp_object_Variable_1) == 0x000060, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, Temp_object_Variable_2) == 0x000078, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, Temp_object_Variable_3) == 0x000088, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, Temp_object_Variable_4) == 0x000098, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_MakeVector_ReturnValue_1) == 0x0000C8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_MakeVector_ReturnValue_2) == 0x0000E0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_MakeVector_ReturnValue_3) == 0x0000F8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_MakeVector_ReturnValue_4) == 0x000110, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_MakeVector_ReturnValue_5) == 0x000128, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_MakeVector_ReturnValue_6) == 0x000140, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Add_VectorVector_ReturnValue) == 0x000158, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000170, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000188, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_LineTraceSingle_OutHit) == 0x0001A0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_LineTraceSingle_ReturnValue) == 0x000288, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000290, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_LineTraceSingle_OutHit_1) == 0x0002A8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000390, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_bBlockingHit) == 0x000391, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_bInitialOverlap) == 0x000392, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Time) == 0x000394, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Distance) == 0x000398, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Location) == 0x0003A0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ImpactPoint) == 0x0003B8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Normal) == 0x0003D0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ImpactNormal) == 0x0003E8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_PhysMat) == 0x000400, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitActor) == 0x000408, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitComponent) == 0x000410, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitBoneName) == 0x000418, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_BoneName) == 0x000420, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitItem) == 0x000428, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ElementIndex) == 0x00042C, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_FaceIndex) == 0x000430, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_TraceStart) == 0x000438, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_TraceEnd) == 0x000450, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000468, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000469, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Time_1) == 0x00046C, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Distance_1) == 0x000470, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Location_1) == 0x000478, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000490, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Normal_1) == 0x0004A8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0004C0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_PhysMat_1) == 0x0004D8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitActor_1) == 0x0004E0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitComponent_1) == 0x0004E8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitBoneName_1) == 0x0004F0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_BoneName_1) == 0x0004F8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitItem_1) == 0x000500, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ElementIndex_1) == 0x000504, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_FaceIndex_1) == 0x000508, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_TraceStart_1) == 0x000510, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_TraceEnd_1) == 0x000528, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000540, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000558, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x000570, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Subtract_VectorVector_ReturnValue_5) == 0x000588, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Subtract_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_LineTraceSingle_OutHit_2) == 0x0005A0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_LineTraceSingle_ReturnValue_2) == 0x000688, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_LineTraceSingle_OutHit_3) == 0x000690, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_LineTraceSingle_OutHit_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_LineTraceSingle_ReturnValue_3) == 0x000778, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_LineTraceSingle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BooleanAND_ReturnValue) == 0x000779, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_bBlockingHit_2) == 0x00077A, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x00077B, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Time_2) == 0x00077C, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Distance_2) == 0x000780, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Location_2) == 0x000788, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ImpactPoint_2) == 0x0007A0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Normal_2) == 0x0007B8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0007D0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_PhysMat_2) == 0x0007E8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitActor_2) == 0x0007F0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitComponent_2) == 0x0007F8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitBoneName_2) == 0x000800, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_BoneName_2) == 0x000808, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitItem_2) == 0x000810, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ElementIndex_2) == 0x000814, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_FaceIndex_2) == 0x000818, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_TraceStart_2) == 0x000820, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_TraceEnd_2) == 0x000838, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_bBlockingHit_3) == 0x000850, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x000851, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Time_3) == 0x000854, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Distance_3) == 0x000858, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Location_3) == 0x000860, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ImpactPoint_3) == 0x000878, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Normal_3) == 0x000890, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ImpactNormal_3) == 0x0008A8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_PhysMat_3) == 0x0008C0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitActor_3) == 0x0008C8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitComponent_3) == 0x0008D0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitBoneName_3) == 0x0008D8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_BoneName_3) == 0x0008E0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_BoneName_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitItem_3) == 0x0008E8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ElementIndex_3) == 0x0008EC, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_FaceIndex_3) == 0x0008F0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_TraceStart_3) == 0x0008F8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_TraceEnd_3) == 0x000910, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000928, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Subtract_VectorVector_ReturnValue_6) == 0x000940, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Subtract_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Subtract_VectorVector_ReturnValue_7) == 0x000958, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Subtract_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakVector_X) == 0x000970, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakVector_Y) == 0x000978, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakVector_Z) == 0x000980, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_LineTraceSingle_OutHit_4) == 0x000988, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_LineTraceSingle_OutHit_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_LineTraceSingle_ReturnValue_4) == 0x000A70, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_LineTraceSingle_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_SelectFloat_ReturnValue) == 0x000A78, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BooleanAND_ReturnValue_1) == 0x000A80, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_MakeVector_ReturnValue_7) == 0x000A88, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_bBlockingHit_4) == 0x000AA0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_bBlockingHit_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_bInitialOverlap_4) == 0x000AA1, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_bInitialOverlap_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Time_4) == 0x000AA4, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Time_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Distance_4) == 0x000AA8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Distance_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Location_4) == 0x000AB0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Location_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ImpactPoint_4) == 0x000AC8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ImpactPoint_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_Normal_4) == 0x000AE0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_Normal_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ImpactNormal_4) == 0x000AF8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ImpactNormal_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_PhysMat_4) == 0x000B10, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_PhysMat_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitActor_4) == 0x000B18, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitActor_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitComponent_4) == 0x000B20, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitComponent_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitBoneName_4) == 0x000B28, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitBoneName_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_BoneName_4) == 0x000B30, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_BoneName_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_HitItem_4) == 0x000B38, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_HitItem_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_ElementIndex_4) == 0x000B3C, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_ElementIndex_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_FaceIndex_4) == 0x000B40, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_FaceIndex_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_TraceStart_4) == 0x000B48, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_TraceStart_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakHitResult_TraceEnd_4) == 0x000B60, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakHitResult_TraceEnd_4' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Subtract_VectorVector_ReturnValue_8) == 0x000B78, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Subtract_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakVector_X_1) == 0x000B90, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakVector_Y_1) == 0x000B98, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_BreakVector_Z_1) == 0x000BA0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_SelectFloat_ReturnValue_1) == 0x000BA8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_MakeVector_ReturnValue_8) == 0x000BB0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Cross_VectorVector_ReturnValue) == 0x000BC8, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Get_Slope, CallFunc_Normal_ReturnValue) == 0x000BE0, "Member 'RollDownSlope_ActorComponent_C_Get_Slope::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function RollDownSlope_ActorComponent.RollDownSlope_ActorComponent_C.InitializeOwnerVars
// 0x0020 (0x0020 - 0x0000)
struct RollDownSlope_ActorComponent_C_InitializeOwnerVars final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysical_Behavior_ActorComponent_C*    CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RollDownSlope_ActorComponent_C_InitializeOwnerVars) == 0x000008, "Wrong alignment on RollDownSlope_ActorComponent_C_InitializeOwnerVars");
static_assert(sizeof(RollDownSlope_ActorComponent_C_InitializeOwnerVars) == 0x000020, "Wrong size on RollDownSlope_ActorComponent_C_InitializeOwnerVars");
static_assert(offsetof(RollDownSlope_ActorComponent_C_InitializeOwnerVars, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'RollDownSlope_ActorComponent_C_InitializeOwnerVars::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_InitializeOwnerVars, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'RollDownSlope_ActorComponent_C_InitializeOwnerVars::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_InitializeOwnerVars, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'RollDownSlope_ActorComponent_C_InitializeOwnerVars::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_InitializeOwnerVars, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'RollDownSlope_ActorComponent_C_InitializeOwnerVars::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function RollDownSlope_ActorComponent.RollDownSlope_ActorComponent_C.Update Roll Down Slope
// 0x0100 (0x0100 - 0x0000)
struct RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope final
{
public:
	double                                        CallFunc_CalculateRollRLPhase_Phase;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
	double                                        CallFunc_CalculateRollRightAmount_RollRightAmount; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00E8(0x0018)()
};
static_assert(alignof(RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope) == 0x000008, "Wrong alignment on RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope");
static_assert(sizeof(RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope) == 0x000100, "Wrong size on RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope, CallFunc_CalculateRollRLPhase_Phase) == 0x000000, "Member 'RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope::CallFunc_CalculateRollRLPhase_Phase' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope, K2Node_MakeArray_Array) == 0x000058, "Member 'RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope, CallFunc_Format_ReturnValue) == 0x000068, "Member 'RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope, CallFunc_CalculateRollRightAmount_RollRightAmount) == 0x000080, "Member 'RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope::CallFunc_CalculateRollRightAmount_RollRightAmount' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope, CallFunc_Format_ReturnValue_1) == 0x0000E8, "Member 'RollDownSlope_ActorComponent_C_Update_Roll_Down_Slope::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function RollDownSlope_ActorComponent.RollDownSlope_ActorComponent_C.UpdateRollDownSlopeForces
// 0x00E0 (0x00E0 - 0x0000)
struct RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0018)()
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces) == 0x000008, "Wrong alignment on RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces");
static_assert(sizeof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces) == 0x0000E0, "Wrong size on RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, K2Node_MakeArray_Array) == 0x000070, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000080, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, CallFunc_Format_ReturnValue) == 0x000098, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, CallFunc_MapRangeClamped_ReturnValue) == 0x0000B0, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B8, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces, CallFunc_SelectFloat_ReturnValue) == 0x0000D8, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeForces::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function RollDownSlope_ActorComponent.RollDownSlope_ActorComponent_C.UpdateRollDownSlopeStrengths
// 0x0100 (0x0100 - 0x0000)
struct RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths final
{
public:
	double                                        DampingMultiplier;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StrengthMultiplier;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
	TArray<struct FConstraintInstanceAccessor>    CallFunc_GetConstraints_OutConstraints;            // 0x00A8(0x0010)(ReferenceParm)
	struct FConstraintInstanceAccessor            CallFunc_Array_Get_Item;                           // 0x00B8(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngularDriveParams_OutPositionStrength; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngularDriveParams_OutVelocityStrength; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngularDriveParams_OutForceLimit;      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAngularDriveParams_VelocityStrength_ImplicitCast; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAngularDriveParams_PositionStrength_ImplicitCast; // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths) == 0x000008, "Wrong alignment on RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths");
static_assert(sizeof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths) == 0x000100, "Wrong size on RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, DampingMultiplier) == 0x000000, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::DampingMultiplier' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, StrengthMultiplier) == 0x000008, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::StrengthMultiplier' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, Temp_int_Array_Index_Variable) == 0x000010, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000028, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, K2Node_MakeArray_Array) == 0x000080, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_Format_ReturnValue) == 0x000090, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_GetConstraints_OutConstraints) == 0x0000A8, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_GetConstraints_OutConstraints' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_GetAngularDriveParams_OutPositionStrength) == 0x0000C8, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_GetAngularDriveParams_OutPositionStrength' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_GetAngularDriveParams_OutVelocityStrength) == 0x0000CC, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_GetAngularDriveParams_OutVelocityStrength' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_GetAngularDriveParams_OutForceLimit) == 0x0000D0, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_GetAngularDriveParams_OutForceLimit' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000E8, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0000F0, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_SetAngularDriveParams_VelocityStrength_ImplicitCast) == 0x0000F8, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_SetAngularDriveParams_VelocityStrength_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths, CallFunc_SetAngularDriveParams_PositionStrength_ImplicitCast) == 0x0000FC, "Member 'RollDownSlope_ActorComponent_C_UpdateRollDownSlopeStrengths::CallFunc_SetAngularDriveParams_PositionStrength_ImplicitCast' has a wrong offset!");

// Function RollDownSlope_ActorComponent.RollDownSlope_ActorComponent_C.UpdateSlopeInfo
// 0x0138 (0x0138 - 0x0000)
struct RollDownSlope_ActorComponent_C_UpdateSlopeInfo final
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0018)()
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Slope_SlopePosition;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Slope_SlopeNormal;                    // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Slope_FoundSlope;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo) == 0x000008, "Wrong alignment on RollDownSlope_ActorComponent_C_UpdateSlopeInfo");
static_assert(sizeof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo) == 0x000138, "Wrong size on RollDownSlope_ActorComponent_C_UpdateSlopeInfo");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, K2Node_MakeArray_Array) == 0x000050, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_Format_ReturnValue) == 0x000060, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000078, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_BreakVector_X) == 0x000080, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_BreakVector_Y) == 0x000088, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_BreakVector_Z) == 0x000090, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_DegAcos_ReturnValue) == 0x000098, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000A0, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_Normal_ReturnValue) == 0x0000B8, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_GetSocketLocation_ReturnValue) == 0x0000E8, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_Get_Slope_SlopePosition) == 0x000100, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_Get_Slope_SlopePosition' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_Get_Slope_SlopeNormal) == 0x000118, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_Get_Slope_SlopeNormal' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSlopeInfo, CallFunc_Get_Slope_FoundSlope) == 0x000130, "Member 'RollDownSlope_ActorComponent_C_UpdateSlopeInfo::CallFunc_Get_Slope_FoundSlope' has a wrong offset!");

// Function RollDownSlope_ActorComponent.RollDownSlope_ActorComponent_C.UpdateSmoothedRollSpeed
// 0x0108 (0x0108 - 0x0000)
struct RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed final
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSkeletalCenterOfMass_ReturnValue;      // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_ReturnValue;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_Current_ImplicitCast;   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FloatSpringInterp_Target_ImplicitCast;    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_SmoothedRollSpeed_ImplicitCast; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed) == 0x000008, "Wrong alignment on RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed");
static_assert(sizeof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed) == 0x000108, "Wrong size on RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, K2Node_MakeArray_Array) == 0x000050, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000060, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_Format_ReturnValue) == 0x000068, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000080, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000098, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_GetSkeletalCenterOfMass_ReturnValue) == 0x0000A0, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_GetSkeletalCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B8, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_Divide_VectorVector_ReturnValue) == 0x0000D0, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_VSizeXY_ReturnValue) == 0x0000E8, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_FloatSpringInterp_ReturnValue) == 0x0000F0, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_FloatSpringInterp_ReturnValue' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast) == 0x0000F4, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_FloatSpringInterp_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_FloatSpringInterp_Current_ImplicitCast) == 0x0000F8, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_FloatSpringInterp_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, CallFunc_FloatSpringInterp_Target_ImplicitCast) == 0x0000FC, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::CallFunc_FloatSpringInterp_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed, K2Node_VariableSet_SmoothedRollSpeed_ImplicitCast) == 0x000100, "Member 'RollDownSlope_ActorComponent_C_UpdateSmoothedRollSpeed::K2Node_VariableSet_SmoothedRollSpeed_ImplicitCast' has a wrong offset!");

}

