#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GymRuleStateWidgetPlaylist

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "GYMGAME_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GymRuleStateWidgetPlaylist.WBP_GymRuleStateWidgetPlaylist_C
// 0x0020 (0x0360 - 0x0340)
class UWBP_GymRuleStateWidgetPlaylist_C final : public UGymGuiRuleStateWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             RuleStatusText;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EGymRuleParticipantState                      LastRuleStatus;                                    // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RunningStartTime;                                  // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_GymRuleStateWidgetPlaylist(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GymRuleStateWidgetPlaylist_C">();
	}
	static class UWBP_GymRuleStateWidgetPlaylist_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GymRuleStateWidgetPlaylist_C>();
	}
};
static_assert(alignof(UWBP_GymRuleStateWidgetPlaylist_C) == 0x000008, "Wrong alignment on UWBP_GymRuleStateWidgetPlaylist_C");
static_assert(sizeof(UWBP_GymRuleStateWidgetPlaylist_C) == 0x000360, "Wrong size on UWBP_GymRuleStateWidgetPlaylist_C");
static_assert(offsetof(UWBP_GymRuleStateWidgetPlaylist_C, UberGraphFrame) == 0x000340, "Member 'UWBP_GymRuleStateWidgetPlaylist_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetPlaylist_C, RuleStatusText) == 0x000348, "Member 'UWBP_GymRuleStateWidgetPlaylist_C::RuleStatusText' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetPlaylist_C, LastRuleStatus) == 0x000350, "Member 'UWBP_GymRuleStateWidgetPlaylist_C::LastRuleStatus' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetPlaylist_C, RunningStartTime) == 0x000358, "Member 'UWBP_GymRuleStateWidgetPlaylist_C::RunningStartTime' has a wrong offset!");

}

