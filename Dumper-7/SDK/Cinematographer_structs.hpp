#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cinematographer

#include "Basic.hpp"


namespace SDK
{

// Enum Cinematographer.ERealCameraMode
// NumValues: 0x0004
enum class ERealCameraMode : uint8
{
	Photography                              = 0,
	Movie                                    = 1,
	Game                                     = 2,
	MAX                                      = 3,
};

// Enum Cinematographer.EAutoExposureMode
// NumValues: 0x0005
enum class EAutoExposureMode : uint8
{
	FullAutomatic                            = 0,
	AperturePriority                         = 1,
	ShutterPriority                          = 2,
	Off                                      = 3,
	EAutoExposureMode_MAX                    = 4,
};

// Enum Cinematographer.ECompensationSteps
// NumValues: 0x0014
enum class ECompensationSteps : uint8
{
	Three                                    = 0,
	TwoAndTwoThirds                          = 1,
	TwoAndOneThird                           = 2,
	Two                                      = 3,
	OneAndTwoThirds                          = 4,
	OneAndEonThird                           = 5,
	One                                      = 6,
	TwoThirds                                = 7,
	OneThird                                 = 8,
	Zero                                     = 9,
	MinusOneThird                            = 10,
	MinusTwoThirds                           = 11,
	MinusOne                                 = 12,
	MinusOneAndEonThird                      = 13,
	MinusOneAndTwoThirds                     = 14,
	MinusTwo                                 = 15,
	MinusTwoAndOneThird                      = 16,
	MinusTwoAndTwoThirds                     = 17,
	MinusThree                               = 18,
	ECompensationSteps_MAX                   = 19,
};

// ScriptStruct Cinematographer.CameraShutterSettings
// 0x0014 (0x0014 - 0x0000)
struct FCameraShutterSettings final
{
public:
	ERealCameraMode                               CameraMode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentShutterSpeed;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetFPS;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SimulatedFPS;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentShutterAngle;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCameraShutterSettings) == 0x000004, "Wrong alignment on FCameraShutterSettings");
static_assert(sizeof(FCameraShutterSettings) == 0x000014, "Wrong size on FCameraShutterSettings");
static_assert(offsetof(FCameraShutterSettings, CameraMode) == 0x000000, "Member 'FCameraShutterSettings::CameraMode' has a wrong offset!");
static_assert(offsetof(FCameraShutterSettings, CurrentShutterSpeed) == 0x000004, "Member 'FCameraShutterSettings::CurrentShutterSpeed' has a wrong offset!");
static_assert(offsetof(FCameraShutterSettings, TargetFPS) == 0x000008, "Member 'FCameraShutterSettings::TargetFPS' has a wrong offset!");
static_assert(offsetof(FCameraShutterSettings, SimulatedFPS) == 0x00000C, "Member 'FCameraShutterSettings::SimulatedFPS' has a wrong offset!");
static_assert(offsetof(FCameraShutterSettings, CurrentShutterAngle) == 0x000010, "Member 'FCameraShutterSettings::CurrentShutterAngle' has a wrong offset!");

}

