#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_XPcondensed

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_XPcondensed.BP_XPcondensed_C.ExecuteUbergraph_BP_XPcondensed
// 0x0058 (0x0058 - 0x0000)
struct BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_BaseXP;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Multiplier;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TotalXP;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0040(0x0018)()
};
static_assert(alignof(BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed) == 0x000008, "Wrong alignment on BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed");
static_assert(sizeof(BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed) == 0x000058, "Wrong size on BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed");
static_assert(offsetof(BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed, EntryPoint) == 0x000000, "Member 'BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed, K2Node_CustomEvent_BaseXP) == 0x000004, "Member 'BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed::K2Node_CustomEvent_BaseXP' has a wrong offset!");
static_assert(offsetof(BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed, K2Node_CustomEvent_Multiplier) == 0x000008, "Member 'BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed::K2Node_CustomEvent_Multiplier' has a wrong offset!");
static_assert(offsetof(BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed, K2Node_CustomEvent_TotalXP) == 0x00000C, "Member 'BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed::K2Node_CustomEvent_TotalXP' has a wrong offset!");
static_assert(offsetof(BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000028, "Member 'BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000040, "Member 'BP_XPcondensed_C_ExecuteUbergraph_BP_XPcondensed::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");

// Function BP_XPcondensed.BP_XPcondensed_C.SetData
// 0x000C (0x000C - 0x0000)
struct BP_XPcondensed_C_SetData final
{
public:
	int32                                         BaseXP_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Multiplier_0;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalXP_0;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_XPcondensed_C_SetData) == 0x000004, "Wrong alignment on BP_XPcondensed_C_SetData");
static_assert(sizeof(BP_XPcondensed_C_SetData) == 0x00000C, "Wrong size on BP_XPcondensed_C_SetData");
static_assert(offsetof(BP_XPcondensed_C_SetData, BaseXP_0) == 0x000000, "Member 'BP_XPcondensed_C_SetData::BaseXP_0' has a wrong offset!");
static_assert(offsetof(BP_XPcondensed_C_SetData, Multiplier_0) == 0x000004, "Member 'BP_XPcondensed_C_SetData::Multiplier_0' has a wrong offset!");
static_assert(offsetof(BP_XPcondensed_C_SetData, TotalXP_0) == 0x000008, "Member 'BP_XPcondensed_C_SetData::TotalXP_0' has a wrong offset!");

}

