#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ExploreSidebarButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ExploreSidebarButton.WBP_ExploreSidebarButton_C
// 0x0078 (0x0380 - 0x0308)
class UWBP_ExploreSidebarButton_C final : public UGymGuiGenericTabButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HoverAnim;                                         // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 IconImage;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                StrokeBG;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SubCategorySpacer;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0338(0x0018)(Edit, BlueprintVisible)
	class UTexture2D*                             Icon;                                              // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SubCategory;                                       // 0x0358(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             On_Clicked;                                        // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   GameModeName;                                      // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_ExploreSidebarButton_ButtonObject_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_ExploreSidebarButton_ButtonObject_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_ExploreSidebarButton_ButtonObject_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature();
	void ExecuteUbergraph_WBP_ExploreSidebarButton(int32 EntryPoint);
	void On_Clicked__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void Select();
	void Unselect();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ExploreSidebarButton_C">();
	}
	static class UWBP_ExploreSidebarButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ExploreSidebarButton_C>();
	}
};
static_assert(alignof(UWBP_ExploreSidebarButton_C) == 0x000008, "Wrong alignment on UWBP_ExploreSidebarButton_C");
static_assert(sizeof(UWBP_ExploreSidebarButton_C) == 0x000380, "Wrong size on UWBP_ExploreSidebarButton_C");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, UberGraphFrame) == 0x000308, "Member 'UWBP_ExploreSidebarButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, HoverAnim) == 0x000310, "Member 'UWBP_ExploreSidebarButton_C::HoverAnim' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, IconImage) == 0x000318, "Member 'UWBP_ExploreSidebarButton_C::IconImage' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, StrokeBG) == 0x000320, "Member 'UWBP_ExploreSidebarButton_C::StrokeBG' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, SubCategorySpacer) == 0x000328, "Member 'UWBP_ExploreSidebarButton_C::SubCategorySpacer' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, TextBlock) == 0x000330, "Member 'UWBP_ExploreSidebarButton_C::TextBlock' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, Text) == 0x000338, "Member 'UWBP_ExploreSidebarButton_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, Icon) == 0x000350, "Member 'UWBP_ExploreSidebarButton_C::Icon' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, SubCategory) == 0x000358, "Member 'UWBP_ExploreSidebarButton_C::SubCategory' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, On_Clicked) == 0x000360, "Member 'UWBP_ExploreSidebarButton_C::On_Clicked' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, GameModeName) == 0x000370, "Member 'UWBP_ExploreSidebarButton_C::GameModeName' has a wrong offset!");
static_assert(offsetof(UWBP_ExploreSidebarButton_C, Selected) == 0x000378, "Member 'UWBP_ExploreSidebarButton_C::Selected' has a wrong offset!");

}

