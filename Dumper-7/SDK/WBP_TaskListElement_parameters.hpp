#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TaskListElement

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_TaskListElement.WBP_TaskListElement_C.ExecuteUbergraph_WBP_TaskListElement
// 0x0048 (0x0048 - 0x0000)
struct WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0020(0x0014)()
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x0034(0x0014)()
};
static_assert(alignof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement) == 0x000004, "Wrong alignment on WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement");
static_assert(sizeof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement) == 0x000048, "Wrong size on WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement");
static_assert(offsetof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement, EntryPoint) == 0x000000, "Member 'WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement, Temp_bool_Variable) == 0x000018, "Member 'WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement, Temp_byte_Variable) == 0x000019, "Member 'WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement, Temp_bool_Variable_1) == 0x00001B, "Member 'WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement, K2Node_Event_IsDesignTime) == 0x00001C, "Member 'WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement, K2Node_Select_Default) == 0x00001D, "Member 'WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement, K2Node_MakeStruct_SlateColor_1) == 0x000020, "Member 'WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement, K2Node_Select_Default_1) == 0x000034, "Member 'WBP_TaskListElement_C_ExecuteUbergraph_WBP_TaskListElement::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_TaskListElement.WBP_TaskListElement_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TaskListElement_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TaskListElement_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TaskListElement_C_PreConstruct");
static_assert(sizeof(WBP_TaskListElement_C_PreConstruct) == 0x000001, "Wrong size on WBP_TaskListElement_C_PreConstruct");
static_assert(offsetof(WBP_TaskListElement_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TaskListElement_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

