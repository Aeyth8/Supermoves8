#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpectatorBombWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"


namespace SDK::Params
{

// Function WBP_SpectatorBombWidget.WBP_SpectatorBombWidget_C.ExecuteUbergraph_WBP_SpectatorBombWidget
// 0x0058 (0x0058 - 0x0000)
struct WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TickVignette_DeltaTime_ImplicitCast;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget) == 0x000008, "Wrong alignment on WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget");
static_assert(sizeof(WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget) == 0x000058, "Wrong size on WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget");
static_assert(offsetof(WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget, EntryPoint) == 0x000000, "Member 'WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000004, "Member 'WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget, K2Node_Event_MyGeometry) == 0x000008, "Member 'WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000048, "Member 'WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget, CallFunc_TickVignette_DeltaTime_ImplicitCast) == 0x000050, "Member 'WBP_SpectatorBombWidget_C_ExecuteUbergraph_WBP_SpectatorBombWidget::CallFunc_TickVignette_DeltaTime_ImplicitCast' has a wrong offset!");

// Function WBP_SpectatorBombWidget.WBP_SpectatorBombWidget_C.Get_RoundText_Text
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_SpectatorBombWidget_C_Get_RoundText_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRoundNum_ReturnValue;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(WBP_SpectatorBombWidget_C_Get_RoundText_Text) == 0x000008, "Wrong alignment on WBP_SpectatorBombWidget_C_Get_RoundText_Text");
static_assert(sizeof(WBP_SpectatorBombWidget_C_Get_RoundText_Text) == 0x0000A0, "Wrong size on WBP_SpectatorBombWidget_C_Get_RoundText_Text");
static_assert(offsetof(WBP_SpectatorBombWidget_C_Get_RoundText_Text, ReturnValue) == 0x000000, "Member 'WBP_SpectatorBombWidget_C_Get_RoundText_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_Get_RoundText_Text, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_SpectatorBombWidget_C_Get_RoundText_Text::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_Get_RoundText_Text, CallFunc_GetRoundNum_ReturnValue) == 0x00001C, "Member 'WBP_SpectatorBombWidget_C_Get_RoundText_Text::CallFunc_GetRoundNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_Get_RoundText_Text, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'WBP_SpectatorBombWidget_C_Get_RoundText_Text::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_Get_RoundText_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WBP_SpectatorBombWidget_C_Get_RoundText_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_Get_RoundText_Text, K2Node_MakeArray_Array) == 0x000078, "Member 'WBP_SpectatorBombWidget_C_Get_RoundText_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_Get_RoundText_Text, CallFunc_Format_ReturnValue) == 0x000088, "Member 'WBP_SpectatorBombWidget_C_Get_RoundText_Text::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_SpectatorBombWidget.WBP_SpectatorBombWidget_C.GetBombCounterText
// 0x0108 (0x0108 - 0x0000)
struct WBP_SpectatorBombWidget_C_GetBombCounterText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class UGymBombModeReplicatedData*             CallFunc_GetRuleData_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBombNum_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetParticipantsRunning_ReturnValue;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
};
static_assert(alignof(WBP_SpectatorBombWidget_C_GetBombCounterText) == 0x000008, "Wrong alignment on WBP_SpectatorBombWidget_C_GetBombCounterText");
static_assert(sizeof(WBP_SpectatorBombWidget_C_GetBombCounterText) == 0x000108, "Wrong size on WBP_SpectatorBombWidget_C_GetBombCounterText");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, ReturnValue) == 0x000000, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, CallFunc_GetRuleData_ReturnValue) == 0x000018, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::CallFunc_GetRuleData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, CallFunc_GetBombNum_ReturnValue) == 0x000024, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::CallFunc_GetBombNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000028, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, CallFunc_GetParticipantsRunning_ReturnValue) == 0x000030, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::CallFunc_GetParticipantsRunning_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000088, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, K2Node_MakeArray_Array) == 0x0000E0, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetBombCounterText, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'WBP_SpectatorBombWidget_C_GetBombCounterText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_SpectatorBombWidget.WBP_SpectatorBombWidget_C.GetGameState
// 0x0028 (0x0028 - 0x0000)
struct WBP_SpectatorBombWidget_C_GetGameState final
{
public:
	class AGymGameState*                          State;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGymGameState*                          K2Node_DynamicCast_AsGym_Game_State;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorBombWidget_C_GetGameState) == 0x000008, "Wrong alignment on WBP_SpectatorBombWidget_C_GetGameState");
static_assert(sizeof(WBP_SpectatorBombWidget_C_GetGameState) == 0x000028, "Wrong size on WBP_SpectatorBombWidget_C_GetGameState");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetGameState, State) == 0x000000, "Member 'WBP_SpectatorBombWidget_C_GetGameState::State' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetGameState, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WBP_SpectatorBombWidget_C_GetGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetGameState, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_SpectatorBombWidget_C_GetGameState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetGameState, K2Node_DynamicCast_AsGym_Game_State) == 0x000018, "Member 'WBP_SpectatorBombWidget_C_GetGameState::K2Node_DynamicCast_AsGym_Game_State' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_GetGameState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_SpectatorBombWidget_C_GetGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_SpectatorBombWidget.WBP_SpectatorBombWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_SpectatorBombWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorBombWidget_C_Tick) == 0x000004, "Wrong alignment on WBP_SpectatorBombWidget_C_Tick");
static_assert(sizeof(WBP_SpectatorBombWidget_C_Tick) == 0x00003C, "Wrong size on WBP_SpectatorBombWidget_C_Tick");
static_assert(offsetof(WBP_SpectatorBombWidget_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_SpectatorBombWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_SpectatorBombWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_SpectatorBombWidget.WBP_SpectatorBombWidget_C.TickParticipantAndRule
// 0x0010 (0x0010 - 0x0000)
struct WBP_SpectatorBombWidget_C_TickParticipantAndRule final
{
public:
	class UGymParticipantRepDataBomb*             CallFunc_GetParticipantData_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGymBombModeReplicatedData*             CallFunc_GetRuleData_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorBombWidget_C_TickParticipantAndRule) == 0x000008, "Wrong alignment on WBP_SpectatorBombWidget_C_TickParticipantAndRule");
static_assert(sizeof(WBP_SpectatorBombWidget_C_TickParticipantAndRule) == 0x000010, "Wrong size on WBP_SpectatorBombWidget_C_TickParticipantAndRule");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickParticipantAndRule, CallFunc_GetParticipantData_ReturnValue) == 0x000000, "Member 'WBP_SpectatorBombWidget_C_TickParticipantAndRule::CallFunc_GetParticipantData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickParticipantAndRule, CallFunc_GetRuleData_ReturnValue) == 0x000008, "Member 'WBP_SpectatorBombWidget_C_TickParticipantAndRule::CallFunc_GetRuleData_ReturnValue' has a wrong offset!");

// Function WBP_SpectatorBombWidget.WBP_SpectatorBombWidget_C.TickTagState
// 0x0020 (0x0020 - 0x0000)
struct WBP_SpectatorBombWidget_C_TickTagState final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsTagged_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorBombWidget_C_TickTagState) == 0x000008, "Wrong alignment on WBP_SpectatorBombWidget_C_TickTagState");
static_assert(sizeof(WBP_SpectatorBombWidget_C_TickTagState) == 0x000020, "Wrong size on WBP_SpectatorBombWidget_C_TickTagState");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickTagState, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_SpectatorBombWidget_C_TickTagState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickTagState, CallFunc_GetIsTagged_ReturnValue) == 0x000001, "Member 'WBP_SpectatorBombWidget_C_TickTagState::CallFunc_GetIsTagged_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickTagState, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_SpectatorBombWidget_C_TickTagState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickTagState, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WBP_SpectatorBombWidget_C_TickTagState::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickTagState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000018, "Member 'WBP_SpectatorBombWidget_C_TickTagState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_SpectatorBombWidget.WBP_SpectatorBombWidget_C.TickUI
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_SpectatorBombWidget_C_TickUI final
{
public:
	float                                         CallFunc_GetRoundStartTime_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGymGameState*                          CallFunc_GetGameState_State;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBombTimer_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetServerWorldTimeSeconds_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_FormatTime_ReturnValue;                   // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EGymRulesState                                CallFunc_GetRuleState_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGymRulesState                                CallFunc_GetRuleState_ReturnValue_1;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FormatTime_Time_ImplicitCast;             // 0x00A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorBombWidget_C_TickUI) == 0x000008, "Wrong alignment on WBP_SpectatorBombWidget_C_TickUI");
static_assert(sizeof(WBP_SpectatorBombWidget_C_TickUI) == 0x0000A8, "Wrong size on WBP_SpectatorBombWidget_C_TickUI");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_GetRoundStartTime_ReturnValue) == 0x000000, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_GetRoundStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_GetGameState_State) == 0x000008, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_GetGameState_State' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_GetBombTimer_ReturnValue) == 0x000010, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_GetBombTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_GetServerWorldTimeSeconds_ReturnValue) == 0x000018, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_GetServerWorldTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'WBP_SpectatorBombWidget_C_TickUI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_FMax_ReturnValue) == 0x000038, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_FormatTime_ReturnValue) == 0x000040, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_FormatTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_GetRuleState_ReturnValue) == 0x000050, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_GetRuleState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000070, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_PlayAnimationForward_ReturnValue) == 0x000078, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000080, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_GetRuleState_ReturnValue_1) == 0x000089, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_GetRuleState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008A, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00008B, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000098, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickUI, CallFunc_FormatTime_Time_ImplicitCast) == 0x0000A0, "Member 'WBP_SpectatorBombWidget_C_TickUI::CallFunc_FormatTime_Time_ImplicitCast' has a wrong offset!");

// Function WBP_SpectatorBombWidget.WBP_SpectatorBombWidget_C.TickVignette
// 0x0080 (0x0080 - 0x0000)
struct WBP_SpectatorBombWidget_C_TickVignette final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorBombWidget_C_TickVignette) == 0x000008, "Wrong alignment on WBP_SpectatorBombWidget_C_TickVignette");
static_assert(sizeof(WBP_SpectatorBombWidget_C_TickVignette) == 0x000080, "Wrong size on WBP_SpectatorBombWidget_C_TickVignette");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, DeltaTime) == 0x000000, "Member 'WBP_SpectatorBombWidget_C_TickVignette::DeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, Temp_bool_Variable) == 0x000008, "Member 'WBP_SpectatorBombWidget_C_TickVignette::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, Temp_real_Variable) == 0x000010, "Member 'WBP_SpectatorBombWidget_C_TickVignette::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, Temp_real_Variable_1) == 0x000018, "Member 'WBP_SpectatorBombWidget_C_TickVignette::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, K2Node_Select_Default) == 0x000020, "Member 'WBP_SpectatorBombWidget_C_TickVignette::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'WBP_SpectatorBombWidget_C_TickVignette::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_Abs_ReturnValue) == 0x000050, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_Lerp_ReturnValue) == 0x000068, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorBombWidget_C_TickVignette, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000078, "Member 'WBP_SpectatorBombWidget_C_TickVignette::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

}

