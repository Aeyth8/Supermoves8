#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MouseCursor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_MouseCursor.BP_MouseCursor_C.ExecuteUbergraph_BP_MouseCursor
// 0x0078 (0x0078 - 0x0000)
struct BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float NewValue)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0038(0x0038)(NoDestructor)
	double                                        CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor) == 0x000008, "Wrong alignment on BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor");
static_assert(sizeof(BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor) == 0x000078, "Wrong size on BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor");
static_assert(offsetof(BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor, EntryPoint) == 0x000000, "Member 'BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor, K2Node_CustomEvent_NewValue) == 0x000014, "Member 'BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000018, "Member 'BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000028, "Member 'BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor, K2Node_MakeStruct_WidgetTransform) == 0x000038, "Member 'BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor, CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast) == 0x000070, "Member 'BP_MouseCursor_C_ExecuteUbergraph_BP_MouseCursor::CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast' has a wrong offset!");

// Function BP_MouseCursor.BP_MouseCursor_C.OnSoftwareCursorScaleChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_MouseCursor_C_OnSoftwareCursorScaleChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MouseCursor_C_OnSoftwareCursorScaleChanged) == 0x000004, "Wrong alignment on BP_MouseCursor_C_OnSoftwareCursorScaleChanged");
static_assert(sizeof(BP_MouseCursor_C_OnSoftwareCursorScaleChanged) == 0x000004, "Wrong size on BP_MouseCursor_C_OnSoftwareCursorScaleChanged");
static_assert(offsetof(BP_MouseCursor_C_OnSoftwareCursorScaleChanged, NewValue) == 0x000000, "Member 'BP_MouseCursor_C_OnSoftwareCursorScaleChanged::NewValue' has a wrong offset!");

}

