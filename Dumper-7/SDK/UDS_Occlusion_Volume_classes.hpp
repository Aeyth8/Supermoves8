#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UDS_Occlusion_Volume

#include "Basic.hpp"

#include "UDS_OcclusionShape_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass UDS_Occlusion_Volume.UDS_Occlusion_Volume_C
// 0x0050 (0x02E8 - 0x0298)
class AUDS_Occlusion_Volume_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EUDS_OcclusionShape                           Collision_Shape;                                   // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Box_Extent;                                        // 0x02B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Sphere_Radius;                                     // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          _Interior_Adjusments;                              // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Block_Weather_Particles;                           // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Collision_Component;                               // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Capsule_Half_Height;                               // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Configure_Weather_Particle_Blocking();
	void ExecuteUbergraph_UDS_Occlusion_Volume(int32 EntryPoint);
	void Get_Occlusion_Result(bool* Occluded);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UDS_Occlusion_Volume_C">();
	}
	static class AUDS_Occlusion_Volume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUDS_Occlusion_Volume_C>();
	}
};
static_assert(alignof(AUDS_Occlusion_Volume_C) == 0x000008, "Wrong alignment on AUDS_Occlusion_Volume_C");
static_assert(sizeof(AUDS_Occlusion_Volume_C) == 0x0002E8, "Wrong size on AUDS_Occlusion_Volume_C");
static_assert(offsetof(AUDS_Occlusion_Volume_C, UberGraphFrame) == 0x000298, "Member 'AUDS_Occlusion_Volume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Billboard) == 0x0002A0, "Member 'AUDS_Occlusion_Volume_C::Billboard' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Collision_Shape) == 0x0002A8, "Member 'AUDS_Occlusion_Volume_C::Collision_Shape' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Box_Extent) == 0x0002B0, "Member 'AUDS_Occlusion_Volume_C::Box_Extent' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Sphere_Radius) == 0x0002C8, "Member 'AUDS_Occlusion_Volume_C::Sphere_Radius' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, _Interior_Adjusments) == 0x0002D0, "Member 'AUDS_Occlusion_Volume_C::_Interior_Adjusments' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Block_Weather_Particles) == 0x0002D1, "Member 'AUDS_Occlusion_Volume_C::Block_Weather_Particles' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Collision_Component) == 0x0002D8, "Member 'AUDS_Occlusion_Volume_C::Collision_Component' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Capsule_Half_Height) == 0x0002E0, "Member 'AUDS_Occlusion_Volume_C::Capsule_Half_Height' has a wrong offset!");

}

