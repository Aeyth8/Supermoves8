#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CanvasPlayerBadgeScoreboardWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CanvasPlayerBadgeScoreboardWidget.CanvasPlayerBadgeScoreboardWidget_C
// 0x0058 (0x0390 - 0x0338)
class UCanvasPlayerBadgeScoreboardWidget_C final : public UGymGuiScoreboardEntryWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 EditAllowed;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 EditDisallowed;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 KickImage;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                KickPlayer;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerAvatar;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlayerName;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ToggleEdit;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ToggleEditSwitcher;                                // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGymPlayerState*                        Player;                                            // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          UseClickedColor;                                   // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__CanvasPlayerBadgeScoreboardWidget_KickPlayer_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__CanvasPlayerBadgeScoreboardWidget_KickPlayer_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__CanvasPlayerBadgeScoreboardWidget_KickPlayer_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__CanvasPlayerBadgeScoreboardWidget_ToggleEdit_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__CanvasPlayerBadgeScoreboardWidget_ToggleEdit_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__CanvasPlayerBadgeScoreboardWidget_ToggleEdit_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature();
	void Destruct();
	void EditorRightsChanged(bool RightS);
	void ExecuteUbergraph_CanvasPlayerBadgeScoreboardWidget(int32 EntryPoint);
	void SetInfo(class AGymPlayerState* Player_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CanvasPlayerBadgeScoreboardWidget_C">();
	}
	static class UCanvasPlayerBadgeScoreboardWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCanvasPlayerBadgeScoreboardWidget_C>();
	}
};
static_assert(alignof(UCanvasPlayerBadgeScoreboardWidget_C) == 0x000008, "Wrong alignment on UCanvasPlayerBadgeScoreboardWidget_C");
static_assert(sizeof(UCanvasPlayerBadgeScoreboardWidget_C) == 0x000390, "Wrong size on UCanvasPlayerBadgeScoreboardWidget_C");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, UberGraphFrame) == 0x000338, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, EditAllowed) == 0x000340, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::EditAllowed' has a wrong offset!");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, EditDisallowed) == 0x000348, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::EditDisallowed' has a wrong offset!");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, KickImage) == 0x000350, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::KickImage' has a wrong offset!");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, KickPlayer) == 0x000358, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::KickPlayer' has a wrong offset!");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, PlayerAvatar) == 0x000360, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::PlayerAvatar' has a wrong offset!");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, PlayerName) == 0x000368, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, ToggleEdit) == 0x000370, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::ToggleEdit' has a wrong offset!");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, ToggleEditSwitcher) == 0x000378, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::ToggleEditSwitcher' has a wrong offset!");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, Player) == 0x000380, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::Player' has a wrong offset!");
static_assert(offsetof(UCanvasPlayerBadgeScoreboardWidget_C, UseClickedColor) == 0x000388, "Member 'UCanvasPlayerBadgeScoreboardWidget_C::UseClickedColor' has a wrong offset!");

}

