#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChallengesMenuWidget

#include "Basic.hpp"

#include "BP_ChallengesMenuWidget_classes.hpp"
#include "BP_ChallengesMenuWidget_parameters.hpp"


namespace SDK
{

// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.BPOpen
// (Event, Protected, BlueprintEvent)

void UBP_ChallengesMenuWidget_C::BPOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "BPOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.ExecuteUbergraph_BP_ChallengesMenuWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChallengesMenuWidget_C::ExecuteUbergraph_BP_ChallengesMenuWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "ExecuteUbergraph_BP_ChallengesMenuWidget");

	Params::BP_ChallengesMenuWidget_C_ExecuteUbergraph_BP_ChallengesMenuWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.Get_ResetTimer_Text
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_ChallengesMenuWidget_C::Get_ResetTimer_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "Get_ResetTimer_Text");

	Params::BP_ChallengesMenuWidget_C_Get_ResetTimer_Text Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_ChallengesMenuWidget_C::InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2");

	Params::BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_ChallengesMenuWidget_C::InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5");

	Params::BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_ChallengesMenuWidget_C::InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4");

	Params::BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_ChallengesMenuWidget_C::InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1");

	Params::BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_ChallengesMenuWidget_C::InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0");

	Params::BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_ChallengesMenuWidget_C::InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3");

	Params::BP_ChallengesMenuWidget_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.OnChallengesReceived
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGymCHallengeResponse            Challenges_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_ChallengesMenuWidget_C::OnChallengesReceived(bool Success, const struct FGymCHallengeResponse& Challenges_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "OnChallengesReceived");

	Params::BP_ChallengesMenuWidget_C_OnChallengesReceived Parms{};

	Parms.Success = Success;
	Parms.Challenges_0 = std::move(Challenges_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.OnTabButtonSelected_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ChallengesMenuWidget_C::OnTabButtonSelected_Event(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "OnTabButtonSelected_Event");

	Params::BP_ChallengesMenuWidget_C_OnTabButtonSelected_Event Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.SimulateTabButtonClick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_TabButton_C*                 TabButton                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_ChallengesMenuWidget_C::SimulateTabButtonClick(class UWBP_TabButton_C* TabButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "SimulateTabButtonClick");

	Params::BP_ChallengesMenuWidget_C_SimulateTabButtonClick Parms{};

	Parms.TabButton = TabButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C.TryClaim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGymChallenge                    Challenge                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_ChallengesMenuWidget_C::TryClaim(const struct FGymChallenge& Challenge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChallengesMenuWidget_C", "TryClaim");

	Params::BP_ChallengesMenuWidget_C_TryClaim Parms{};

	Parms.Challenge = std::move(Challenge);

	UObject::ProcessEvent(Func, &Parms);
}

}

