#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GymPlayerControllerWithChat

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GymPlayerControllerWithChat.GymPlayerControllerWithChat_C
// 0x0020 (0x0AA0 - 0x0A80)
class AGymPlayerControllerWithChat_C final : public AGymPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A80(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          DebugObjectives;                                   // 0x0A88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A89[0x7];                                      // 0x0A89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGymGameState*                          GameState;                                         // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        MenuMusic;                                         // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GymPlayerControllerWithChat(int32 EntryPoint);
	void GetPlayerName(class FString* Name_0);
	void GetPlayerTeam(class FString* Team);
	void OnPlaybackpercent(const class USoundWave* PlayingSoundWave, const float PlaybackPercent);
	void PauseMenuMusic();
	void PlayMenuMusic();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GymPlayerControllerWithChat_C">();
	}
	static class AGymPlayerControllerWithChat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGymPlayerControllerWithChat_C>();
	}
};
static_assert(alignof(AGymPlayerControllerWithChat_C) == 0x000008, "Wrong alignment on AGymPlayerControllerWithChat_C");
static_assert(sizeof(AGymPlayerControllerWithChat_C) == 0x000AA0, "Wrong size on AGymPlayerControllerWithChat_C");
static_assert(offsetof(AGymPlayerControllerWithChat_C, UberGraphFrame) == 0x000A80, "Member 'AGymPlayerControllerWithChat_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGymPlayerControllerWithChat_C, DebugObjectives) == 0x000A88, "Member 'AGymPlayerControllerWithChat_C::DebugObjectives' has a wrong offset!");
static_assert(offsetof(AGymPlayerControllerWithChat_C, GameState) == 0x000A90, "Member 'AGymPlayerControllerWithChat_C::GameState' has a wrong offset!");
static_assert(offsetof(AGymPlayerControllerWithChat_C, MenuMusic) == 0x000A98, "Member 'AGymPlayerControllerWithChat_C::MenuMusic' has a wrong offset!");

}

