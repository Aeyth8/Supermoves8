#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpectatorDevWidget

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_SpectatorDevWidget.WBP_SpectatorDevWidget_C.CheckSpectatorPawn
// 0x0038 (0x0038 - 0x0000)
struct WBP_SpectatorDevWidget_C_CheckSpectatorPawn final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGymPlayerState*                        K2Node_DynamicCast_AsGym_Player_State;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SpectatorPawn_C*                    K2Node_DynamicCast_AsBP_Spectator_Pawn;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorDevWidget_C_CheckSpectatorPawn) == 0x000008, "Wrong alignment on WBP_SpectatorDevWidget_C_CheckSpectatorPawn");
static_assert(sizeof(WBP_SpectatorDevWidget_C_CheckSpectatorPawn) == 0x000038, "Wrong size on WBP_SpectatorDevWidget_C_CheckSpectatorPawn");
static_assert(offsetof(WBP_SpectatorDevWidget_C_CheckSpectatorPawn, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_SpectatorDevWidget_C_CheckSpectatorPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_CheckSpectatorPawn, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_SpectatorDevWidget_C_CheckSpectatorPawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_CheckSpectatorPawn, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_SpectatorDevWidget_C_CheckSpectatorPawn::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_CheckSpectatorPawn, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000010, "Member 'WBP_SpectatorDevWidget_C_CheckSpectatorPawn::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_CheckSpectatorPawn, K2Node_DynamicCast_AsGym_Player_State) == 0x000018, "Member 'WBP_SpectatorDevWidget_C_CheckSpectatorPawn::K2Node_DynamicCast_AsGym_Player_State' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_CheckSpectatorPawn, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_SpectatorDevWidget_C_CheckSpectatorPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_CheckSpectatorPawn, K2Node_DynamicCast_AsBP_Spectator_Pawn) == 0x000028, "Member 'WBP_SpectatorDevWidget_C_CheckSpectatorPawn::K2Node_DynamicCast_AsBP_Spectator_Pawn' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_CheckSpectatorPawn, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WBP_SpectatorDevWidget_C_CheckSpectatorPawn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_SpectatorDevWidget.WBP_SpectatorDevWidget_C.ExecuteUbergraph_WBP_SpectatorDevWidget
// 0x0044 (0x0044 - 0x0000)
struct WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpectateReason                               K2Node_Event_ParticipantState;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget) == 0x000004, "Wrong alignment on WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget");
static_assert(sizeof(WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget) == 0x000044, "Wrong size on WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget");
static_assert(offsetof(WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget, EntryPoint) == 0x000000, "Member 'WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget, K2Node_Event_ParticipantState) == 0x000040, "Member 'WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget::K2Node_Event_ParticipantState' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'WBP_SpectatorDevWidget_C_ExecuteUbergraph_WBP_SpectatorDevWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_SpectatorDevWidget.WBP_SpectatorDevWidget_C.Get_KeyboardInput_Visibility
// 0x0020 (0x0020 - 0x0000)
struct WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility) == 0x000008, "Wrong alignment on WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility");
static_assert(sizeof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility) == 0x000020, "Wrong size on WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility, ReturnValue) == 0x000000, "Member 'WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility, Temp_byte_Variable_4) == 0x000005, "Member 'WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000010, "Member 'WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility, CallFunc_GetCurrentInputType_ReturnValue) == 0x000018, "Member 'WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility, K2Node_Select_Default) == 0x000019, "Member 'WBP_SpectatorDevWidget_C_Get_KeyboardInput_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function WBP_SpectatorDevWidget.WBP_SpectatorDevWidget_C.GetVisibility_0
// 0x0020 (0x0020 - 0x0000)
struct WBP_SpectatorDevWidget_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGymPlayerController*                   K2Node_DynamicCast_AsGym_Player_Controller;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorDevWidget_C_GetVisibility_0) == 0x000008, "Wrong alignment on WBP_SpectatorDevWidget_C_GetVisibility_0");
static_assert(sizeof(WBP_SpectatorDevWidget_C_GetVisibility_0) == 0x000020, "Wrong size on WBP_SpectatorDevWidget_C_GetVisibility_0");
static_assert(offsetof(WBP_SpectatorDevWidget_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WBP_SpectatorDevWidget_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'WBP_SpectatorDevWidget_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'WBP_SpectatorDevWidget_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_SpectatorDevWidget_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_GetVisibility_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WBP_SpectatorDevWidget_C_GetVisibility_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_GetVisibility_0, K2Node_DynamicCast_AsGym_Player_Controller) == 0x000010, "Member 'WBP_SpectatorDevWidget_C_GetVisibility_0::K2Node_DynamicCast_AsGym_Player_Controller' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_GetVisibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_SpectatorDevWidget_C_GetVisibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_GetVisibility_0, K2Node_Select_Default) == 0x000019, "Member 'WBP_SpectatorDevWidget_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WBP_SpectatorDevWidget.WBP_SpectatorDevWidget_C.SetReason
// 0x0001 (0x0001 - 0x0000)
struct WBP_SpectatorDevWidget_C_SetReason final
{
public:
	ESpectateReason                               ParticipantState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorDevWidget_C_SetReason) == 0x000001, "Wrong alignment on WBP_SpectatorDevWidget_C_SetReason");
static_assert(sizeof(WBP_SpectatorDevWidget_C_SetReason) == 0x000001, "Wrong size on WBP_SpectatorDevWidget_C_SetReason");
static_assert(offsetof(WBP_SpectatorDevWidget_C_SetReason, ParticipantState) == 0x000000, "Member 'WBP_SpectatorDevWidget_C_SetReason::ParticipantState' has a wrong offset!");

// Function WBP_SpectatorDevWidget.WBP_SpectatorDevWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_SpectatorDevWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorDevWidget_C_Tick) == 0x000004, "Wrong alignment on WBP_SpectatorDevWidget_C_Tick");
static_assert(sizeof(WBP_SpectatorDevWidget_C_Tick) == 0x00003C, "Wrong size on WBP_SpectatorDevWidget_C_Tick");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_SpectatorDevWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_SpectatorDevWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_SpectatorDevWidget.WBP_SpectatorDevWidget_C.UpdateCameraMode
// 0x0010 (0x0010 - 0x0000)
struct WBP_SpectatorDevWidget_C_UpdateCameraMode final
{
public:
	ESpectatorMovementMode                        Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpectatorMovementMode                        CallFunc_GetCurrentMovementMode_ReturnValue;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpectatorDevWidget_C_UpdateCameraMode) == 0x000008, "Wrong alignment on WBP_SpectatorDevWidget_C_UpdateCameraMode");
static_assert(sizeof(WBP_SpectatorDevWidget_C_UpdateCameraMode) == 0x000010, "Wrong size on WBP_SpectatorDevWidget_C_UpdateCameraMode");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateCameraMode, Temp_byte_Variable) == 0x000000, "Member 'WBP_SpectatorDevWidget_C_UpdateCameraMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateCameraMode, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_SpectatorDevWidget_C_UpdateCameraMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateCameraMode, CallFunc_GetCurrentMovementMode_ReturnValue) == 0x000002, "Member 'WBP_SpectatorDevWidget_C_UpdateCameraMode::CallFunc_GetCurrentMovementMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateCameraMode, K2Node_Select_Default) == 0x000008, "Member 'WBP_SpectatorDevWidget_C_UpdateCameraMode::K2Node_Select_Default' has a wrong offset!");

// Function WBP_SpectatorDevWidget.WBP_SpectatorDevWidget_C.UpdatePlayerToFollow
// 0x0050 (0x0050 - 0x0000)
struct WBP_SpectatorDevWidget_C_UpdatePlayerToFollow final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGymCharacter*                          CallFunc_GetPlayerToFollow_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGymPlayerState*                        K2Node_DynamicCast_AsGym_Player_State;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(WBP_SpectatorDevWidget_C_UpdatePlayerToFollow) == 0x000008, "Wrong alignment on WBP_SpectatorDevWidget_C_UpdatePlayerToFollow");
static_assert(sizeof(WBP_SpectatorDevWidget_C_UpdatePlayerToFollow) == 0x000050, "Wrong size on WBP_SpectatorDevWidget_C_UpdatePlayerToFollow");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdatePlayerToFollow, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_SpectatorDevWidget_C_UpdatePlayerToFollow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdatePlayerToFollow, CallFunc_GetPlayerToFollow_ReturnValue) == 0x000008, "Member 'WBP_SpectatorDevWidget_C_UpdatePlayerToFollow::CallFunc_GetPlayerToFollow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdatePlayerToFollow, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'WBP_SpectatorDevWidget_C_UpdatePlayerToFollow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdatePlayerToFollow, K2Node_DynamicCast_AsGym_Player_State) == 0x000018, "Member 'WBP_SpectatorDevWidget_C_UpdatePlayerToFollow::K2Node_DynamicCast_AsGym_Player_State' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdatePlayerToFollow, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_SpectatorDevWidget_C_UpdatePlayerToFollow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdatePlayerToFollow, CallFunc_GetPlayerName_ReturnValue) == 0x000028, "Member 'WBP_SpectatorDevWidget_C_UpdatePlayerToFollow::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdatePlayerToFollow, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'WBP_SpectatorDevWidget_C_UpdatePlayerToFollow::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_SpectatorDevWidget.WBP_SpectatorDevWidget_C.UpdateSpectateReason
// 0x0148 (0x0148 - 0x0000)
struct WBP_SpectatorDevWidget_C_UpdateSpectateReason final
{
public:
	int32                                         Rank;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESpectateReason                               Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0054(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0068(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x007C(0x0014)()
	ESpectateReason                               Temp_byte_Variable_1;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0050)(HasGetValueTypeHash)
	struct FSlateColor                            K2Node_Select_Default;                             // 0x00F0(0x0014)()
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0130(0x0018)()
};
static_assert(alignof(WBP_SpectatorDevWidget_C_UpdateSpectateReason) == 0x000008, "Wrong alignment on WBP_SpectatorDevWidget_C_UpdateSpectateReason");
static_assert(sizeof(WBP_SpectatorDevWidget_C_UpdateSpectateReason) == 0x000148, "Wrong size on WBP_SpectatorDevWidget_C_UpdateSpectateReason");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, Rank) == 0x000000, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::Rank' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, Temp_byte_Variable) == 0x000004, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, Temp_text_Variable) == 0x000008, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, Temp_text_Variable_1) == 0x000020, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, Temp_text_Variable_2) == 0x000038, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, K2Node_MakeStruct_SlateColor) == 0x000054, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, K2Node_MakeStruct_SlateColor_1) == 0x000068, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, K2Node_MakeStruct_SlateColor_2) == 0x00007C, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, Temp_byte_Variable_1) == 0x000090, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000098, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, K2Node_Select_Default) == 0x0000F0, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, K2Node_MakeArray_Array) == 0x000108, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, CallFunc_Format_ReturnValue) == 0x000118, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpectatorDevWidget_C_UpdateSpectateReason, K2Node_Select_Default_1) == 0x000130, "Member 'WBP_SpectatorDevWidget_C_UpdateSpectateReason::K2Node_Select_Default_1' has a wrong offset!");

}

