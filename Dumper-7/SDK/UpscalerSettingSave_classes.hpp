#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UpscalerSettingSave

#include "Basic.hpp"

#include "DLSSBlueprint_structs.hpp"
#include "E_UpscaleMode_structs.hpp"
#include "E_BuiltInAAModes_structs.hpp"
#include "StreamlineBlueprint_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass UpscalerSettingSave.UpscalerSettingSave_C
// 0x0018 (0x0040 - 0x0028)
class UUpscalerSettingSave_C final : public USaveGame
{
public:
	EUDLSSMode                                    DLSSMode;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_UpscaleMode                                 UpscaleMode;                                       // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BuiltInAAModes                              AntiAliasingMode;                                  // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ScreenPercent;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineReflexMode                        ReflexMode;                                        // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUStreamlineDLSSGMode                         NVIDIAFG;                                          // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Save();
	void SetAntiAliasingMode(E_BuiltInAAModes AntiAliasingMode_0, bool Save);
	void SetDLSSMode(EUDLSSMode DLSSMode_0, bool Save_0);
	void SetFGMode(EUStreamlineDLSSGMode NVIDIAFG_0, bool Save);
	void SetReflexMode(EUStreamlineReflexMode ReflexMode_0, bool Save);
	void SetScreenPercent(double ResScale, bool Save);
	void SetUpscalemode(E_UpscaleMode UpscaleMode_0, bool Save_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UpscalerSettingSave_C">();
	}
	static class UUpscalerSettingSave_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUpscalerSettingSave_C>();
	}
};
static_assert(alignof(UUpscalerSettingSave_C) == 0x000008, "Wrong alignment on UUpscalerSettingSave_C");
static_assert(sizeof(UUpscalerSettingSave_C) == 0x000040, "Wrong size on UUpscalerSettingSave_C");
static_assert(offsetof(UUpscalerSettingSave_C, DLSSMode) == 0x000028, "Member 'UUpscalerSettingSave_C::DLSSMode' has a wrong offset!");
static_assert(offsetof(UUpscalerSettingSave_C, UpscaleMode) == 0x000029, "Member 'UUpscalerSettingSave_C::UpscaleMode' has a wrong offset!");
static_assert(offsetof(UUpscalerSettingSave_C, AntiAliasingMode) == 0x00002A, "Member 'UUpscalerSettingSave_C::AntiAliasingMode' has a wrong offset!");
static_assert(offsetof(UUpscalerSettingSave_C, ScreenPercent) == 0x000030, "Member 'UUpscalerSettingSave_C::ScreenPercent' has a wrong offset!");
static_assert(offsetof(UUpscalerSettingSave_C, ReflexMode) == 0x000038, "Member 'UUpscalerSettingSave_C::ReflexMode' has a wrong offset!");
static_assert(offsetof(UUpscalerSettingSave_C, NVIDIAFG) == 0x000039, "Member 'UUpscalerSettingSave_C::NVIDIAFG' has a wrong offset!");

}

