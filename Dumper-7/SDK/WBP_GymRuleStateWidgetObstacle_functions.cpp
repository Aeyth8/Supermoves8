#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GymRuleStateWidgetObstacle

#include "Basic.hpp"

#include "WBP_GymRuleStateWidgetObstacle_classes.hpp"
#include "WBP_GymRuleStateWidgetObstacle_parameters.hpp"


namespace SDK
{

// Function WBP_GymRuleStateWidgetObstacle.WBP_GymRuleStateWidgetObstacle_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_GymRuleStateWidgetObstacle_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GymRuleStateWidgetObstacle_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GymRuleStateWidgetObstacle.WBP_GymRuleStateWidgetObstacle_C.ExecuteUbergraph_WBP_GymRuleStateWidgetObstacle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GymRuleStateWidgetObstacle_C::ExecuteUbergraph_WBP_GymRuleStateWidgetObstacle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GymRuleStateWidgetObstacle_C", "ExecuteUbergraph_WBP_GymRuleStateWidgetObstacle");

	Params::WBP_GymRuleStateWidgetObstacle_C_ExecuteUbergraph_WBP_GymRuleStateWidgetObstacle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GymRuleStateWidgetObstacle.WBP_GymRuleStateWidgetObstacle_C.OnEliminated
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEliminationReason                      EliminationReason                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GymRuleStateWidgetObstacle_C::OnEliminated(const EEliminationReason EliminationReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GymRuleStateWidgetObstacle_C", "OnEliminated");

	Params::WBP_GymRuleStateWidgetObstacle_C_OnEliminated Parms{};

	Parms.EliminationReason = EliminationReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GymRuleStateWidgetObstacle.WBP_GymRuleStateWidgetObstacle_C.OnFinished
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsRoyale                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GymRuleStateWidgetObstacle_C::OnFinished(bool bIsRoyale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GymRuleStateWidgetObstacle_C", "OnFinished");

	Params::WBP_GymRuleStateWidgetObstacle_C_OnFinished Parms{};

	Parms.bIsRoyale = bIsRoyale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GymRuleStateWidgetObstacle.WBP_GymRuleStateWidgetObstacle_C.SetFlagCounter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_GymRuleStateWidgetObstacle_C::SetFlagCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GymRuleStateWidgetObstacle_C", "SetFlagCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GymRuleStateWidgetObstacle.WBP_GymRuleStateWidgetObstacle_C.SetRankingText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_GymRuleStateWidgetObstacle_C::SetRankingText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GymRuleStateWidgetObstacle_C", "SetRankingText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GymRuleStateWidgetObstacle.WBP_GymRuleStateWidgetObstacle_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GymRuleStateWidgetObstacle_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GymRuleStateWidgetObstacle_C", "Tick");

	Params::WBP_GymRuleStateWidgetObstacle_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GymRuleStateWidgetObstacle.WBP_GymRuleStateWidgetObstacle_C.TickGameStateAndController
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_GymRuleStateWidgetObstacle_C::TickGameStateAndController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GymRuleStateWidgetObstacle_C", "TickGameStateAndController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GymRuleStateWidgetObstacle.WBP_GymRuleStateWidgetObstacle_C.TickRuleAndParticipant
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_GymRuleStateWidgetObstacle_C::TickRuleAndParticipant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GymRuleStateWidgetObstacle_C", "TickRuleAndParticipant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GymRuleStateWidgetObstacle.WBP_GymRuleStateWidgetObstacle_C.TickUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_GymRuleStateWidgetObstacle_C::TickUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GymRuleStateWidgetObstacle_C", "TickUI");

	UObject::ProcessEvent(Func, nullptr);
}

}

