#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Credits_MakeaGames

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Credits_MakeaGames.WBP_Credits_MakeaGames_C.ExecuteUbergraph_WBP_Credits_MakeaGames
// 0x0178 (0x0178 - 0x0000)
struct WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0020(0x0018)(HasGetValueTypeHash)
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0048(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0088(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScrollOffsetOfEnd_ReturnValue;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x00B0(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x00D0(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0100(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast; // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LastScroll_ImplicitCast;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames) == 0x000008, "Wrong alignment on WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames");
static_assert(sizeof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames) == 0x000178, "Wrong size on WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, EntryPoint) == 0x000000, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_GetIsEnabled_ReturnValue) == 0x000004, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, K2Node_InputActionEvent_Key) == 0x000008, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, Temp_struct_Variable) == 0x000020, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, K2Node_Event_MyGeometry) == 0x000048, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, K2Node_Event_InDeltaTime) == 0x000080, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, K2Node_InputActionEvent_Key_3) == 0x000088, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_IsVisible_ReturnValue) == 0x0000A0, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_GetScrollOffsetOfEnd_ReturnValue) == 0x0000A4, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_GetScrollOffsetOfEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_GetScrollOffset_ReturnValue) == 0x0000A8, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, K2Node_InputActionEvent_Key_1) == 0x0000B0, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, Temp_struct_Variable_1) == 0x0000D0, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_FClamp_ReturnValue) == 0x0000F0, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_IsVisible_ReturnValue_1) == 0x0000F8, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, K2Node_InputAxisEvent_AxisValue) == 0x0000FC, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, K2Node_InputActionEvent_Key_2) == 0x000100, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_FClamp_ReturnValue_1) == 0x000120, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_Abs_ReturnValue) == 0x000128, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000130, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000131, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_Not_PreBool_ReturnValue) == 0x000132, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, K2Node_CustomEvent_InVisibility) == 0x000133, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_BooleanAND_ReturnValue) == 0x000134, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000138, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_FClamp_Max_ImplicitCast) == 0x000140, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000148, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast) == 0x000150, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_Abs_A_ImplicitCast) == 0x000158, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000160, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, K2Node_VariableSet_LastScroll_ImplicitCast) == 0x000168, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::K2Node_VariableSet_LastScroll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000170, "Member 'WBP_Credits_MakeaGames_C_ExecuteUbergraph_WBP_Credits_MakeaGames::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_Credits_MakeaGames.WBP_Credits_MakeaGames_C.InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2");
static_assert(sizeof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2");
static_assert(offsetof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function WBP_Credits_MakeaGames.WBP_Credits_MakeaGames_C.InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3");
static_assert(sizeof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3");
static_assert(offsetof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadDown_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function WBP_Credits_MakeaGames.WBP_Credits_MakeaGames_C.InpActEvt_UIGamepadUp_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_0");
static_assert(sizeof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_0");
static_assert(offsetof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function WBP_Credits_MakeaGames.WBP_Credits_MakeaGames_C.InpActEvt_UIGamepadUp_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_1");
static_assert(sizeof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_1");
static_assert(offsetof(WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'WBP_Credits_MakeaGames_C_InpActEvt_UIGamepadUp_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function WBP_Credits_MakeaGames.WBP_Credits_MakeaGames_C.InpAxisEvt_UIGamepadScroll_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct WBP_Credits_MakeaGames_C_InpAxisEvt_UIGamepadScroll_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Credits_MakeaGames_C_InpAxisEvt_UIGamepadScroll_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on WBP_Credits_MakeaGames_C_InpAxisEvt_UIGamepadScroll_K2Node_InputAxisEvent_0");
static_assert(sizeof(WBP_Credits_MakeaGames_C_InpAxisEvt_UIGamepadScroll_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on WBP_Credits_MakeaGames_C_InpAxisEvt_UIGamepadScroll_K2Node_InputAxisEvent_0");
static_assert(offsetof(WBP_Credits_MakeaGames_C_InpAxisEvt_UIGamepadScroll_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'WBP_Credits_MakeaGames_C_InpAxisEvt_UIGamepadScroll_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function WBP_Credits_MakeaGames.WBP_Credits_MakeaGames_C.OnVisibilityChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct WBP_Credits_MakeaGames_C_OnVisibilityChanged_Event final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Credits_MakeaGames_C_OnVisibilityChanged_Event) == 0x000001, "Wrong alignment on WBP_Credits_MakeaGames_C_OnVisibilityChanged_Event");
static_assert(sizeof(WBP_Credits_MakeaGames_C_OnVisibilityChanged_Event) == 0x000001, "Wrong size on WBP_Credits_MakeaGames_C_OnVisibilityChanged_Event");
static_assert(offsetof(WBP_Credits_MakeaGames_C_OnVisibilityChanged_Event, InVisibility) == 0x000000, "Member 'WBP_Credits_MakeaGames_C_OnVisibilityChanged_Event::InVisibility' has a wrong offset!");

// Function WBP_Credits_MakeaGames.WBP_Credits_MakeaGames_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Credits_MakeaGames_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Credits_MakeaGames_C_Tick) == 0x000004, "Wrong alignment on WBP_Credits_MakeaGames_C_Tick");
static_assert(sizeof(WBP_Credits_MakeaGames_C_Tick) == 0x00003C, "Wrong size on WBP_Credits_MakeaGames_C_Tick");
static_assert(offsetof(WBP_Credits_MakeaGames_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Credits_MakeaGames_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Credits_MakeaGames_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Credits_MakeaGames_C_Tick::InDeltaTime' has a wrong offset!");

}

