#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LobbyKeyText

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_LobbyKeyText.WBP_LobbyKeyText_C.ExecuteUbergraph_WBP_LobbyKeyText
// 0x0050 (0x0050 - 0x0000)
struct WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText) == 0x000008, "Wrong alignment on WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText");
static_assert(sizeof(WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText) == 0x000050, "Wrong size on WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText");
static_assert(offsetof(WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText, EntryPoint) == 0x000000, "Member 'WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000030, "Member 'WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText, CallFunc_PlayAnimationForward_ReturnValue) == 0x000038, "Member 'WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000048, "Member 'WBP_LobbyKeyText_C_ExecuteUbergraph_WBP_LobbyKeyText::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");

// Function WBP_LobbyKeyText.WBP_LobbyKeyText_C.SetIsPassword
// 0x0001 (0x0001 - 0x0000)
struct WBP_LobbyKeyText_C_SetIsPassword final
{
public:
	bool                                          InPassword;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LobbyKeyText_C_SetIsPassword) == 0x000001, "Wrong alignment on WBP_LobbyKeyText_C_SetIsPassword");
static_assert(sizeof(WBP_LobbyKeyText_C_SetIsPassword) == 0x000001, "Wrong size on WBP_LobbyKeyText_C_SetIsPassword");
static_assert(offsetof(WBP_LobbyKeyText_C_SetIsPassword, InPassword) == 0x000000, "Member 'WBP_LobbyKeyText_C_SetIsPassword::InPassword' has a wrong offset!");

// Function WBP_LobbyKeyText.WBP_LobbyKeyText_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct WBP_LobbyKeyText_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_LobbyKeyText_C_SetText) == 0x000008, "Wrong alignment on WBP_LobbyKeyText_C_SetText");
static_assert(sizeof(WBP_LobbyKeyText_C_SetText) == 0x000018, "Wrong size on WBP_LobbyKeyText_C_SetText");
static_assert(offsetof(WBP_LobbyKeyText_C_SetText, InText) == 0x000000, "Member 'WBP_LobbyKeyText_C_SetText::InText' has a wrong offset!");

}

