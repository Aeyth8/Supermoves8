#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EditorAssetRow

#include "Basic.hpp"

#include "BP_EditorAssetRow_classes.hpp"
#include "BP_EditorAssetRow_parameters.hpp"


namespace SDK
{

// Function BP_EditorAssetRow.BP_EditorAssetRow_C.AddBombTimeModifier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::AddBombTimeModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "AddBombTimeModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.AddFlagModifier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::AddFlagModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "AddFlagModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.AddLapModifier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::AddLapModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "AddLapModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.AddLootModifier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::AddLootModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "AddLootModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.AddRuleModifier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::AddRuleModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "AddRuleModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.AddTideSpeedModifier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::AddTideSpeedModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "AddTideSpeedModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.AddTimeModifier
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::AddTimeModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "AddTimeModifier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.AssetSupportsRules
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UGymLevelAssetData*               Asset                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EditorAssetRow_C::AssetSupportsRules(class UGymLevelAssetData* Asset, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "AssetSupportsRules");

	Params::BP_EditorAssetRow_C_AssetSupportsRules Parms{};

	Parms.Asset = Asset;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.CheckRules
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Changed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EditorAssetRow_C::CheckRules(bool* Changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "CheckRules");

	Params::BP_EditorAssetRow_C_CheckRules Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Changed != nullptr)
		*Changed = Parms.Changed;
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_EditorAssetRow_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.CtxConfirm
// (BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::CtxConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "CtxConfirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.CtxDecline
// (BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::CtxDecline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "CtxDecline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.CtxDown
// (BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::CtxDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "CtxDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.CtxLeft
// (BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::CtxLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "CtxLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.CtxRight
// (BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::CtxRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "CtxRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.CtxUp
// (BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::CtxUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "CtxUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.ExecuteUbergraph_BP_EditorAssetRow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EditorAssetRow_C::ExecuteUbergraph_BP_EditorAssetRow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "ExecuteUbergraph_BP_EditorAssetRow");

	Params::BP_EditorAssetRow_C_ExecuteUbergraph_BP_EditorAssetRow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.Get Asset Slot for Asset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGymAssetVariantId               AssetId                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UBP_EditorAssetSlot_C*            AssetSlot                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UBP_EditorVariantSlot_C*          VariantSlot                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UGymLevelAssetData*               AssetObject                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   VariantIndex                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EditorAssetRow_C::Get_Asset_Slot_for_Asset(const struct FGymAssetVariantId& AssetId, class UBP_EditorAssetSlot_C** AssetSlot, class UBP_EditorVariantSlot_C** VariantSlot, class UGymLevelAssetData** AssetObject, int32* VariantIndex, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "Get Asset Slot for Asset");

	Params::BP_EditorAssetRow_C_Get_Asset_Slot_for_Asset Parms{};

	Parms.AssetId = std::move(AssetId);

	UObject::ProcessEvent(Func, &Parms);

	if (AssetSlot != nullptr)
		*AssetSlot = Parms.AssetSlot;

	if (VariantSlot != nullptr)
		*VariantSlot = Parms.VariantSlot;

	if (AssetObject != nullptr)
		*AssetObject = Parms.AssetObject;

	if (VariantIndex != nullptr)
		*VariantIndex = Parms.VariantIndex;

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.HideVariantArrows
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::HideVariantArrows()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "HideVariantArrows");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.Init
// (BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.InitBombModifiers
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::InitBombModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "InitBombModifiers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.InitCircuitModifiers
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::InitCircuitModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "InitCircuitModifiers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.InitializeModifiers
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::InitializeModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "InitializeModifiers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.InitLootModifiers
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::InitLootModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "InitLootModifiers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.InitObbyModifiers
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::InitObbyModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "InitObbyModifiers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.InitSprintModifiers
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::InitSprintModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "InitSprintModifiers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.InitTideModifiers
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::InitTideModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "InitTideModifiers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.LevelKitChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UGymLevelAssetData*>       NewAssets                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGymLevelKit                     BewLevelKit                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_EditorAssetRow_C::LevelKitChanged(TArray<class UGymLevelAssetData*>& NewAssets, const struct FGymLevelKit& BewLevelKit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "LevelKitChanged");

	Params::BP_EditorAssetRow_C_LevelKitChanged Parms{};

	Parms.NewAssets = std::move(NewAssets);
	Parms.BewLevelKit = std::move(BewLevelKit);

	UObject::ProcessEvent(Func, &Parms);

	NewAssets = std::move(Parms.NewAssets);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.OnEditorPieceSelected
// (BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::OnEditorPieceSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "OnEditorPieceSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.RuleIdToDisplayName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           RuleId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             DisplayName                                            (Parm, OutParm)

void UBP_EditorAssetRow_C::RuleIdToDisplayName(const class FString& RuleId, class FText* DisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "RuleIdToDisplayName");

	Params::BP_EditorAssetRow_C_RuleIdToDisplayName Parms{};

	Parms.RuleId = std::move(RuleId);

	UObject::ProcessEvent(Func, &Parms);

	if (DisplayName != nullptr)
		*DisplayName = std::move(Parms.DisplayName);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.SetUpDownArrows
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_EditorPiece_C*                AssetSlot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_EditorAssetRow_C::SetUpDownArrows(class UBP_EditorPiece_C* AssetSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "SetUpDownArrows");

	Params::BP_EditorAssetRow_C_SetUpDownArrows Parms{};

	Parms.AssetSlot = AssetSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.ShowVariantArrows
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EditorAssetRow_C::ShowVariantArrows()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "ShowVariantArrows");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EditorAssetRow.BP_EditorAssetRow_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EditorAssetRow_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EditorAssetRow_C", "Tick");

	Params::BP_EditorAssetRow_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

