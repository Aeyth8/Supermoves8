#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GymRuleStateWidgetBombMode

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "GYMGAME_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GymRuleStateWidgetBombMode.WBP_GymRuleStateWidgetBombMode_C
// 0x0120 (0x0460 - 0x0340)
class UWBP_GymRuleStateWidgetBombMode_C final : public UGymGuiRuleStateWidgetBombMode
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TaggedFlamesAnim;                                  // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RunAwayNotifAnim;                                  // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TaggedNotifAnim;                                   // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowStatusPanel;                                   // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 AnnouncementGridBG;                                // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AnnouncementGridBG_1;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BombTagIcon;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BombTagIcon_2;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             BombText;                                          // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CheckpointBrushBG;                                 // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           GamePanel;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGymGuiPostflow_BP_C*                   GymGuiPostflow;                                    // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       RoundText;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RuleStatusText;                                    // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RunawayContainer;                                  // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RunawayTextPlayer;                                 // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RunawayTextRound;                                  // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        RunawayTexts;                                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               TaggedContainer;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TaggedFlames;                                      // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TaggedText_Player;                                 // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TaggedText_Round;                                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        TaggedTexts;                                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TimerBrushBG;                                      // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Vignette;                                          // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RoyaleQualified_C*                 WBP_RoyaleQualified_92;                            // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EGymRuleParticipantState                      LastRuleStatus;                                    // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxDensity;                                        // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               VignetteDynamicMaterial;                           // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          TagState;                                          // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentOpacity;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetOpacity;                                     // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeSpeed;                                         // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGymGameState*                          GameState;                                         // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Cooldown;                                          // 0x0450(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Tag_on_Cooldown;                                // 0x0454(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGymPlayerController*                   PlayerController;                                  // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WBP_GymRuleStateWidgetBombMode(int32 EntryPoint);
	void GetGameState(class AGymGameState** State);
	void OnBombAssigned();
	void OnBombNotAssigned();
	void OnEliminated(const EEliminationReason EliminationReason);
	void OnFinished(bool bIsRoyale);
	void OnPlayerTagged(class AGymPlayerState* OtherPlayer, float Cooldown_0);
	void OnTaggedByPlayer(class AGymPlayerState* OtherPlayer);
	void PulseFunction(double X, double* Return);
	void Set_Bomb_Text();
	void Set_Round_Text();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TickUI();
	void TickVignette(double DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GymRuleStateWidgetBombMode_C">();
	}
	static class UWBP_GymRuleStateWidgetBombMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GymRuleStateWidgetBombMode_C>();
	}
};
static_assert(alignof(UWBP_GymRuleStateWidgetBombMode_C) == 0x000008, "Wrong alignment on UWBP_GymRuleStateWidgetBombMode_C");
static_assert(sizeof(UWBP_GymRuleStateWidgetBombMode_C) == 0x000460, "Wrong size on UWBP_GymRuleStateWidgetBombMode_C");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, UberGraphFrame) == 0x000340, "Member 'UWBP_GymRuleStateWidgetBombMode_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, TaggedFlamesAnim) == 0x000348, "Member 'UWBP_GymRuleStateWidgetBombMode_C::TaggedFlamesAnim' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, RunAwayNotifAnim) == 0x000350, "Member 'UWBP_GymRuleStateWidgetBombMode_C::RunAwayNotifAnim' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, TaggedNotifAnim) == 0x000358, "Member 'UWBP_GymRuleStateWidgetBombMode_C::TaggedNotifAnim' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, ShowStatusPanel) == 0x000360, "Member 'UWBP_GymRuleStateWidgetBombMode_C::ShowStatusPanel' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, AnnouncementGridBG) == 0x000368, "Member 'UWBP_GymRuleStateWidgetBombMode_C::AnnouncementGridBG' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, AnnouncementGridBG_1) == 0x000370, "Member 'UWBP_GymRuleStateWidgetBombMode_C::AnnouncementGridBG_1' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, BombTagIcon) == 0x000378, "Member 'UWBP_GymRuleStateWidgetBombMode_C::BombTagIcon' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, BombTagIcon_2) == 0x000380, "Member 'UWBP_GymRuleStateWidgetBombMode_C::BombTagIcon_2' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, BombText) == 0x000388, "Member 'UWBP_GymRuleStateWidgetBombMode_C::BombText' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, CheckpointBrushBG) == 0x000390, "Member 'UWBP_GymRuleStateWidgetBombMode_C::CheckpointBrushBG' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, GamePanel) == 0x000398, "Member 'UWBP_GymRuleStateWidgetBombMode_C::GamePanel' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, GymGuiPostflow) == 0x0003A0, "Member 'UWBP_GymRuleStateWidgetBombMode_C::GymGuiPostflow' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, RoundText) == 0x0003A8, "Member 'UWBP_GymRuleStateWidgetBombMode_C::RoundText' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, RuleStatusText) == 0x0003B0, "Member 'UWBP_GymRuleStateWidgetBombMode_C::RuleStatusText' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, RunawayContainer) == 0x0003B8, "Member 'UWBP_GymRuleStateWidgetBombMode_C::RunawayContainer' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, RunawayTextPlayer) == 0x0003C0, "Member 'UWBP_GymRuleStateWidgetBombMode_C::RunawayTextPlayer' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, RunawayTextRound) == 0x0003C8, "Member 'UWBP_GymRuleStateWidgetBombMode_C::RunawayTextRound' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, RunawayTexts) == 0x0003D0, "Member 'UWBP_GymRuleStateWidgetBombMode_C::RunawayTexts' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, TaggedContainer) == 0x0003D8, "Member 'UWBP_GymRuleStateWidgetBombMode_C::TaggedContainer' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, TaggedFlames) == 0x0003E0, "Member 'UWBP_GymRuleStateWidgetBombMode_C::TaggedFlames' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, TaggedText_Player) == 0x0003E8, "Member 'UWBP_GymRuleStateWidgetBombMode_C::TaggedText_Player' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, TaggedText_Round) == 0x0003F0, "Member 'UWBP_GymRuleStateWidgetBombMode_C::TaggedText_Round' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, TaggedTexts) == 0x0003F8, "Member 'UWBP_GymRuleStateWidgetBombMode_C::TaggedTexts' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, TimerBrushBG) == 0x000400, "Member 'UWBP_GymRuleStateWidgetBombMode_C::TimerBrushBG' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, Vignette) == 0x000408, "Member 'UWBP_GymRuleStateWidgetBombMode_C::Vignette' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, WBP_RoyaleQualified_92) == 0x000410, "Member 'UWBP_GymRuleStateWidgetBombMode_C::WBP_RoyaleQualified_92' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, LastRuleStatus) == 0x000418, "Member 'UWBP_GymRuleStateWidgetBombMode_C::LastRuleStatus' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, MaxDensity) == 0x00041C, "Member 'UWBP_GymRuleStateWidgetBombMode_C::MaxDensity' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, VignetteDynamicMaterial) == 0x000420, "Member 'UWBP_GymRuleStateWidgetBombMode_C::VignetteDynamicMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, TagState) == 0x000428, "Member 'UWBP_GymRuleStateWidgetBombMode_C::TagState' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, CurrentOpacity) == 0x000430, "Member 'UWBP_GymRuleStateWidgetBombMode_C::CurrentOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, TargetOpacity) == 0x000438, "Member 'UWBP_GymRuleStateWidgetBombMode_C::TargetOpacity' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, FadeSpeed) == 0x000440, "Member 'UWBP_GymRuleStateWidgetBombMode_C::FadeSpeed' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, GameState) == 0x000448, "Member 'UWBP_GymRuleStateWidgetBombMode_C::GameState' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, Cooldown) == 0x000450, "Member 'UWBP_GymRuleStateWidgetBombMode_C::Cooldown' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, Is_Tag_on_Cooldown) == 0x000454, "Member 'UWBP_GymRuleStateWidgetBombMode_C::Is_Tag_on_Cooldown' has a wrong offset!");
static_assert(offsetof(UWBP_GymRuleStateWidgetBombMode_C, PlayerController) == 0x000458, "Member 'UWBP_GymRuleStateWidgetBombMode_C::PlayerController' has a wrong offset!");

}

