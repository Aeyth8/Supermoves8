#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AssetPropertyEditorWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_EditorPiece_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AssetPropertyEditorWidget.WBP_AssetPropertyEditorWidget_C
// 0x0080 (0x0348 - 0x02C8)
class UWBP_AssetPropertyEditorWidget_C final : public UBP_EditorPiece_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_AssetPropertyEditorWidget_C;    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       AssetId;                                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       AssetName;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             AssetPropertyEditorBox;                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_49;                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_140;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGymStaticLevelAsset*                   CurrentAsset;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         CurrentHoveredSetting;                             // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGymGuiAssetPropertyEditorWidget*       CurrentHoveredWidget;                              // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Editing;                                           // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PropertyCount;                                     // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClosed;                                          // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsOpen;                                            // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LeftHeld;                                          // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RightHeld;                                         // 0x032A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockVariantChange;                                 // 0x032B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HoveredSettingBeforeVariantChange;                 // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitialPress;                                      // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GymEditorWidget_C*                  EditorWidget;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          PropertyCopyLock;                                  // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Close();
	void Construct();
	void CtxConfirm();
	void CtxDecline();
	void CtxDown();
	void CtxUp();
	void Event_Target_Asset_Recreated(class AGymStaticLevelAsset* NewAsset, const class FText& NewAssetName);
	void ExecuteUbergraph_WBP_AssetPropertyEditorWidget(int32 EntryPoint);
	void InpActEvt_ContextualLeft_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_ContextualLeft_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_ContextualRight_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_ContextualRight_K2Node_InputActionEvent_1(const struct FKey& Key);
	void IsValidSetting(bool* Yes);
	void OnClosed__DelegateSignature();
	void OnEditingEnded();
	void OnValueChanged(const struct FGymPropertyValues& PropertyValue);
	void Open();
	void SelectCurrentSetting();
	void Set_Asset_Name(const class FText& NewName);
	void UpdateProperties();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AssetPropertyEditorWidget_C">();
	}
	static class UWBP_AssetPropertyEditorWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AssetPropertyEditorWidget_C>();
	}
};
static_assert(alignof(UWBP_AssetPropertyEditorWidget_C) == 0x000008, "Wrong alignment on UWBP_AssetPropertyEditorWidget_C");
static_assert(sizeof(UWBP_AssetPropertyEditorWidget_C) == 0x000348, "Wrong size on UWBP_AssetPropertyEditorWidget_C");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, UberGraphFrame_WBP_AssetPropertyEditorWidget_C) == 0x0002C8, "Member 'UWBP_AssetPropertyEditorWidget_C::UberGraphFrame_WBP_AssetPropertyEditorWidget_C' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, AssetId) == 0x0002D0, "Member 'UWBP_AssetPropertyEditorWidget_C::AssetId' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, AssetName) == 0x0002D8, "Member 'UWBP_AssetPropertyEditorWidget_C::AssetName' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, AssetPropertyEditorBox) == 0x0002E0, "Member 'UWBP_AssetPropertyEditorWidget_C::AssetPropertyEditorBox' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, CommonTextBlock_49) == 0x0002E8, "Member 'UWBP_AssetPropertyEditorWidget_C::CommonTextBlock_49' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, Image_140) == 0x0002F0, "Member 'UWBP_AssetPropertyEditorWidget_C::Image_140' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, CurrentAsset) == 0x0002F8, "Member 'UWBP_AssetPropertyEditorWidget_C::CurrentAsset' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, CurrentHoveredSetting) == 0x000300, "Member 'UWBP_AssetPropertyEditorWidget_C::CurrentHoveredSetting' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, CurrentHoveredWidget) == 0x000308, "Member 'UWBP_AssetPropertyEditorWidget_C::CurrentHoveredWidget' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, Editing) == 0x000310, "Member 'UWBP_AssetPropertyEditorWidget_C::Editing' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, PropertyCount) == 0x000314, "Member 'UWBP_AssetPropertyEditorWidget_C::PropertyCount' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, OnClosed) == 0x000318, "Member 'UWBP_AssetPropertyEditorWidget_C::OnClosed' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, IsOpen) == 0x000328, "Member 'UWBP_AssetPropertyEditorWidget_C::IsOpen' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, LeftHeld) == 0x000329, "Member 'UWBP_AssetPropertyEditorWidget_C::LeftHeld' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, RightHeld) == 0x00032A, "Member 'UWBP_AssetPropertyEditorWidget_C::RightHeld' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, LockVariantChange) == 0x00032B, "Member 'UWBP_AssetPropertyEditorWidget_C::LockVariantChange' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, HoveredSettingBeforeVariantChange) == 0x00032C, "Member 'UWBP_AssetPropertyEditorWidget_C::HoveredSettingBeforeVariantChange' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, InitialPress) == 0x000330, "Member 'UWBP_AssetPropertyEditorWidget_C::InitialPress' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, EditorWidget) == 0x000338, "Member 'UWBP_AssetPropertyEditorWidget_C::EditorWidget' has a wrong offset!");
static_assert(offsetof(UWBP_AssetPropertyEditorWidget_C, PropertyCopyLock) == 0x000340, "Member 'UWBP_AssetPropertyEditorWidget_C::PropertyCopyLock' has a wrong offset!");

}

