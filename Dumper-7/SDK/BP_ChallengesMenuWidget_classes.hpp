#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChallengesMenuWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "GYMGAME_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ChallengesMenuWidget.BP_ChallengesMenuWidget_C
// 0x0070 (0x03A0 - 0x0330)
class UBP_ChallengesMenuWidget_C final : public UGymGuiMetaWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UScrollBox*                             Challenges_Scrollbox;                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWrapBox*                               Challenges_WrapBox;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHeader_Style1_C*                       Header_Style1;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_205;                                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ResetTimer;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      Spinner;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ChallengesTabs_C*                  WBP_ChallengesTabs;                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         TabIndex;                                          // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGymCHallengeResponse                  Challenges;                                        // 0x0380(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BPOpen();
	void ExecuteUbergraph_BP_ChallengesMenuWidget(int32 EntryPoint);
	class FText Get_ResetTimer_Text();
	void InpActEvt_UIGamepadDown_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_UIGamepadLeft_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_UIGamepadRight_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_UIGamepadSubmenuTabLeft_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_UIGamepadSubmenuTabRight_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_UIGamepadUp_K2Node_InputActionEvent_3(const struct FKey& Key);
	void OnChallengesReceived(bool Success, const struct FGymCHallengeResponse& Challenges_0);
	void OnTabButtonSelected_Event(int32 Index_0);
	void SimulateTabButtonClick(class UWBP_TabButton_C* TabButton);
	void TryClaim(const struct FGymChallenge& Challenge);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChallengesMenuWidget_C">();
	}
	static class UBP_ChallengesMenuWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ChallengesMenuWidget_C>();
	}
};
static_assert(alignof(UBP_ChallengesMenuWidget_C) == 0x000008, "Wrong alignment on UBP_ChallengesMenuWidget_C");
static_assert(sizeof(UBP_ChallengesMenuWidget_C) == 0x0003A0, "Wrong size on UBP_ChallengesMenuWidget_C");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, UberGraphFrame) == 0x000330, "Member 'UBP_ChallengesMenuWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, Challenges_Scrollbox) == 0x000338, "Member 'UBP_ChallengesMenuWidget_C::Challenges_Scrollbox' has a wrong offset!");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, Challenges_WrapBox) == 0x000340, "Member 'UBP_ChallengesMenuWidget_C::Challenges_WrapBox' has a wrong offset!");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, Header_Style1) == 0x000348, "Member 'UBP_ChallengesMenuWidget_C::Header_Style1' has a wrong offset!");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, Image) == 0x000350, "Member 'UBP_ChallengesMenuWidget_C::Image' has a wrong offset!");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, Image_205) == 0x000358, "Member 'UBP_ChallengesMenuWidget_C::Image_205' has a wrong offset!");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, ResetTimer) == 0x000360, "Member 'UBP_ChallengesMenuWidget_C::ResetTimer' has a wrong offset!");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, Spinner) == 0x000368, "Member 'UBP_ChallengesMenuWidget_C::Spinner' has a wrong offset!");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, WBP_ChallengesTabs) == 0x000370, "Member 'UBP_ChallengesMenuWidget_C::WBP_ChallengesTabs' has a wrong offset!");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, TabIndex) == 0x000378, "Member 'UBP_ChallengesMenuWidget_C::TabIndex' has a wrong offset!");
static_assert(offsetof(UBP_ChallengesMenuWidget_C, Challenges) == 0x000380, "Member 'UBP_ChallengesMenuWidget_C::Challenges' has a wrong offset!");

}

