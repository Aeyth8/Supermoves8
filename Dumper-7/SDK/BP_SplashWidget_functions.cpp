#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplashWidget

#include "Basic.hpp"

#include "BP_SplashWidget_classes.hpp"
#include "BP_SplashWidget_parameters.hpp"


namespace SDK
{

// Function BP_SplashWidget.BP_SplashWidget_C.ShowAnyKeyPrompt
// (BlueprintCallable, BlueprintEvent)

void UBP_SplashWidget_C::ShowAnyKeyPrompt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplashWidget_C", "ShowAnyKeyPrompt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplashWidget.BP_SplashWidget_C.PlaybackPrecent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundWave*                       PlayingSoundWave                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   PlaybackPercent                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SplashWidget_C::PlaybackPrecent(const class USoundWave* PlayingSoundWave, const float PlaybackPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplashWidget_C", "PlaybackPrecent");

	Params::BP_SplashWidget_C_PlaybackPrecent Parms{};

	Parms.PlayingSoundWave = PlayingSoundWave;
	Parms.PlaybackPercent = PlaybackPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SplashWidget.BP_SplashWidget_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_SplashWidget_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplashWidget_C", "OnMouseButtonUp");

	Params::BP_SplashWidget_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SplashWidget.BP_SplashWidget_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_SplashWidget_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplashWidget_C", "OnKeyDown");

	Params::BP_SplashWidget_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SplashWidget.BP_SplashWidget_C.OnAnyKey__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_SplashWidget_C::OnAnyKey__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplashWidget_C", "OnAnyKey__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplashWidget.BP_SplashWidget_C.ExecuteUbergraph_BP_SplashWidget
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SplashWidget_C::ExecuteUbergraph_BP_SplashWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplashWidget_C", "ExecuteUbergraph_BP_SplashWidget");

	Params::BP_SplashWidget_C_ExecuteUbergraph_BP_SplashWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SplashWidget.BP_SplashWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_SplashWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplashWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SplashWidget.BP_SplashWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_SplashWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SplashWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}

}

