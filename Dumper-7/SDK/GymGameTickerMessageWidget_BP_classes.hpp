#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GymGameTickerMessageWidget_BP

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "GYMGAME_structs.hpp"
#include "GYMGAME_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass GymGameTickerMessageWidget_BP.GymGameTickerMessageWidget_BP_C
// 0x0028 (0x0390 - 0x0368)
class UGymGameTickerMessageWidget_BP_C final : public UGymGuiTickerMessageWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CloseAnim;                                         // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpenLeft;                                          // 0x0378(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpenRight;                                         // 0x0380(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_0;                                  // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GymGameTickerMessageWidget_BP(int32 EntryPoint);
	class UTexture2D* GetTexture(const class FString& IconTextureId);
	void TickerPopout();
	void TickerPopup();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GymGameTickerMessageWidget_BP_C">();
	}
	static class UGymGameTickerMessageWidget_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGymGameTickerMessageWidget_BP_C>();
	}
};
static_assert(alignof(UGymGameTickerMessageWidget_BP_C) == 0x000008, "Wrong alignment on UGymGameTickerMessageWidget_BP_C");
static_assert(sizeof(UGymGameTickerMessageWidget_BP_C) == 0x000390, "Wrong size on UGymGameTickerMessageWidget_BP_C");
static_assert(offsetof(UGymGameTickerMessageWidget_BP_C, UberGraphFrame) == 0x000368, "Member 'UGymGameTickerMessageWidget_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGymGameTickerMessageWidget_BP_C, CloseAnim) == 0x000370, "Member 'UGymGameTickerMessageWidget_BP_C::CloseAnim' has a wrong offset!");
static_assert(offsetof(UGymGameTickerMessageWidget_BP_C, OpenLeft) == 0x000378, "Member 'UGymGameTickerMessageWidget_BP_C::OpenLeft' has a wrong offset!");
static_assert(offsetof(UGymGameTickerMessageWidget_BP_C, OpenRight) == 0x000380, "Member 'UGymGameTickerMessageWidget_BP_C::OpenRight' has a wrong offset!");
static_assert(offsetof(UGymGameTickerMessageWidget_BP_C, BackgroundBlur_0) == 0x000388, "Member 'UGymGameTickerMessageWidget_BP_C::BackgroundBlur_0' has a wrong offset!");

}

